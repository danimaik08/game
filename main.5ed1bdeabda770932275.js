(()=>{"use strict";var e={6882:(e,t,n)=>{n.d(t,{A:()=>pt});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i),s=n(4417),l=n.n(s),c=new URL(n(1338),n.b),p=new URL(n(4878),n.b),f=new URL(n(8148),n.b),u=new URL(n(1140),n.b),d=new URL(n(9456),n.b),m=new URL(n(1388),n.b),h=new URL(n(8074),n.b),b=new URL(n(6202),n.b),A=new URL(n(7068),n.b),y=new URL(n(5328),n.b),g=new URL(n(7046),n.b),w=new URL(n(9830),n.b),_=new URL(n(7331),n.b),R=new URL(n(5571),n.b),v=new URL(n(3899),n.b),C=new URL(n(1669),n.b),I=new URL(n(7479),n.b),E=new URL(n(1967),n.b),B=new URL(n(9375),n.b),x=new URL(n(9449),n.b),T=new URL(n(7016),n.b),S=new URL(n(676),n.b),O=new URL(n(7682),n.b),U=new URL(n(690),n.b),k=new URL(n(3754),n.b),M=new URL(n(382),n.b),D=new URL(n(1892),n.b),L=new URL(n(3828),n.b),P=new URL(n(9564),n.b),N=new URL(n(1312),n.b),F=new URL(n(5766),n.b),$=new URL(n(2918),n.b),j=new URL(n(9212),n.b),H=new URL(n(3520),n.b),G=new URL(n(6646),n.b),K=new URL(n(8678),n.b),V=new URL(n(7239),n.b),z=new URL(n(7535),n.b),q=new URL(n(5823),n.b),W=new URL(n(8681),n.b),X=new URL(n(5625),n.b),Y=new URL(n(961),n.b),Z=new URL(n(1457),n.b),J=new URL(n(8403),n.b),Q=new URL(n(6272),n.b),ee=new URL(n(9484),n.b),te=new URL(n(7274),n.b),ne=new URL(n(3018),n.b),oe=a()(r()),re=l()(c),ie=l()(c,{hash:"?#iefix"}),ae=l()(p),se=l()(f),le=l()(u),ce=l()(d),pe=l()(d,{hash:"?#iefix"}),fe=l()(m),ue=l()(h),de=l()(b),me=l()(A),he=l()(A,{hash:"?#iefix"}),be=l()(y),Ae=l()(g),ye=l()(w),ge=l()(_),we=l()(_,{hash:"?#iefix"}),_e=l()(R),Re=l()(v),ve=l()(C),Ce=l()(I),Ie=l()(I,{hash:"?#iefix"}),Ee=l()(E),Be=l()(B),xe=l()(x),Te=l()(T),Se=l()(T,{hash:"?#iefix"}),Oe=l()(S),Ue=l()(O),ke=l()(U),Me=l()(k),De=l()(k,{hash:"?#iefix"}),Le=l()(M),Pe=l()(D),Ne=l()(L),Fe=l()(P),$e=l()(P,{hash:"?#iefix"}),je=l()(N),He=l()(F),Ge=l()($),Ke=l()(j),Ve=l()(j,{hash:"?#iefix"}),ze=l()(H),qe=l()(G),We=l()(K),Xe=l()(V),Ye=l()(V,{hash:"?#iefix"}),Ze=l()(z),Je=l()(q),Qe=l()(W),et=l()(X),tt=l()(X,{hash:"?#iefix"}),nt=l()(Y),ot=l()(Z),rt=l()(J),it=l()(Q),at=l()(Q,{hash:"?#iefix"}),st=l()(ee),lt=l()(te),ct=l()(ne);oe.push([e.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${re});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${ie}) format('embedded-opentype'),\n        url(${ae}) format('woff2'),\n        url(${se}) format('woff'),\n        url(${le}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ce});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${pe}) format('embedded-opentype'),\n        url(${fe}) format('woff2'),\n        url(${ue}) format('woff'),\n        url(${de}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${me});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${he}) format('embedded-opentype'),\n        url(${be}) format('woff2'),\n        url(${Ae}) format('woff'),\n        url(${ye}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ge});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${we}) format('embedded-opentype'),\n        url(${_e}) format('woff2'),\n        url(${Re}) format('woff'),\n        url(${ve}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ce});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${Ie}) format('embedded-opentype'),\n        url(${Ee}) format('woff2'),\n        url(${Be}) format('woff'),\n        url(${xe}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Te});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Se}) format('embedded-opentype'),\n        url(${Oe}) format('woff2'),\n        url(${Ue}) format('woff'),\n        url(${ke}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Me});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${De}) format('embedded-opentype'),\n        url(${Le}) format('woff2'),\n        url(${Pe}) format('woff'),\n        url(${Ne}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Fe});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${$e}) format('embedded-opentype'),\n        url(${je}) format('woff2'),\n        url(${He}) format('woff'),\n        url(${Ge}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ke});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${Ve}) format('embedded-opentype'),\n        url(${ze}) format('woff2'),\n        url(${qe}) format('woff'),\n        url(${We}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Xe});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Ye}) format('embedded-opentype'),\n        url(${Ze}) format('woff2'),\n        url(${Je}) format('woff'),\n        url(${Qe}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${et});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${tt}) format('embedded-opentype'),\n        url(${nt}) format('woff2'),\n        url(${ot}) format('woff'),\n        url(${rt}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${it});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${at}) format('embedded-opentype'),\n        url(${st}) format('woff2'),\n        url(${lt}) format('woff'),\n        url(${ct}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const pt=oe},6523:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([e.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const s=a},6314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var p=[].concat(e[c]);o&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),t.push(p))}},t}},4417:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},1354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},5072:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var l=e[s],c=o.base?l[0]+o.base:l[0],p=i[c]||0,f="".concat(c," ").concat(p);i[c]=p+1;var u=n(f),d={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)t[u].references++,t[u].updater(d);else{var m=r(d,o);o.byIndex=s,t.splice(s,0,{identifier:f,updater:m,references:1})}a.push(f)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=n(i[a]);t[s].references--}for(var l=o(e,r),c=0;c<i.length;c++){var p=n(i[c]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}i=l}}},7659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},5056:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},1113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},3754:(e,t,n)=>{e.exports=n.p+"d747b63eb41cdc64e3dd.eot"},3828:(e,t,n)=>{e.exports=n.p+"8e5479279b074720e15f.ttf"},1892:(e,t,n)=>{e.exports=n.p+"88d7f1b3ca9a9494d8e3.woff"},382:(e,t,n)=>{e.exports=n.p+"ae0c1d409f7d45d81c29.woff2"},1338:(e,t,n)=>{e.exports=n.p+"32f9679ea3ede2ca14de.eot"},1140:(e,t,n)=>{e.exports=n.p+"508cb30d2090ab879d2f.ttf"},8148:(e,t,n)=>{e.exports=n.p+"3123587706218b4d8187.woff"},4878:(e,t,n)=>{e.exports=n.p+"71b2b84d5d1a55271b57.woff2"},9456:(e,t,n)=>{e.exports=n.p+"6490694b37b0ee09bd91.eot"},6202:(e,t,n)=>{e.exports=n.p+"5e9f6556d3c0bf6230f0.ttf"},8074:(e,t,n)=>{e.exports=n.p+"3f2cbde6b72e8d05669f.woff"},1388:(e,t,n)=>{e.exports=n.p+"6cd35edfbc0d7a417131.woff2"},7068:(e,t,n)=>{e.exports=n.p+"e5f75ce1f7e72a64d436.eot"},9830:(e,t,n)=>{e.exports=n.p+"1e46c5294501ef46e23b.ttf"},7046:(e,t,n)=>{e.exports=n.p+"997a1e8970d2b7e50fff.woff"},5328:(e,t,n)=>{e.exports=n.p+"74126ecd07ad0d25d3f6.woff2"},5625:(e,t,n)=>{e.exports=n.p+"7588d6373c3525bc74cd.eot"},8403:(e,t,n)=>{e.exports=n.p+"4302c2e2c9e789c4c7ea.ttf"},1457:(e,t,n)=>{e.exports=n.p+"0d0bf30e7eeb4f6e7fd5.woff"},961:(e,t,n)=>{e.exports=n.p+"007ccbd3e8708c6afef8.woff2"},7239:(e,t,n)=>{e.exports=n.p+"d592a653abb7a57fedd8.eot"},8681:(e,t,n)=>{e.exports=n.p+"13d61ef8e609b548d9b5.ttf"},5823:(e,t,n)=>{e.exports=n.p+"df0f59d80526acc6d0cd.woff"},7535:(e,t,n)=>{e.exports=n.p+"d537674e9e217fa53a13.woff2"},7331:(e,t,n)=>{e.exports=n.p+"0ad9ca04101ace1b39d1.eot"},1669:(e,t,n)=>{e.exports=n.p+"ca7144f68f54653d3728.ttf"},3899:(e,t,n)=>{e.exports=n.p+"3c494714cdd1de859813.woff"},5571:(e,t,n)=>{e.exports=n.p+"6006fa5b67e554e06562.woff2"},6272:(e,t,n)=>{e.exports=n.p+"f9f0c87146a33023da7e.eot"},3018:(e,t,n)=>{e.exports=n.p+"ef677e217f2009c16854.ttf"},7274:(e,t,n)=>{e.exports=n.p+"b14ca2d2b289afceb0b0.woff"},9484:(e,t,n)=>{e.exports=n.p+"fc0337b9cf1cce2e6e1e.woff2"},9564:(e,t,n)=>{e.exports=n.p+"c000f0984de5d20c8eab.eot"},2918:(e,t,n)=>{e.exports=n.p+"ff1379d2f5bd26261cb2.ttf"},5766:(e,t,n)=>{e.exports=n.p+"9a91a0398c5cb21f0199.woff"},1312:(e,t,n)=>{e.exports=n.p+"ace58ae211415a1f378b.woff2"},7479:(e,t,n)=>{e.exports=n.p+"30b57652c88c5dbd65de.eot"},9449:(e,t,n)=>{e.exports=n.p+"25e40da956314b12d333.ttf"},9375:(e,t,n)=>{e.exports=n.p+"31012f9b3e3da44f87e8.woff"},1967:(e,t,n)=>{e.exports=n.p+"a25806274237d06e00a6.woff2"},9212:(e,t,n)=>{e.exports=n.p+"ae807ad4142f3eae2e0c.eot"},8678:(e,t,n)=>{e.exports=n.p+"7d12c80b1925091e4fec.ttf"},6646:(e,t,n)=>{e.exports=n.p+"674b1d2bd9d781457c17.woff"},3520:(e,t,n)=>{e.exports=n.p+"0b33782009e32497dba2.woff2"},7016:(e,t,n)=>{e.exports=n.p+"bc4d192a93ba33f68109.eot"},690:(e,t,n)=>{e.exports=n.p+"491dd1cc3dfda2b79d09.ttf"},7682:(e,t,n)=>{e.exports=n.p+"d5937d18c46d7ae260b6.woff"},676:(e,t,n)=>{e.exports=n.p+"3669a8fac8736f85a7f1.woff2"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0;var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),l=n.n(s),c=n(5056),p=n.n(c),f=n(540),u=n.n(f),d=n(1113),m=n.n(d),h=n(6523),b={};b.styleTagTransform=m(),b.setAttributes=p(),b.insert=l().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u(),r()(h.A,b),h.A&&h.A.locals&&h.A.locals;var A=n(6882),y={};y.styleTagTransform=m(),y.setAttributes=p(),y.insert=l().bind(null,"head"),y.domAPI=a(),y.insertStyleElement=u(),r()(A.A,y),A.A&&A.A.locals&&A.A.locals;const g=function(){function e(t){return this.renderAPI=null,e.instance||(this.renderAPI=t,e.instance=this),e.instance}return e.prototype.handleErrorsForDestroy=function(){if(!{KEY_TOP:"W",KEY_LEFT:"A",KEY_BOTTOM:"S",KEY_RIGHT:"D",KEY_ATTACK:"K",TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",SHELL:"/bin/zsh",TERM:"xterm-256color",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",MallocNanoZone:"0",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",ZDOTDIR:"/Users/sunlight",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",USER_ZDOTDIR:"/Users/sunlight",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",XPC_FLAGS:"0x0",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",VSCODE_INJECTION:"1",HOME:"/Users/sunlight",SHLVL:"3",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},e.prototype.render=function(){this.renderAPI.renderGameWindow()},e.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,e.instance=null},e.instance=null,e}(),w=function(){function e(e,t){this.x=e,this.y=t}return e.prototype.clone=function(){return new e(this.x,this.y)},e}(),_=function(){function e(e,t){this.width=e,this.height=t}return e.prototype.clone=function(){return new e(this.width,this.height)},e}(),R=function(){function e(e,t){this.x=e,this.y=t}return e.prototype.clone=function(){return new e(this.x,this.y)},e}();var v=800,C=new w(380,500),I=new _(34,47),E=new R(0,0),B=new w(350,50),x=new _(100,100),T=new R(4,0),S=new _(30,27),O=new _(14,14);const U=function(){function e(t){return void 0===t&&(t=33),e.instance||(this.lastFrameTime=Date.now(),this.frameDuration=t,e.instance=this),e.instance}return e.prototype.start=function(e){var t=this,n=function(){var o=Date.now();t.lastFrameTime+t.frameDuration<=o&&(t.lastFrameTime=o,e()),requestAnimationFrame(n)};n()},e}();var k="root",M="game-window";const D=function(){function e(){return e.instance||(e.instance=this),e.instance}return e.instance=null,e}();var L="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),P="\n  width: ".concat(v,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n");function N(e,t){e.id=t,{KEY_TOP:"W",KEY_LEFT:"A",KEY_BOTTOM:"S",KEY_RIGHT:"D",KEY_ATTACK:"K",TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",SHELL:"/bin/zsh",TERM:"xterm-256color",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",MallocNanoZone:"0",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",ZDOTDIR:"/Users/sunlight",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",USER_ZDOTDIR:"/Users/sunlight",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",XPC_FLAGS:"0x0",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",VSCODE_INJECTION:"1",HOME:"/Users/sunlight",SHLVL:"3",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(e.dataset.testid=t)}function F(){var e=document.getElementById(k);if(!e)throw new Error('BrowserAPI Error: method "'.concat(F.name,'" - root not found'));var t=document.createElement("div");N(t,M),t.setAttribute("style",P),e.appendChild(t)}const $=function(){function e(e){this.gameObjectAPI=e,this.innerElement=null}return Object.defineProperty(e.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.gameObjectAPI.id},enumerable:!1,configurable:!0}),e.prototype.createElement=function(){this.innerElement=document.createElement("div")},e.prototype.setElement=function(e){this.innerElement=e},Object.defineProperty(e.prototype,"css",{get:function(){var e=this.gameObjectAPI,t=e.point,n=e.size,o=e.background,r=e.zIndex;return"\n    position: absolute;\n    top: ".concat(t.y,"px;\n    left: ").concat(t.x,"px;\n    z-index: ").concat(r,";\n    width: ").concat(n.width,"px;\n    height: ").concat(n.height,"px;\n    background: ").concat(o,";\n    ")},enumerable:!1,configurable:!0}),e.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css)},e}();var j,H=(j=function(e,t){return j=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},j(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}j(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});const G=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.elementsMap={},t}return H(t,e),Object.defineProperty(t.prototype,"window",{get:function(){var e=document.getElementById(M);if(!e)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return e},enumerable:!1,configurable:!0}),t.prototype.renderGameWindow=function(){var e,t;e=document.querySelector("body"),N(t=document.createElement("div"),k),t.setAttribute("style",L),e.appendChild(t),F()},t.prototype.clearAll=function(){document.body.innerHTML=""},t.prototype.mount=function(e){var t=new $(e);t.createElement(),t.applyActualChange(),this.window.appendChild(t.element),this.elementsMap[t.id]=t},t.prototype.update=function(e){var t=new $(e),n=this.elementsMap[e.id];t.setElement(n.element),t.applyActualChange(),this.window.appendChild(t.element),this.elementsMap[e.id]=t},t.prototype.unmount=function(e){this.elementsMap[e.id].element.remove(),delete this.elementsMap[e.id]},t.prototype.render=function(e){var t=this;e.forEach((function(e){switch(e.action){case"mount":t.mount(e);break;case"unmount":t.unmount(e);break;default:t.update(e)}}))},t}(D);var K=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const V=function(e){function t(){return e.call(this)||this}return K(t,e),t.prototype.renderGameWindow=function(){console.log("renderGameWindow")},t.prototype.clearAll=function(){console.log("clearAll")},t.prototype.render=function(e){console.log("render")},t}(D);const z=function(){function e(){return e.instance||(this.prevElementsMap={},this.nextElementsMap={},e.instance=this),e.instance}return e.prototype.addElement=function(e){this.nextElementsMap[e.id]=e},e.prototype.getAllIdsFromMaps=function(){var e=new Set;for(var t in this.prevElementsMap)e.add(t);for(var t in this.nextElementsMap)e.add(t);return e},e.prototype.getChanges=function(){var e=this,t=this.getAllIdsFromMaps(),n=[];return t.forEach((function(t){var o,r,i=null!==(o=e.prevElementsMap[t])&&void 0!==o?o:null,a=null!==(r=e.nextElementsMap[t])&&void 0!==r?r:null;i?a?n.push(a):n.push({id:i.id,point:i.point,size:i.size,background:i.background,zIndex:i.zIndex,action:"unmount"}):n.push({id:a.id,point:a.point,size:a.size,background:a.background,zIndex:a.zIndex,action:"mount"})})),n},e.prototype.prepareForNewFrame=function(){this.prevElementsMap=this.nextElementsMap,this.nextElementsMap={}},e}(),q=function(){function e(){return e.instance||(this.keys=new Set,e.instance=this),e.instance}return e.prototype.addEventListeners=function(){var e=this;document.addEventListener("keydown",(function(t){e.keys.add(t.key.toUpperCase())})),document.addEventListener("keyup",(function(t){e.keys.delete(t.key.toUpperCase())}))},e.prototype.isActiveKey=function(e){return this.keys.has(e)},e}(),W=function(){function e(){return e.instance||(this.innerBullets=[],e.instance=this),e.instance}return e.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(e){return!(e.point.x+e.size.width<0||e.point.x>v||e.point.y+e.size.height<0||e.point.y>600)}))},e.prototype.addElement=function(e){this.innerBullets.push(e)},e.prototype.removeElement=function(e){this.innerBullets=this.innerBullets.filter((function(t){return t.id!==e.id}))},Object.defineProperty(e.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),e}(),X=function(){function e(e,t){this.target=e,this.bulletType=t,this.bulletsStore=new W}return e.prototype.tryToCollide=function(e){var t=this;this.bulletsStore.bullets.forEach((function(n){t.bulletType===n.type&&function(e,t){var n=e.point.x,o=e.point.x+e.size.width,r=t.point.x,i=t.point.x+t.size.width;if(n>=r&&n<=i||o>=r&&o<=i){var a=e.point.y,s=e.point.y+e.size.height,l=t.point.y,c=t.point.y+t.size.height;if(a>=l&&a<=c||s>=l&&s<=c)return!0}return!1}(n,t.target)&&(e(),t.bulletsStore.removeElement(n))}))},e}();var Y,Z;const J=(Y="",Z=0,function(){var e=Date.now()+"";return Y===e?(Z++,Y+" "+Z):(Y=e,e)});const Q=function(){function e(e,t,n,o){void 0===n&&(n=""),void 0===o&&(o=1),this.innerId=J(),this.innerPoint=e,this.innerSize=t,this.innerBackground=n,this.innerZIndex=o}return Object.defineProperty(e.prototype,"id",{get:function(){return this.innerId},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"point",{get:function(){return this.innerPoint},set:function(e){this.innerPoint=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"size",{get:function(){return this.innerSize},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"background",{get:function(){return this.innerBackground},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"zIndex",{get:function(){return this.innerZIndex},enumerable:!1,configurable:!0}),e}();var ee=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const te=function(e){function t(t,n,o,r,i){var a=e.call(this,t,n,r,i)||this;return a.innerSpeed=o,a}return ee(t,e),t.prototype.move=function(){this.point=new w(this.point.x+this.speed.x,this.point.y+this.speed.y)},Object.defineProperty(t.prototype,"speed",{get:function(){return this.innerSpeed},set:function(e){this.innerSpeed=e},enumerable:!1,configurable:!0}),t}(Q),ne=4,oe=5,re=6,ie=7,ae=n.p+"f6daa77bf4e4dd5f7f9f.png",se=n.p+"51183ae04093a5b578b5.png",le=function(){function e(t,n,o){this.innerType=t,this.virtualDOM=new z,this.sprite=e.createInitialSprite(this.innerType,n,o)}return e.createInitialSprite=function(e,t,n){return new te(t.clone(),O.clone(),n.clone(),"url(".concat("enemy"===e?ae:se,")"),3)},Object.defineProperty(e.prototype,"point",{get:function(){return this.sprite.point},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"size",{get:function(){return this.sprite.size},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.sprite.id},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"type",{get:function(){return this.innerType},enumerable:!1,configurable:!0}),e.prototype.processMovement=function(){this.sprite.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.sprite)},e.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},e}(),ce=n.p+"7467a9e3d648bcc674d6.png",pe=n.p+"3d38fa44a32629a1f955.png",fe=function(){function e(){return e.instance||(this.innerPlayerHealth=3,this.innerEnemyHealth=400,this.virtualDOM=new z,e.instance=this),e.instance}return e.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(new Q(new w(0,0),new _(v,29),"#009",ne))},e.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(new Q(new w(0,0),new _(400,29),"#000",oe))},e.prototype.addToRenderEnemyHealth=function(){this.virtualDOM.addElement(new Q(new w(0,0),new _(this.innerEnemyHealth,29),"#f00",re))},e.prototype.addToRenderPlayerHealth=function(){for(var e=1;e<=3;e++){var t=this.innerPlayerHealth>=e,n=new w(v-(1+S.width)*e,1);this.virtualDOM.addElement(new Q(n,S,"url(".concat(t?ce:pe,")"),ie))}},Object.defineProperty(e.prototype,"playerHealth",{get:function(){return this.innerPlayerHealth},set:function(e){this.innerPlayerHealth=e>=0?e:0},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"enemyHealth",{get:function(){return this.innerEnemyHealth},set:function(e){this.innerEnemyHealth=e>=0?e:0},enumerable:!1,configurable:!0}),e.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},e}(),ue=n.p+"98ce5afade1e5dcf76f2.png";const de=function(){function e(){return e.instance||(this.state="before-playing",this.virtualDOM=new z,this.keyboardController=new q,this.keyboardController.addEventListeners(),this.sprite=null,this.bulletsCollider=null,this.bulletsStore=new W,this.frameBehavior=function(){},this.lastAttackTime=Date.now()-500,this.timer=null,this.lifebar=new fe,e.instance=this),e.instance}return Object.defineProperty(e.prototype,"state",{get:function(){return this.innerState},set:function(e){var t,n,o=this;switch(e){case"before-playing":break;case"playing":null!==(t=this.sprite)&&void 0!==t||(this.sprite=new te(C.clone(),I.clone(),E.clone(),"url(".concat(ue,")"),2)),null!==(n=this.bulletsCollider)&&void 0!==n||(this.bulletsCollider=new X(this.sprite,"enemy")),this.frameBehavior=function(){o.processMovement(),o.addToNextRender(),o.registerDamage(),o.attack()};break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){o.state="playing"}),1e3),this.frameBehavior=function(){o.processMovement(),o.addToNextRender()};break;case"before-dead":this.frameBehavior=function(){},this.state="dead";break;case"dead":this.frameBehavior=function(){}}this.innerState=e},enumerable:!1,configurable:!0}),e.prototype.processMovement=function(){var e,t,n,o,r,i,a,s;this.sprite.speed=(e=this.sprite,t=this.keyboardController,n=e.point.y<=350,o=e.point.x<=0,r=e.point.y>=600-e.size.height,i=e.point.x>=v-e.size.width,a=0,s=0,t.isActiveKey("W")&&!n&&(s=-4),t.isActiveKey("A")&&!o&&(a=-4),t.isActiveKey("S")&&!r&&(s=4),t.isActiveKey("D")&&!i&&(a=4),new R(a,s)),this.sprite.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.sprite)},e.prototype.registerDamage=function(){var e=this;this.bulletsCollider.tryToCollide((function(){e.lifebar.playerHealth-=1,e.lifebar.playerHealth?e.state="playing-after-damage":e.state="before-dead"}))},e.prototype.attack=function(){var e=Date.now();e>this.lastAttackTime+500&&this.keyboardController.isActiveKey("K")&&(this.lastAttackTime=e,this.bulletsStore.addElement(new le("player",this.sprite.point.clone(),new R(0,-4))))},e.prototype.doFrameBehavior=function(){this.frameBehavior()},e}(),me=n.p+"49dc2035dd05181f3af7.png";const he=function(){function e(){return e.instance||(this.state="before-playing",this.virtualDOM=new z,this.sprite=null,this.bulletsCollider=null,this.frameBehavior=function(){},this.lastAttackTime=Date.now()-200,this.bulletsStore=new W,this.timer=null,this.lifebar=new fe,e.instance=this),e.instance}return e.prototype.processMovement=function(){var e,t,n;this.sprite.speed=(t=(e=this.sprite).point.x<=50,n=e.speed.x,t?(n=Math.abs(n),new R(n,e.speed.y)):e.point.x>=750-e.size.width?(n=-Math.abs(n),new R(n,e.speed.y)):e.speed),this.sprite.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.sprite)},e.prototype.registerDamage=function(){var e=this;this.bulletsCollider.tryToCollide((function(){e.lifebar.enemyHealth-=10,e.lifebar.enemyHealth?e.state="playing-after-damage":e.state="before-dead"}))},e.prototype.attack=function(){var e,t,n,o=Date.now();o>this.lastAttackTime+200&&(this.lastAttackTime=o,this.bulletsStore.addElement((e=this.sprite,t=new w(e.point.x+e.size.width/2,e.point.y+e.size.height),n=new R(Math.floor(10*Math.random())-5,3),new le("enemy",t,n))))},Object.defineProperty(e.prototype,"state",{get:function(){return this.innerState},set:function(e){var t,n,o=this;switch(e){case"before-playing":break;case"playing":null!==(t=this.sprite)&&void 0!==t||(this.sprite=new te(B.clone(),x.clone(),T.clone(),"url(".concat(me,")"),2)),null!==(n=this.bulletsCollider)&&void 0!==n||(this.bulletsCollider=new X(this.sprite,"player")),this.frameBehavior=function(){o.processMovement(),o.addToNextRender(),o.registerDamage(),o.attack()};break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){console.log("some action after damage"),o.state="playing"}),500),this.frameBehavior=function(){o.processMovement(),o.addToNextRender(),o.registerDamage(),o.attack()};break;case"before-dead":this.frameBehavior=function(){},this.state="dead";break;case"dead":this.frameBehavior=function(){}}this.innerState=e},enumerable:!1,configurable:!0}),e.prototype.doFrameBehavior=function(){this.frameBehavior()},e}();(new(function(){function e(){return e.instance||(this.renderAPI=function(){var e,t=null!==(e={KEY_TOP:"W",KEY_LEFT:"A",KEY_BOTTOM:"S",KEY_RIGHT:"D",KEY_ATTACK:"K",TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",SHELL:"/bin/zsh",TERM:"xterm-256color",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",MallocNanoZone:"0",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",ZDOTDIR:"/Users/sunlight",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",USER_ZDOTDIR:"/Users/sunlight",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",XPC_FLAGS:"0x0",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",VSCODE_INJECTION:"1",HOME:"/Users/sunlight",SHLVL:"3",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/A98F99AA-AD74-4675-A399-B19896CA6FC1/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==e?e:"browser";switch(t){case"browser":return new G;case"fake":return new V;default:throw new Error("Invalid env RENDER_API: ".concat(t))}}(),this.gameLoop=new U,this.virtualDOM=new z,this.playerState=new de,this.enemyState=new he,this.bulletsStore=new W,this.lifebar=new fe,e.instance=this),e.instance}return e.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},e.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(e){e.doFrameBehavior()}))},e.prototype.start=function(){var e=this;new g(this.renderAPI).render(),this.playerState.state="playing",this.enemyState.state="playing",this.gameLoop.start((function(){e.doBulletsFrameBehavior(),e.playerState.doFrameBehavior(),e.enemyState.doFrameBehavior(),e.lifebar.doFrameBehavior(),e.render()}))},e}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LmNzcyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2luZGV4LmNzcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2dhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2dhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9nYW1lL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9nYW1lL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9pbmRleC5jc3M/Y2ZlNCIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2ZvbnRzL3N0eWxlc2hlZXQuY3NzPzY0N2YiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9HYW1lV2luZG93L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUG9pbnQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9TaXplL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvU3BlZWQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb25zdHMudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9HYW1lTG9vcC9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL1JlbmRlckFQSS9jb25zdHMudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9SZW5kZXJBUEkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9SZW5kZXJBUEkvQnJvd3NlckFQSS9jc3MudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9SZW5kZXJBUEkvQnJvd3NlckFQSS9oZWxwZXIudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9SZW5kZXJBUEkvQnJvd3NlckFQSS9Ccm93c2VyQVBJVmlldy50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL1JlbmRlckFQSS9Ccm93c2VyQVBJL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL0Zha2VBUEkudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9WaXJ0dWFsRE9NL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvS2V5Ym9hcmRDb250cm9sbGVyL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQnVsbGV0c1N0b3JlL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQnVsbGV0c0NvbGxpZGVyL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQnVsbGV0c0NvbGxpZGVyL2hlbHBlci50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL3NoYXJlZC9nZXRVbmlxdWVJZC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0dhbWVPYmplY3QvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9Nb3ZhYmxlT2JqZWN0L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvekluZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQnVsbGV0L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvTGlmZWJhci9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL1BsYXllclN0YXRlL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUGxheWVyU3RhdGUvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvRW5lbXlTdGF0ZS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0VuZW15U3RhdGUvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9BcHAvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9SZW5kZXJBUEkvZ2V0UmVuZGVyQVBJLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQmxhY2tJdGFsaWMuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrSXRhbGljLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfM19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQmxhY2tJdGFsaWMudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGQuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGQud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZC53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGQudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzhfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGRJdGFsaWMuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzlfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGRJdGFsaWMud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTBfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGRJdGFsaWMud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZEl0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTJfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0SXRhbGljLmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xM19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTGlnaHRJdGFsaWMud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0SXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0SXRhbGljLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tUmVndWxhci5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVJlZ3VsYXIud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMThfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVJlZ3VsYXIud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tUmVndWxhci50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW5JdGFsaWMuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIxX19fID0gbmV3IFVSTChcIlJvYm90by1UaGluSXRhbGljLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIyX19fID0gbmV3IFVSTChcIlJvYm90by1UaGluSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjNfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW5JdGFsaWMudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI0X19fID0gbmV3IFVSTChcIlJvYm90by1CbGFjay5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI2X19fID0gbmV3IFVSTChcIlJvYm90by1CbGFjay53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI3X19fID0gbmV3IFVSTChcIlJvYm90by1CbGFjay50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjhfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bUl0YWxpYy5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjlfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bUl0YWxpYy53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzFfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bUl0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW4uZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMzX19fID0gbmV3IFVSTChcIlJvYm90by1UaGluLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM0X19fID0gbmV3IFVSTChcIlJvYm90by1UaGluLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW4udHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM2X19fID0gbmV3IFVSTChcIlJvYm90by1MaWdodC5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0LndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM4X19fID0gbmV3IFVSTChcIlJvYm90by1MaWdodC53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM5X19fID0gbmV3IFVSTChcIlJvYm90by1MaWdodC50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDBfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUl0YWxpYy5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDFfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUl0YWxpYy53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80Ml9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDNfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUl0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bS5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bS53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80Nl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bS50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzdfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF81X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF84X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEwX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF84X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEyX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMl9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xN19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEzX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE0X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE1X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE2X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE2X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIyX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIzX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMThfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI0X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI1X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI2X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjdfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjhfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjlfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNF9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI1X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI2X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI3X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI4X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI4X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM3X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM4X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM5X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQwX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQxX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNl9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80N19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM3X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80OF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM4X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80OV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM5X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQwX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQwX19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUyX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUzX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU0X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDNfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU1X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU2X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTdfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80NV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNThfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80Nl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTlfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80N19fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQmxhY2sgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tQmxhY2tJdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfM19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81X19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJvbGQnKSwgbG9jYWwoJ1JvYm90by1Cb2xkJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzZfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzhfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEwX19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJvbGQgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tQm9sZEl0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMV9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTJfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEzX19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE0X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTGlnaHQgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tTGlnaHRJdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTZfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE3X19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOF9fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOV9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjBfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8nKSwgbG9jYWwoJ1JvYm90by1SZWd1bGFyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIxX19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMl9fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjNfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjRfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI1X19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIFRoaW4gSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tVGhpbkl0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yNl9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI4X19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI5X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMF9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCbGFjaycpLCBsb2NhbCgnUm9ib3RvLUJsYWNrJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMxX19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMl9fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzNfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzRfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM1X19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIE1lZGl1bSBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1NZWRpdW1JdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzZfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM3X19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zOF9fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zOV9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDBfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gVGhpbicpLCBsb2NhbCgnUm9ib3RvLVRoaW4nKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDFfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQyX19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80M19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NF9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogMTAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTGlnaHQnKSwgbG9jYWwoJ1JvYm90by1MaWdodCcpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80Nl9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ4X19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ5X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MF9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1JdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTFfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUyX19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81M19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81NF9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTWVkaXVtJyksIGxvY2FsKCdSb2JvdG8tTWVkaXVtJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU2X19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81N19fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNThfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTlfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2ZvbnRzL3N0eWxlc2hlZXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLDRDQUFrQztJQUNsQzs7OztrRUFJb0Q7SUFDcEQsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw0Q0FBMkI7SUFDM0I7Ozs7a0VBSTZDO0lBQzdDLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQWlDO0lBQ2pDOzs7O21FQUltRDtJQUNuRCxpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUFrQztJQUNsQzs7OzttRUFJb0Q7SUFDcEQsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBOEI7SUFDOUI7Ozs7bUVBSWdEO0lBQ2hELG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQWlDO0lBQ2pDOzs7O21FQUltRDtJQUNuRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUE0QjtJQUM1Qjs7OzttRUFJOEM7SUFDOUMsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBbUM7SUFDbkM7Ozs7bUVBSXFEO0lBQ3JELGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQTJCO0lBQzNCOzs7O21FQUk2QztJQUM3QyxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUE0QjtJQUM1Qjs7OzttRUFJOEM7SUFDOUMsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBNkI7SUFDN0I7Ozs7bUVBSStDO0lBQy9DLG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQTZCO0lBQzdCOzs7O21FQUkrQztJQUMvQyxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCbGFjayBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1CbGFja0l0YWxpYycpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJsYWNrSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tQm9sZC5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJvbGQnKSwgbG9jYWwoJ1JvYm90by1Cb2xkJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQm9sZCBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1Cb2xkSXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZEl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIExpZ2h0IEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLUxpZ2h0SXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHRJdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1SZWd1bGFyLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8nKSwgbG9jYWwoJ1JvYm90by1SZWd1bGFyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1SZWd1bGFyLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1SZWd1bGFyLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLVRoaW5JdGFsaWMuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBUaGluIEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLVRoaW5JdGFsaWMnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVRoaW5JdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVRoaW5JdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVRoaW5JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogMTAwO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tQmxhY2suZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCbGFjaycpLCBsb2NhbCgnUm9ib3RvLUJsYWNrJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1CbGFjay5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2sud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1CbGFjay53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1CbGFjay50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBNZWRpdW0gSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tTWVkaXVtSXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bUl0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tVGhpbi5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIFRoaW4nKSwgbG9jYWwoJ1JvYm90by1UaGluJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tVGhpbi53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLUxpZ2h0LmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTGlnaHQnKSwgbG9jYWwoJ1JvYm90by1MaWdodCcpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUxpZ2h0LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHQud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogMzAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tSXRhbGljLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tSXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1JdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUl0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tTWVkaXVtLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTWVkaXVtJyksIGxvY2FsKCdSb2JvdG8tTWVkaXVtJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW0uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW0udHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgaHRtbCwgYm9keSB7XG4gIG1hcmdpbjogMDtcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9pbmRleC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxTQUFTO0FBQ1hcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCwgYm9keSB7XFxuICBtYXJnaW46IDA7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCAmJiBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PT0gJ1NDUklQVCcpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDc5MjogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXNoZWV0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlc2hlZXQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVXaW5kb3cge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogR2FtZVdpbmRvdyB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIHJlbmRlckFQSTogUmVuZGVyQVBJIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IocmVuZGVyQVBJOiBSZW5kZXJBUEkpIHtcbiAgICBpZiAoIUdhbWVXaW5kb3cuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMucmVuZGVyQVBJID0gcmVuZGVyQVBJO1xuICAgICAgR2FtZVdpbmRvdy5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIEdhbWVXaW5kb3cuaW5zdGFuY2U7XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZUVycm9yc0ZvckRlc3Ryb3koKSB7XG4gICAgaWYgKCFwcm9jZXNzLmVudi5JU19URVNUX01PREUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0dhbWVXaW5kb3cgRXJyb3I6IGNhbGxlZCBtZXRob2QgXCJkZXN0cm95XCIgKHdoaWNoIGZvciB0ZXN0cyBvbmx5ISkgbm90IGluIHRlc3RzJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMucmVuZGVyQVBJKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdHYW1lV2luZG93IEVycm9yOiBjYWxsZWQgbWV0aG9kIFwiZGVzdHJveVwiIHdpdGhvdXQgYWRkaW5nIG9mIHJlbmRlckFQSSdcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHJlbmRlcigpIHtcbiAgICB0aGlzLnJlbmRlckFQSS5yZW5kZXJHYW1lV2luZG93KCk7XG4gIH1cblxuICBwdWJsaWMgZGVzdHJveSgpIHtcbiAgICB0aGlzLmhhbmRsZUVycm9yc0ZvckRlc3Ryb3koKTtcbiAgICB0aGlzLnJlbmRlckFQSS5jbGVhckFsbCgpO1xuICAgIHRoaXMucmVuZGVyQVBJID0gbnVsbDtcbiAgICBHYW1lV2luZG93Lmluc3RhbmNlID0gbnVsbDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9pbnQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgeDogbnVtYmVyLCBwdWJsaWMgcmVhZG9ubHkgeTogbnVtYmVyKSB7fVxuXG4gIHB1YmxpYyBjbG9uZSgpOiBQb2ludCB7XG4gICAgcmV0dXJuIG5ldyBQb2ludCh0aGlzLngsIHRoaXMueSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNpemUge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgd2lkdGg6IG51bWJlciwgcHVibGljIHJlYWRvbmx5IGhlaWdodDogbnVtYmVyKSB7fVxuXG4gIHB1YmxpYyBjbG9uZSgpOiBTaXplIHtcbiAgICByZXR1cm4gbmV3IFNpemUodGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTcGVlZCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSB4OiBudW1iZXIsIHB1YmxpYyByZWFkb25seSB5OiBudW1iZXIpIHt9XG5cbiAgcHVibGljIGNsb25lKCk6IFNwZWVkIHtcbiAgICByZXR1cm4gbmV3IFNwZWVkKHRoaXMueCwgdGhpcy55KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvaW50IGZyb20gJ34vUG9pbnQnO1xuaW1wb3J0IFNpemUgZnJvbSAnfi9TaXplJztcbmltcG9ydCBTcGVlZCBmcm9tICd+L1NwZWVkJztcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfRlJBTUVfRFVSQVRJT04gPSAzMztcbmV4cG9ydCBjb25zdCBHQU1FX1dJTkRPV19XSURUSCA9IDgwMDtcbmV4cG9ydCBjb25zdCBHQU1FX1dJTkRPV19IRUlHSFQgPSA2MDA7XG5cbmV4cG9ydCBjb25zdCBQTEFZRVJfSU5JVElBTF9QT0lOVCA9IG5ldyBQb2ludCgzODAsIDUwMCk7XG5leHBvcnQgY29uc3QgUExBWUVSX0lOSVRJQUxfU0laRSA9IG5ldyBTaXplKDM0LCA0Nyk7XG5leHBvcnQgY29uc3QgUExBWUVSX0lOSVRJQUxfU1BFRUQgPSBuZXcgU3BlZWQoMCwgMCk7XG5leHBvcnQgY29uc3QgUExBWUVSX01PVkVNRU5UX1NQRUVEID0gNDtcbmV4cG9ydCBjb25zdCBQTEFZRVJfTUlOX1RPUCA9IDM1MDtcbmV4cG9ydCBjb25zdCBQTEFZRVJfQVRUQUNLX0RFTEFZID0gNTAwO1xuZXhwb3J0IGNvbnN0IFBMQVlFUl9BRlRFUl9EQU1BR0VfRFVSQVRJT04gPSAxMDAwO1xuXG5leHBvcnQgY29uc3QgRU5FTVlfSU5JVElBTF9QT0lOVCA9IG5ldyBQb2ludCgzNTAsIDUwKTtcbmV4cG9ydCBjb25zdCBFTkVNWV9JTklUSUFMX1NJWkUgPSBuZXcgU2l6ZSgxMDAsIDEwMCk7XG5leHBvcnQgY29uc3QgRU5FTVlfSU5JVElBTF9TUEVFRCA9IG5ldyBTcGVlZCg0LCAwKTtcbmV4cG9ydCBjb25zdCBFTkVNWV9MRUZUX0JPUkRFUiA9IDUwO1xuZXhwb3J0IGNvbnN0IEVORU1ZX1JJR0hUX0JPUkRFUiA9IDUwO1xuZXhwb3J0IGNvbnN0IEVORU1ZX1JFQ0VJVklOR19EQU1BR0UgPSAxMDtcbmV4cG9ydCBjb25zdCBFTkVNWV9BVFRBQ0tfREVMQVkgPSAyMDA7XG5leHBvcnQgY29uc3QgRU5FTVlfQUZURVJfREFNQUdFX0RVUkFUSU9OID0gNTAwO1xuXG5leHBvcnQgY29uc3QgUExBWUVSX01BWF9IRUFMVEggPSAzO1xuZXhwb3J0IGNvbnN0IEVORU1ZX1NUQVRFX01BWF9IRUFMVEggPSA0MDA7XG5cbmV4cG9ydCBjb25zdCBMSUZFQkFSX0hFSUdIVCA9IDI5O1xuZXhwb3J0IGNvbnN0IExJRkVCQVJfQ09MT1IgPSAnIzAwOSc7XG5leHBvcnQgY29uc3QgTElGRUJBUl9FTkVNWV9FTVBUWV9IRUFMVEhfQ09MT1IgPSAnIzAwMCc7XG5leHBvcnQgY29uc3QgTElGRUJBUl9FTkVNWV9GVUxMX0hFQUxUSF9DT0xPUiA9ICcjZjAwJztcblxuZXhwb3J0IGNvbnN0IFBMQVlFUl9IRUFMVEhfSUNPTl9TSVpFID0gbmV3IFNpemUoMzAsIDI3KTtcblxuZXhwb3J0IGNvbnN0IEJVTExFVF9TSVpFID0gbmV3IFNpemUoMTQsIDE0KTtcblxuZXhwb3J0IGNvbnN0IEtFWV9UT1AgPSBwcm9jZXNzLmVudi5LRVlfVE9QID8/ICdXJztcbmV4cG9ydCBjb25zdCBLRVlfTEVGVCA9IHByb2Nlc3MuZW52LktFWV9MRUZUID8/ICdBJztcbmV4cG9ydCBjb25zdCBLRVlfQk9UVE9NID0gcHJvY2Vzcy5lbnYuS0VZX0JPVFRPTSA/PyAnUyc7XG5leHBvcnQgY29uc3QgS0VZX1JJR0hUID0gcHJvY2Vzcy5lbnYuS0VZX1JJR0hUID8/ICdEJztcbmV4cG9ydCBjb25zdCBLRVlfQVRUQUNLID0gcHJvY2Vzcy5lbnYuS0VZX0FUVEFDSyA/PyAnSyc7XG4iLCJpbXBvcnQgeyBERUZBVUxUX0ZSQU1FX0RVUkFUSU9OIH0gZnJvbSAnfi9jb25zdHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lTG9vcCB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBHYW1lTG9vcDtcbiAgcHJpdmF0ZSBmcmFtZUR1cmF0aW9uOiBudW1iZXI7XG4gIHByaXZhdGUgbGFzdEZyYW1lVGltZTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKGZyYW1lRHVyYXRpb246IG51bWJlciA9IERFRkFVTFRfRlJBTUVfRFVSQVRJT04pIHtcbiAgICBpZiAoIUdhbWVMb29wLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLmxhc3RGcmFtZVRpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgdGhpcy5mcmFtZUR1cmF0aW9uID0gZnJhbWVEdXJhdGlvbjtcbiAgICAgIEdhbWVMb29wLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gR2FtZUxvb3AuaW5zdGFuY2U7XG4gIH1cblxuICBwdWJsaWMgc3RhcnQoZm46IEZ1bmN0aW9uKSB7XG4gICAgY29uc3QgbG9vcCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gRGF0ZS5ub3coKTtcblxuICAgICAgaWYgKHRoaXMubGFzdEZyYW1lVGltZSArIHRoaXMuZnJhbWVEdXJhdGlvbiA8PSBjdXJyZW50VGltZSkge1xuICAgICAgICB0aGlzLmxhc3RGcmFtZVRpbWUgPSBjdXJyZW50VGltZTtcbiAgICAgICAgZm4oKTtcbiAgICAgIH1cblxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGxvb3ApO1xuICAgIH07XG5cbiAgICBsb29wKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBjb25zdCBST09UX0lEID0gJ3Jvb3QnO1xuZXhwb3J0IGNvbnN0IEdBTUVfV0lORE9XX0lEID0gJ2dhbWUtd2luZG93JztcbiIsImltcG9ydCB7IFZpcnR1YWxET01DaGFuZ2UgfSBmcm9tICd+L1ZpcnR1YWxET00vdHlwZXMnO1xuXG5leHBvcnQgdHlwZSBSZW5kZXJBUElUeXBlID0gJ2Jyb3dzZXInIHwgJ2Zha2UnO1xuXG5leHBvcnQgZGVmYXVsdCBhYnN0cmFjdCBjbGFzcyBSZW5kZXJBUEkge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogUmVuZGVyQVBJIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFSZW5kZXJBUEkuaW5zdGFuY2UpIHtcbiAgICAgIFJlbmRlckFQSS5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlbmRlckFQSS5pbnN0YW5jZTtcbiAgfVxuICBhYnN0cmFjdCByZW5kZXJHYW1lV2luZG93KCk6IHZvaWQ7XG4gIGFic3RyYWN0IGNsZWFyQWxsKCk6IHZvaWQ7XG5cbiAgYWJzdHJhY3QgcmVuZGVyKGNoYW5nZXM6IFZpcnR1YWxET01DaGFuZ2VbXSk6IHZvaWQ7XG59XG4iLCJpbXBvcnQgeyBHQU1FX1dJTkRPV19XSURUSCwgR0FNRV9XSU5ET1dfSEVJR0hUIH0gZnJvbSAnfi9jb25zdHMnO1xuXG5jb25zdCBmb250Q1NTID0gYFxuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxNnB4O1xuYDtcblxuZXhwb3J0IGNvbnN0IHJvb3RDU1MgPSBgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgJHtmb250Q1NTfVxuYDtcblxuZXhwb3J0IGNvbnN0IHdpbmRvd0NTUyA9IGBcbiAgd2lkdGg6ICR7R0FNRV9XSU5ET1dfV0lEVEh9cHg7XG4gIGhlaWdodDogJHtHQU1FX1dJTkRPV19IRUlHSFR9cHg7XG4gIGJhY2tncm91bmQ6ICNiYmY7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcbiIsImltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICd+L1JlbmRlckFQSS9jb25zdHMnO1xuXG5pbXBvcnQgKiBhcyBjc3MgZnJvbSAnLi9jc3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkSWQoZWxlbWVudDogSFRNTEVsZW1lbnQsIGlkOiBzdHJpbmcpOiB2b2lkIHtcbiAgZWxlbWVudC5pZCA9IGlkO1xuXG4gIGlmIChwcm9jZXNzLmVudi5JU19URVNUX01PREUpIHtcbiAgICBlbGVtZW50LmRhdGFzZXQudGVzdGlkID0gaWQ7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3QoKSB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykgYXMgSFRNTEJvZHlFbGVtZW50O1xuICBjb25zdCByb290ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgYWRkSWQocm9vdCwgY29uc3RzLlJPT1RfSUQpO1xuICByb290LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCBjc3Mucm9vdENTUyk7XG4gIGJvZHkuYXBwZW5kQ2hpbGQocm9vdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVXaW5kb3coKSB7XG4gIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb25zdHMuUk9PVF9JRCk7XG5cbiAgaWYgKCFyb290KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEJyb3dzZXJBUEkgRXJyb3I6IG1ldGhvZCBcIiR7Y3JlYXRlV2luZG93Lm5hbWV9XCIgLSByb290IG5vdCBmb3VuZGBcbiAgICApO1xuICB9XG5cbiAgY29uc3Qgd2luZG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgYWRkSWQod2luZG93LCBjb25zdHMuR0FNRV9XSU5ET1dfSUQpO1xuICB3aW5kb3cuc2V0QXR0cmlidXRlKCdzdHlsZScsIGNzcy53aW5kb3dDU1MpO1xuICByb290LmFwcGVuZENoaWxkKHdpbmRvdyk7XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdEFQSSBmcm9tICd+L0dhbWVPYmplY3QvR2FtZU9iamVjdEFQSSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJyb3dzZXJBUElWaWV3IHtcbiAgcHJpdmF0ZSBnYW1lT2JqZWN0QVBJOiBHYW1lT2JqZWN0QVBJO1xuICBwcml2YXRlIGlubmVyRWxlbWVudDogSFRNTEVsZW1lbnQgfCBudWxsO1xuICBwdWJsaWMgZ2V0IGVsZW1lbnQoKTogSFRNTEVsZW1lbnQge1xuICAgIHJldHVybiB0aGlzLmlubmVyRWxlbWVudDtcbiAgfVxuICBwdWJsaWMgZ2V0IGlkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZ2FtZU9iamVjdEFQSS5pZDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3RBUEk6IEdhbWVPYmplY3RBUEkpIHtcbiAgICB0aGlzLmdhbWVPYmplY3RBUEkgPSBnYW1lT2JqZWN0QVBJO1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIHB1YmxpYyBjcmVhdGVFbGVtZW50KCkge1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIH1cblxuICBwdWJsaWMgc2V0RWxlbWVudChodG1sOiBIVE1MRWxlbWVudCkge1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gaHRtbDtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IGNzcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IHsgcG9pbnQsIHNpemUsIGJhY2tncm91bmQsIHpJbmRleCB9ID0gdGhpcy5nYW1lT2JqZWN0QVBJO1xuXG4gICAgcmV0dXJuIGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAke3BvaW50Lnl9cHg7XG4gICAgbGVmdDogJHtwb2ludC54fXB4O1xuICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICB3aWR0aDogJHtzaXplLndpZHRofXB4O1xuICAgIGhlaWdodDogJHtzaXplLmhlaWdodH1weDtcbiAgICBiYWNrZ3JvdW5kOiAke2JhY2tncm91bmR9O1xuICAgIGA7XG4gIH1cblxuICBwdWJsaWMgYXBwbHlBY3R1YWxDaGFuZ2UoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCB0aGlzLmNzcyk7XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICd+L1JlbmRlckFQSS9jb25zdHMnO1xuaW1wb3J0IFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSSc7XG5pbXBvcnQgR2FtZU9iamVjdEFQSSwgeyBHYW1lT2JqZWN0SWQgfSBmcm9tICd+L0dhbWVPYmplY3QvR2FtZU9iamVjdEFQSSc7XG5pbXBvcnQgeyBWaXJ0dWFsRE9NQ2hhbmdlIH0gZnJvbSAnfi9WaXJ0dWFsRE9NL3R5cGVzJztcblxuaW1wb3J0ICogYXMgSGVscGVyIGZyb20gJy4vaGVscGVyJztcbmltcG9ydCBCcm93c2VyQVBJVmlldyBmcm9tICcuL0Jyb3dzZXJBUElWaWV3JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnJvd3NlckFQSSBleHRlbmRzIFJlbmRlckFQSSB7XG4gIHByaXZhdGUgZWxlbWVudHNNYXA6IFJlY29yZDxHYW1lT2JqZWN0SWQsIEJyb3dzZXJBUElWaWV3PiA9IHt9O1xuICBwcml2YXRlIGdldCB3aW5kb3coKTogSFRNTEVsZW1lbnQge1xuICAgIGNvbnN0IHdpbmRvd05vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb25zdHMuR0FNRV9XSU5ET1dfSUQpO1xuXG4gICAgaWYgKCF3aW5kb3dOb2RlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdCcm93c2VyQVBJIEVycm9yOiB5b3UgY2FuXFwndCB1c2UgcHJvcGVydHkgXCJ3aW5kb3dcIiBiZWZvcmUgY2FsbCBvZiBtZXRob2QgXCJyZW5kZXJHYW1lV2luZG93XCInXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB3aW5kb3dOb2RlO1xuICB9XG5cbiAgcmVuZGVyR2FtZVdpbmRvdygpOiB2b2lkIHtcbiAgICBIZWxwZXIuY3JlYXRlUm9vdCgpO1xuICAgIEhlbHBlci5jcmVhdGVXaW5kb3coKTtcbiAgfVxuICBjbGVhckFsbCgpOiB2b2lkIHtcbiAgICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9ICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBtb3VudChnYW1lT2JqZWN0QVBJOiBHYW1lT2JqZWN0QVBJKTogdm9pZCB7XG4gICAgY29uc3QgdmlldyA9IG5ldyBCcm93c2VyQVBJVmlldyhnYW1lT2JqZWN0QVBJKTtcblxuICAgIHZpZXcuY3JlYXRlRWxlbWVudCgpO1xuICAgIHZpZXcuYXBwbHlBY3R1YWxDaGFuZ2UoKTtcblxuICAgIHRoaXMud2luZG93LmFwcGVuZENoaWxkKHZpZXcuZWxlbWVudCk7XG4gICAgdGhpcy5lbGVtZW50c01hcFt2aWV3LmlkXSA9IHZpZXc7XG4gIH1cbiAgcHJpdmF0ZSB1cGRhdGUoZ2FtZU9iamVjdEFQSTogR2FtZU9iamVjdEFQSSkge1xuICAgIGNvbnN0IG5ld1ZpZXcgPSBuZXcgQnJvd3NlckFQSVZpZXcoZ2FtZU9iamVjdEFQSSk7XG4gICAgY29uc3Qgb2xkVmlldyA9IHRoaXMuZWxlbWVudHNNYXBbZ2FtZU9iamVjdEFQSS5pZF07XG5cbiAgICBuZXdWaWV3LnNldEVsZW1lbnQob2xkVmlldy5lbGVtZW50KTtcbiAgICBuZXdWaWV3LmFwcGx5QWN0dWFsQ2hhbmdlKCk7XG5cbiAgICB0aGlzLndpbmRvdy5hcHBlbmRDaGlsZChuZXdWaWV3LmVsZW1lbnQpO1xuICAgIHRoaXMuZWxlbWVudHNNYXBbZ2FtZU9iamVjdEFQSS5pZF0gPSBuZXdWaWV3O1xuICB9XG4gIHByaXZhdGUgdW5tb3VudChnYW1lT2JqZWN0QVBJOiBHYW1lT2JqZWN0QVBJKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50c01hcFtnYW1lT2JqZWN0QVBJLmlkXS5lbGVtZW50LnJlbW92ZSgpO1xuICAgIGRlbGV0ZSB0aGlzLmVsZW1lbnRzTWFwW2dhbWVPYmplY3RBUEkuaWRdO1xuICB9XG4gIHJlbmRlcihjaGFuZ2VzOiBWaXJ0dWFsRE9NQ2hhbmdlW10pOiB2b2lkIHtcbiAgICBjaGFuZ2VzLmZvckVhY2goKGNoYW5nZSkgPT4ge1xuICAgICAgc3dpdGNoIChjaGFuZ2UuYWN0aW9uKSB7XG4gICAgICAgIGNhc2UgJ21vdW50Jzoge1xuICAgICAgICAgIHRoaXMubW91bnQoY2hhbmdlKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICd1bm1vdW50Jzoge1xuICAgICAgICAgIHRoaXMudW5tb3VudChjaGFuZ2UpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICB0aGlzLnVwZGF0ZShjaGFuZ2UpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IFZpcnR1YWxET01DaGFuZ2UgfSBmcm9tICd+L1ZpcnR1YWxET00vdHlwZXMnO1xuXG5pbXBvcnQgUmVuZGVyQVBJIGZyb20gJy4nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYWtlQVBJIGV4dGVuZHMgUmVuZGVyQVBJIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHJlbmRlckdhbWVXaW5kb3coKSB7XG4gICAgY29uc29sZS5sb2coJ3JlbmRlckdhbWVXaW5kb3cnKTtcbiAgfVxuICBjbGVhckFsbCgpIHtcbiAgICBjb25zb2xlLmxvZygnY2xlYXJBbGwnKTtcbiAgfVxuXG4gIHJlbmRlcihjaGFuZ2VzOiBWaXJ0dWFsRE9NQ2hhbmdlW10pOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZygncmVuZGVyJyk7XG4gIH1cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0QVBJLCB7IEdhbWVPYmplY3RJZCB9IGZyb20gJ34vR2FtZU9iamVjdC9HYW1lT2JqZWN0QVBJJztcblxuaW1wb3J0IHsgVmlydHVhbERPTUNoYW5nZSwgVmlydHVhbERPTUdhbWVPYmplY3RzTWFwIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpcnR1YWxET00ge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogVmlydHVhbERPTTtcbiAgcHJpdmF0ZSBwcmV2RWxlbWVudHNNYXA6IFZpcnR1YWxET01HYW1lT2JqZWN0c01hcDtcbiAgcHJpdmF0ZSBuZXh0RWxlbWVudHNNYXA6IFZpcnR1YWxET01HYW1lT2JqZWN0c01hcDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIVZpcnR1YWxET00uaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMucHJldkVsZW1lbnRzTWFwID0ge307XG4gICAgICB0aGlzLm5leHRFbGVtZW50c01hcCA9IHt9O1xuICAgICAgVmlydHVhbERPTS5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIFZpcnR1YWxET00uaW5zdGFuY2U7XG4gIH1cblxuICBwdWJsaWMgYWRkRWxlbWVudChlbGVtZW50OiBHYW1lT2JqZWN0QVBJKTogdm9pZCB7XG4gICAgdGhpcy5uZXh0RWxlbWVudHNNYXBbZWxlbWVudC5pZF0gPSBlbGVtZW50O1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRBbGxJZHNGcm9tTWFwcygpOiBTZXQ8R2FtZU9iamVjdElkPiB7XG4gICAgY29uc3QgYWxsSWRzU2V0ID0gbmV3IFNldDxHYW1lT2JqZWN0SWQ+KCk7XG5cbiAgICBmb3IgKGNvbnN0IGlkIGluIHRoaXMucHJldkVsZW1lbnRzTWFwKSB7XG4gICAgICBhbGxJZHNTZXQuYWRkKGlkKTtcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGlkIGluIHRoaXMubmV4dEVsZW1lbnRzTWFwKSB7XG4gICAgICBhbGxJZHNTZXQuYWRkKGlkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWxsSWRzU2V0O1xuICB9XG5cbiAgcHVibGljIGdldENoYW5nZXMoKTogVmlydHVhbERPTUNoYW5nZVtdIHtcbiAgICBjb25zdCBhbGxJZHMgPSB0aGlzLmdldEFsbElkc0Zyb21NYXBzKCk7XG4gICAgY29uc3QgY2hhbmdlczogVmlydHVhbERPTUNoYW5nZVtdID0gW107XG5cbiAgICBhbGxJZHMuZm9yRWFjaCgoaWQ6IEdhbWVPYmplY3RJZCkgPT4ge1xuICAgICAgY29uc3QgcHJldkVsZW1lbnQ6IEdhbWVPYmplY3RBUEkgfCBudWxsID1cbiAgICAgICAgdGhpcy5wcmV2RWxlbWVudHNNYXBbaWRdID8/IG51bGw7XG5cbiAgICAgIGNvbnN0IG5leHRFbGVtZW50OiBHYW1lT2JqZWN0QVBJIHwgbnVsbCA9XG4gICAgICAgIHRoaXMubmV4dEVsZW1lbnRzTWFwW2lkXSA/PyBudWxsO1xuXG4gICAgICBpZiAoIXByZXZFbGVtZW50KSB7XG4gICAgICAgIGNoYW5nZXMucHVzaCh7XG4gICAgICAgICAgaWQ6IG5leHRFbGVtZW50LmlkLFxuICAgICAgICAgIHBvaW50OiBuZXh0RWxlbWVudC5wb2ludCxcbiAgICAgICAgICBzaXplOiBuZXh0RWxlbWVudC5zaXplLFxuICAgICAgICAgIGJhY2tncm91bmQ6IG5leHRFbGVtZW50LmJhY2tncm91bmQsXG4gICAgICAgICAgekluZGV4OiBuZXh0RWxlbWVudC56SW5kZXgsXG4gICAgICAgICAgYWN0aW9uOiAnbW91bnQnLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoIW5leHRFbGVtZW50KSB7XG4gICAgICAgIGNoYW5nZXMucHVzaCh7XG4gICAgICAgICAgaWQ6IHByZXZFbGVtZW50LmlkLFxuICAgICAgICAgIHBvaW50OiBwcmV2RWxlbWVudC5wb2ludCxcbiAgICAgICAgICBzaXplOiBwcmV2RWxlbWVudC5zaXplLFxuICAgICAgICAgIGJhY2tncm91bmQ6IHByZXZFbGVtZW50LmJhY2tncm91bmQsXG4gICAgICAgICAgekluZGV4OiBwcmV2RWxlbWVudC56SW5kZXgsXG4gICAgICAgICAgYWN0aW9uOiAndW5tb3VudCcsXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2hhbmdlcy5wdXNoKG5leHRFbGVtZW50KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBjaGFuZ2VzO1xuICB9XG5cbiAgcHVibGljIHByZXBhcmVGb3JOZXdGcmFtZSgpOiB2b2lkIHtcbiAgICB0aGlzLnByZXZFbGVtZW50c01hcCA9IHRoaXMubmV4dEVsZW1lbnRzTWFwO1xuICAgIHRoaXMubmV4dEVsZW1lbnRzTWFwID0ge307XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEtleWJvYXJkQ29udHJvbGxlciB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBLZXlib2FyZENvbnRyb2xsZXI7XG4gIHByaXZhdGUga2V5czogU2V0PHN0cmluZz47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFLZXlib2FyZENvbnRyb2xsZXIuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMua2V5cyA9IG5ldyBTZXQoKTtcbiAgICAgIEtleWJvYXJkQ29udHJvbGxlci5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIEtleWJvYXJkQ29udHJvbGxlci5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRFdmVudExpc3RlbmVycygpIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2dCkgPT4ge1xuICAgICAgdGhpcy5rZXlzLmFkZChldnQua2V5LnRvVXBwZXJDYXNlKCkpO1xuICAgIH0pO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZXZ0KSA9PiB7XG4gICAgICB0aGlzLmtleXMuZGVsZXRlKGV2dC5rZXkudG9VcHBlckNhc2UoKSk7XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgaXNBY3RpdmVLZXkoa2V5OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5rZXlzLmhhcyhrZXkpO1xuICB9XG59XG4iLCJpbXBvcnQgQnVsbGV0IGZyb20gJ34vQnVsbGV0JztcbmltcG9ydCB7IEdBTUVfV0lORE9XX0hFSUdIVCwgR0FNRV9XSU5ET1dfV0lEVEggfSBmcm9tICd+L2NvbnN0cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldHNTdG9yZSB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBCdWxsZXRzU3RvcmU7XG4gIHByaXZhdGUgaW5uZXJCdWxsZXRzOiBCdWxsZXRbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIUJ1bGxldHNTdG9yZS5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5pbm5lckJ1bGxldHMgPSBbXTtcbiAgICAgIEJ1bGxldHNTdG9yZS5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIEJ1bGxldHNTdG9yZS5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVCdWxsZXRzT3V0c2lkZVNjcmVlbigpOiB2b2lkIHtcbiAgICB0aGlzLmlubmVyQnVsbGV0cyA9IHRoaXMuaW5uZXJCdWxsZXRzLmZpbHRlcigoYnVsbGV0KSA9PiB7XG4gICAgICBpZiAoYnVsbGV0LnBvaW50LnggKyBidWxsZXQuc2l6ZS53aWR0aCA8IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGJ1bGxldC5wb2ludC54ID4gR0FNRV9XSU5ET1dfV0lEVEgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGJ1bGxldC5wb2ludC55ICsgYnVsbGV0LnNpemUuaGVpZ2h0IDwgMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoYnVsbGV0LnBvaW50LnkgPiBHQU1FX1dJTkRPV19IRUlHSFQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRFbGVtZW50KGJ1bGxldDogQnVsbGV0KTogdm9pZCB7XG4gICAgdGhpcy5pbm5lckJ1bGxldHMucHVzaChidWxsZXQpO1xuICB9XG4gIHB1YmxpYyByZW1vdmVFbGVtZW50KGJ1bGxldDogQnVsbGV0KTogdm9pZCB7XG4gICAgdGhpcy5pbm5lckJ1bGxldHMgPSB0aGlzLmlubmVyQnVsbGV0cy5maWx0ZXIoXG4gICAgICAoaW5uZXJCdWxsZXQpID0+IGlubmVyQnVsbGV0LmlkICE9PSBidWxsZXQuaWRcbiAgICApO1xuICB9XG5cbiAgZ2V0IGJ1bGxldHMoKTogUmVhZG9ubHk8QnVsbGV0W10+IHtcbiAgICByZXR1cm4gdGhpcy5pbm5lckJ1bGxldHM7XG4gIH1cbn1cbiIsImltcG9ydCB7IEJ1bGxldFR5cGUgfSBmcm9tICd+L0J1bGxldC90eXBlcyc7XG5pbXBvcnQgQnVsbGV0c1N0b3JlIGZyb20gJ34vQnVsbGV0c1N0b3JlJztcbmltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vR2FtZU9iamVjdCc7XG5cbmltcG9ydCAqIGFzIEhlbHBlciBmcm9tICcuL2hlbHBlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldHNDb2xsaWRlciB7XG4gIHByaXZhdGUgYnVsbGV0c1N0b3JlOiBCdWxsZXRzU3RvcmU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0YXJnZXQ6IEdhbWVPYmplY3QsIHByaXZhdGUgYnVsbGV0VHlwZTogQnVsbGV0VHlwZSkge1xuICAgIHRoaXMuYnVsbGV0c1N0b3JlID0gbmV3IEJ1bGxldHNTdG9yZSgpO1xuICB9XG5cbiAgcHVibGljIHRyeVRvQ29sbGlkZShhY3Rpb25XaGVuQ29sbGlkZTogKCkgPT4gdm9pZCkge1xuICAgIHRoaXMuYnVsbGV0c1N0b3JlLmJ1bGxldHMuZm9yRWFjaCgoYnVsbGV0KSA9PiB7XG4gICAgICBpZiAodGhpcy5idWxsZXRUeXBlICE9PSBidWxsZXQudHlwZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChIZWxwZXIuaGFzQ29sbHVzaW9uKGJ1bGxldCwgdGhpcy50YXJnZXQpKSB7XG4gICAgICAgIGFjdGlvbldoZW5Db2xsaWRlKCk7XG4gICAgICAgIHRoaXMuYnVsbGV0c1N0b3JlLnJlbW92ZUVsZW1lbnQoYnVsbGV0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgUG9pbnRTaXplIH0gZnJvbSAnfi9HYW1lT2JqZWN0L0dhbWVPYmplY3RBUEknO1xuXG5leHBvcnQgY29uc3QgaGFzQ29sbHVzaW9uID0gKG9iajE6IFBvaW50U2l6ZSwgb2JqMjogUG9pbnRTaXplKSA9PiB7XG4gIGNvbnN0IGxlZnQxID0gb2JqMS5wb2ludC54O1xuICBjb25zdCByaWdodDEgPSBvYmoxLnBvaW50LnggKyBvYmoxLnNpemUud2lkdGg7XG5cbiAgY29uc3QgbGVmdDIgPSBvYmoyLnBvaW50Lng7XG4gIGNvbnN0IHJpZ2h0MiA9IG9iajIucG9pbnQueCArIG9iajIuc2l6ZS53aWR0aDtcblxuICBpZiAoXG4gICAgKGxlZnQxID49IGxlZnQyICYmIGxlZnQxIDw9IHJpZ2h0MikgfHxcbiAgICAocmlnaHQxID49IGxlZnQyICYmIHJpZ2h0MSA8PSByaWdodDIpXG4gICkge1xuICAgIGNvbnN0IHRvcDEgPSBvYmoxLnBvaW50Lnk7XG4gICAgY29uc3QgYm90dG9tMSA9IG9iajEucG9pbnQueSArIG9iajEuc2l6ZS5oZWlnaHQ7XG5cbiAgICBjb25zdCB0b3AyID0gb2JqMi5wb2ludC55O1xuICAgIGNvbnN0IGJvdHRvbTIgPSBvYmoyLnBvaW50LnkgKyBvYmoyLnNpemUuaGVpZ2h0O1xuXG4gICAgaWYgKFxuICAgICAgKHRvcDEgPj0gdG9wMiAmJiB0b3AxIDw9IGJvdHRvbTIpIHx8XG4gICAgICAoYm90dG9tMSA+PSB0b3AyICYmIGJvdHRvbTEgPD0gYm90dG9tMilcbiAgICApIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07XG4iLCJjb25zdCBnZXRVbmlxdWVJZCA9IChmdW5jdGlvbiAoKSB7XG4gIGxldCBsYXN0VW5pcXVlSWQ6IHN0cmluZyA9ICcnO1xuICBsZXQgYW1vdW50R2l2ZW5TYW1lSWQgPSAwO1xuXG4gIHJldHVybiBmdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcbiAgICBjb25zdCBpZCA9IERhdGUubm93KCkgKyAnJztcblxuICAgIGlmIChsYXN0VW5pcXVlSWQgPT09IGlkKSB7XG4gICAgICBhbW91bnRHaXZlblNhbWVJZCsrO1xuXG4gICAgICByZXR1cm4gbGFzdFVuaXF1ZUlkICsgJyAnICsgYW1vdW50R2l2ZW5TYW1lSWQ7XG4gICAgfVxuXG4gICAgbGFzdFVuaXF1ZUlkID0gaWQ7XG5cbiAgICByZXR1cm4gaWQ7XG4gIH07XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBnZXRVbmlxdWVJZDtcbiIsImltcG9ydCBQb2ludCBmcm9tICd+L1BvaW50JztcbmltcG9ydCBTaXplIGZyb20gJ34vU2l6ZSc7XG5pbXBvcnQgZ2V0VW5pcXVlSWQgZnJvbSAnfi9zaGFyZWQvZ2V0VW5pcXVlSWQnO1xuaW1wb3J0IEdhbWVPYmplY3RBUEkgZnJvbSAnLi9HYW1lT2JqZWN0QVBJJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU9iamVjdCBpbXBsZW1lbnRzIEdhbWVPYmplY3RBUEkge1xuICBwcm90ZWN0ZWQgaW5uZXJJZDogc3RyaW5nO1xuICBwcm90ZWN0ZWQgaW5uZXJQb2ludDogUG9pbnQ7XG4gIHByb3RlY3RlZCBpbm5lclNpemU6IFNpemU7XG4gIHByb3RlY3RlZCBpbm5lckJhY2tncm91bmQ6IHN0cmluZztcbiAgcHJvdGVjdGVkIGlubmVyWkluZGV4OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcG9pbnQ6IFBvaW50LFxuICAgIHNpemU6IFNpemUsXG4gICAgYmFja2dyb3VuZDogc3RyaW5nID0gJycsXG4gICAgekluZGV4OiBudW1iZXIgPSAxXG4gICkge1xuICAgIHRoaXMuaW5uZXJJZCA9IGdldFVuaXF1ZUlkKCk7XG4gICAgdGhpcy5pbm5lclBvaW50ID0gcG9pbnQ7XG4gICAgdGhpcy5pbm5lclNpemUgPSBzaXplO1xuICAgIHRoaXMuaW5uZXJCYWNrZ3JvdW5kID0gYmFja2dyb3VuZDtcbiAgICB0aGlzLmlubmVyWkluZGV4ID0gekluZGV4O1xuICB9XG5cbiAgcHVibGljIGdldCBpZCgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lcklkO1xuICB9XG4gIHB1YmxpYyBnZXQgcG9pbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5uZXJQb2ludDtcbiAgfVxuICBwdWJsaWMgc2V0IHBvaW50KHZhbHVlOiBQb2ludCkge1xuICAgIHRoaXMuaW5uZXJQb2ludCA9IHZhbHVlO1xuICB9XG4gIHB1YmxpYyBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lclNpemU7XG4gIH1cbiAgcHVibGljIGdldCBiYWNrZ3JvdW5kKCkge1xuICAgIHJldHVybiB0aGlzLmlubmVyQmFja2dyb3VuZDtcbiAgfVxuICBwdWJsaWMgZ2V0IHpJbmRleCgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lclpJbmRleDtcbiAgfVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9HYW1lT2JqZWN0JztcbmltcG9ydCBQb2ludCBmcm9tICd+L1BvaW50JztcbmltcG9ydCBTaXplIGZyb20gJ34vU2l6ZSc7XG5pbXBvcnQgU3BlZWQgZnJvbSAnfi9TcGVlZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vdmFibGVPYmplY3QgZXh0ZW5kcyBHYW1lT2JqZWN0IHtcbiAgcHJvdGVjdGVkIGlubmVyU3BlZWQ6IFNwZWVkO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHBvaW50OiBQb2ludCxcbiAgICBzaXplOiBTaXplLFxuICAgIHNwZWVkOiBTcGVlZCxcbiAgICBiYWNrZ3JvdW5kPzogc3RyaW5nLFxuICAgIHpJbmRleD86IG51bWJlclxuICApIHtcbiAgICBzdXBlcihwb2ludCwgc2l6ZSwgYmFja2dyb3VuZCwgekluZGV4KTtcbiAgICB0aGlzLmlubmVyU3BlZWQgPSBzcGVlZDtcbiAgfVxuXG4gIHB1YmxpYyBtb3ZlKCkge1xuICAgIHRoaXMucG9pbnQgPSBuZXcgUG9pbnQoXG4gICAgICB0aGlzLnBvaW50LnggKyB0aGlzLnNwZWVkLngsXG4gICAgICB0aGlzLnBvaW50LnkgKyB0aGlzLnNwZWVkLnlcbiAgICApO1xuICB9XG5cbiAgZ2V0IHNwZWVkKCkge1xuICAgIHJldHVybiB0aGlzLmlubmVyU3BlZWQ7XG4gIH1cblxuICBzZXQgc3BlZWQobmV3U3BlZWQ6IFNwZWVkKSB7XG4gICAgdGhpcy5pbm5lclNwZWVkID0gbmV3U3BlZWQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IHtcbiAgcGxheWVyU3RhdGU6IDIsXG4gIGVuZW15U3RhdGU6IDIsXG4gIGJ1bGxldFN0YXRlOiAzLFxuICBsaWZlYmFyOiB7XG4gICAgZW1wdHlMaWZlYmFyOiA0LFxuICAgIGVuZW15RW1wdHlIZWFsdGg6IDUsXG4gICAgZW5lbXlIZWFsdGg6IDYsXG4gICAgcGxheWVySGVhbHRoOiA3LFxuICB9LFxufTtcbiIsImltcG9ydCBWaXJ0dWFsRE9NIGZyb20gJ34vVmlydHVhbERPTSc7XG5pbXBvcnQgTW92YWJsZU9iamVjdCBmcm9tICd+L01vdmFibGVPYmplY3QnO1xuaW1wb3J0IFBvaW50IGZyb20gJ34vUG9pbnQnO1xuaW1wb3J0IFNwZWVkIGZyb20gJ34vU3BlZWQnO1xuaW1wb3J0IHsgQlVMTEVUX1NJWkUgfSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgekluZGV4IGZyb20gJ34vekluZGV4JztcbmltcG9ydCBlbmVteUJ1bGxldFBuZyBmcm9tICd+L2ltZy93ZWIucG5nJztcbmltcG9ydCBwbGF5ZXJCdWxsZXRQbmcgZnJvbSAnfi9pbWcvZmlyZWJhbGwucG5nJztcblxuaW1wb3J0IHsgQnVsbGV0VHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXQge1xuICBwcml2YXRlIHNwcml0ZTogTW92YWJsZU9iamVjdCB8IG51bGw7XG4gIHByaXZhdGUgdmlydHVhbERPTTogVmlydHVhbERPTTtcblxuICBwcml2YXRlIHN0YXRpYyBjcmVhdGVJbml0aWFsU3ByaXRlKFxuICAgIHR5cGU6IEJ1bGxldFR5cGUsXG4gICAgcG9pbnQ6IFBvaW50LFxuICAgIHNwZWVkOiBTcGVlZFxuICApIHtcbiAgICByZXR1cm4gbmV3IE1vdmFibGVPYmplY3QoXG4gICAgICBwb2ludC5jbG9uZSgpLFxuICAgICAgQlVMTEVUX1NJWkUuY2xvbmUoKSxcbiAgICAgIHNwZWVkLmNsb25lKCksXG4gICAgICBgdXJsKCR7dHlwZSA9PT0gJ2VuZW15JyA/IGVuZW15QnVsbGV0UG5nIDogcGxheWVyQnVsbGV0UG5nfSlgLFxuICAgICAgekluZGV4LmJ1bGxldFN0YXRlXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5uZXJUeXBlOiBCdWxsZXRUeXBlLCBwb2ludDogUG9pbnQsIHNwZWVkOiBTcGVlZCkge1xuICAgIHRoaXMudmlydHVhbERPTSA9IG5ldyBWaXJ0dWFsRE9NKCk7XG4gICAgdGhpcy5zcHJpdGUgPSBCdWxsZXQuY3JlYXRlSW5pdGlhbFNwcml0ZSh0aGlzLmlubmVyVHlwZSwgcG9pbnQsIHNwZWVkKTtcbiAgfVxuXG4gIGdldCBwb2ludCgpIHtcbiAgICByZXR1cm4gdGhpcy5zcHJpdGUucG9pbnQ7XG4gIH1cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3ByaXRlLnNpemU7XG4gIH1cbiAgZ2V0IGlkKCkge1xuICAgIHJldHVybiB0aGlzLnNwcml0ZS5pZDtcbiAgfVxuICBnZXQgdHlwZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lclR5cGU7XG4gIH1cblxuICBwcml2YXRlIHByb2Nlc3NNb3ZlbWVudCgpIHtcbiAgICB0aGlzLnNwcml0ZS5tb3ZlKCk7XG4gIH1cbiAgcHJpdmF0ZSBhZGRUb05leHRSZW5kZXIoKSB7XG4gICAgdGhpcy52aXJ0dWFsRE9NLmFkZEVsZW1lbnQodGhpcy5zcHJpdGUpO1xuICB9XG5cbiAgcHVibGljIGRvRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLnByb2Nlc3NNb3ZlbWVudCgpO1xuICAgIHRoaXMuYWRkVG9OZXh0UmVuZGVyKCk7XG4gIH1cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vR2FtZU9iamVjdCc7XG5pbXBvcnQgUG9pbnQgZnJvbSAnfi9Qb2ludCc7XG5pbXBvcnQgU2l6ZSBmcm9tICd+L1NpemUnO1xuaW1wb3J0IFZpcnR1YWxET00gZnJvbSAnfi9WaXJ0dWFsRE9NJztcbmltcG9ydCB7XG4gIEdBTUVfV0lORE9XX1dJRFRILFxuICBQTEFZRVJfTUFYX0hFQUxUSCxcbiAgRU5FTVlfU1RBVEVfTUFYX0hFQUxUSCxcbiAgUExBWUVSX0hFQUxUSF9JQ09OX1NJWkUsXG4gIExJRkVCQVJfSEVJR0hULFxuICBMSUZFQkFSX0NPTE9SLFxuICBMSUZFQkFSX0VORU1ZX0VNUFRZX0hFQUxUSF9DT0xPUixcbiAgTElGRUJBUl9FTkVNWV9GVUxMX0hFQUxUSF9DT0xPUixcbn0gZnJvbSAnfi9jb25zdHMnO1xuaW1wb3J0IHpJbmRleCBmcm9tICd+L3pJbmRleCc7XG5pbXBvcnQgbGlmZUljb24gZnJvbSAnfi9pbWcvbGlmZS5wbmcnO1xuaW1wb3J0IG5vTGlmZUljb24gZnJvbSAnfi9pbWcvbm9saWZlLnBuZyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpZmViYXIge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogTGlmZWJhcjtcbiAgcHJpdmF0ZSBpbm5lclBsYXllckhlYWx0aDogbnVtYmVyO1xuICBwcml2YXRlIGlubmVyRW5lbXlIZWFsdGg6IG51bWJlcjtcbiAgcHJpdmF0ZSB2aXJ0dWFsRE9NOiBWaXJ0dWFsRE9NO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghTGlmZWJhci5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5pbm5lclBsYXllckhlYWx0aCA9IFBMQVlFUl9NQVhfSEVBTFRIO1xuICAgICAgdGhpcy5pbm5lckVuZW15SGVhbHRoID0gRU5FTVlfU1RBVEVfTUFYX0hFQUxUSDtcbiAgICAgIHRoaXMudmlydHVhbERPTSA9IG5ldyBWaXJ0dWFsRE9NKCk7XG4gICAgICBMaWZlYmFyLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gTGlmZWJhci5pbnN0YW5jZTtcbiAgfVxuXG4gIHByaXZhdGUgYWRkVG9SZW5kZXJFbXB0eUJhcigpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudChcbiAgICAgIG5ldyBHYW1lT2JqZWN0KFxuICAgICAgICBuZXcgUG9pbnQoMCwgMCksXG4gICAgICAgIG5ldyBTaXplKEdBTUVfV0lORE9XX1dJRFRILCBMSUZFQkFSX0hFSUdIVCksXG4gICAgICAgIExJRkVCQVJfQ09MT1IsXG4gICAgICAgIHpJbmRleC5saWZlYmFyLmVtcHR5TGlmZWJhclxuICAgICAgKVxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIGFkZFRvUmVuZGVyRW5lbXlFbXB0eUhlYWx0aCgpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudChcbiAgICAgIG5ldyBHYW1lT2JqZWN0KFxuICAgICAgICBuZXcgUG9pbnQoMCwgMCksXG4gICAgICAgIG5ldyBTaXplKEVORU1ZX1NUQVRFX01BWF9IRUFMVEgsIExJRkVCQVJfSEVJR0hUKSxcbiAgICAgICAgTElGRUJBUl9FTkVNWV9FTVBUWV9IRUFMVEhfQ09MT1IsXG4gICAgICAgIHpJbmRleC5saWZlYmFyLmVuZW15RW1wdHlIZWFsdGhcbiAgICAgIClcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBhZGRUb1JlbmRlckVuZW15SGVhbHRoKCkge1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KFxuICAgICAgbmV3IEdhbWVPYmplY3QoXG4gICAgICAgIG5ldyBQb2ludCgwLCAwKSxcbiAgICAgICAgbmV3IFNpemUodGhpcy5pbm5lckVuZW15SGVhbHRoLCBMSUZFQkFSX0hFSUdIVCksXG4gICAgICAgIExJRkVCQVJfRU5FTVlfRlVMTF9IRUFMVEhfQ09MT1IsXG4gICAgICAgIHpJbmRleC5saWZlYmFyLmVuZW15SGVhbHRoXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgYWRkVG9SZW5kZXJQbGF5ZXJIZWFsdGgoKSB7XG4gICAgY29uc3QgT0ZGU0VUID0geyB4OiAxLCB5OiAxIH07XG5cbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBQTEFZRVJfTUFYX0hFQUxUSDsgaSsrKSB7XG4gICAgICBjb25zdCBpc0xpZmUgPSB0aGlzLmlubmVyUGxheWVySGVhbHRoID49IGk7XG4gICAgICBjb25zdCBwb2ludCA9IG5ldyBQb2ludChcbiAgICAgICAgR0FNRV9XSU5ET1dfV0lEVEggLSAoT0ZGU0VULnggKyBQTEFZRVJfSEVBTFRIX0lDT05fU0laRS53aWR0aCkgKiBpLFxuICAgICAgICBPRkZTRVQueVxuICAgICAgKTtcblxuICAgICAgdGhpcy52aXJ0dWFsRE9NLmFkZEVsZW1lbnQoXG4gICAgICAgIG5ldyBHYW1lT2JqZWN0KFxuICAgICAgICAgIHBvaW50LFxuICAgICAgICAgIFBMQVlFUl9IRUFMVEhfSUNPTl9TSVpFLFxuICAgICAgICAgIGB1cmwoJHtpc0xpZmUgPyBsaWZlSWNvbiA6IG5vTGlmZUljb259KWAsXG4gICAgICAgICAgekluZGV4LmxpZmViYXIucGxheWVySGVhbHRoXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IHBsYXllckhlYWx0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lclBsYXllckhlYWx0aDtcbiAgfVxuICBnZXQgZW5lbXlIZWFsdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5uZXJFbmVteUhlYWx0aDtcbiAgfVxuICBzZXQgcGxheWVySGVhbHRoKHZhbHVlKSB7XG4gICAgdGhpcy5pbm5lclBsYXllckhlYWx0aCA9IHZhbHVlID49IDAgPyB2YWx1ZSA6IDA7XG4gIH1cbiAgc2V0IGVuZW15SGVhbHRoKHZhbHVlKSB7XG4gICAgdGhpcy5pbm5lckVuZW15SGVhbHRoID0gdmFsdWUgPj0gMCA/IHZhbHVlIDogMDtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5hZGRUb1JlbmRlckVtcHR5QmFyKCk7XG4gICAgdGhpcy5hZGRUb1JlbmRlckVuZW15RW1wdHlIZWFsdGgoKTtcbiAgICB0aGlzLmFkZFRvUmVuZGVyRW5lbXlIZWFsdGgoKTtcbiAgICB0aGlzLmFkZFRvUmVuZGVyUGxheWVySGVhbHRoKCk7XG4gIH1cbn1cbiIsImltcG9ydCBLZXlib2FyZENvbnRyb2xsZXIgZnJvbSAnfi9LZXlib2FyZENvbnRyb2xsZXInO1xuaW1wb3J0IFZpcnR1YWxET00gZnJvbSAnfi9WaXJ0dWFsRE9NJztcbmltcG9ydCBNb3ZhYmxlT2JqZWN0IGZyb20gJ34vTW92YWJsZU9iamVjdCc7XG5pbXBvcnQge1xuICBQTEFZRVJfQVRUQUNLX0RFTEFZLFxuICBQTEFZRVJfQUZURVJfREFNQUdFX0RVUkFUSU9OLFxuICBLRVlfQVRUQUNLLFxufSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgU3BlZWQgZnJvbSAnfi9TcGVlZCc7XG5pbXBvcnQgQnVsbGV0c0NvbGxpZGVyIGZyb20gJ34vQnVsbGV0c0NvbGxpZGVyJztcbmltcG9ydCBCdWxsZXRzU3RvcmUgZnJvbSAnfi9CdWxsZXRzU3RvcmUnO1xuaW1wb3J0IEJ1bGxldCBmcm9tICd+L0J1bGxldCc7XG5pbXBvcnQgTGlmZWJhciBmcm9tICd+L0xpZmViYXInO1xuXG5pbXBvcnQgKiBhcyBIZWxwZXIgZnJvbSAnLi9oZWxwZXInO1xuaW1wb3J0IHsgUGxheWVyU3RhdGVOYW1lIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXllclN0YXRlIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFBsYXllclN0YXRlO1xuICBwcml2YXRlIGlubmVyU3RhdGU6IFBsYXllclN0YXRlTmFtZTtcbiAgcHJpdmF0ZSBrZXlib2FyZENvbnRyb2xsZXI6IEtleWJvYXJkQ29udHJvbGxlcjtcbiAgcHJpdmF0ZSBzcHJpdGU6IE1vdmFibGVPYmplY3Q7XG4gIHByaXZhdGUgdmlydHVhbERPTTogVmlydHVhbERPTTtcbiAgcHJpdmF0ZSBmcmFtZUJlaGF2aW9yOiAoKSA9PiB2b2lkO1xuICBwcml2YXRlIGJ1bGxldHNDb2xsaWRlcjogQnVsbGV0c0NvbGxpZGVyO1xuICBwcml2YXRlIGJ1bGxldHNTdG9yZTogQnVsbGV0c1N0b3JlO1xuICBwcml2YXRlIGxhc3RBdHRhY2tUaW1lOiBudW1iZXI7XG4gIHByaXZhdGUgdGltZXI6IE5vZGVKUy5UaW1lb3V0O1xuICBwcml2YXRlIGxpZmViYXI6IExpZmViYXI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFQbGF5ZXJTdGF0ZS5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5zdGF0ZSA9ICdiZWZvcmUtcGxheWluZyc7XG4gICAgICB0aGlzLnZpcnR1YWxET00gPSBuZXcgVmlydHVhbERPTSgpO1xuICAgICAgdGhpcy5rZXlib2FyZENvbnRyb2xsZXIgPSBuZXcgS2V5Ym9hcmRDb250cm9sbGVyKCk7XG4gICAgICB0aGlzLmtleWJvYXJkQ29udHJvbGxlci5hZGRFdmVudExpc3RlbmVycygpO1xuICAgICAgdGhpcy5zcHJpdGUgPSBudWxsO1xuICAgICAgdGhpcy5idWxsZXRzQ29sbGlkZXIgPSBudWxsO1xuICAgICAgdGhpcy5idWxsZXRzU3RvcmUgPSBuZXcgQnVsbGV0c1N0b3JlKCk7XG4gICAgICB0aGlzLmZyYW1lQmVoYXZpb3IgPSAoKSA9PiB7fTtcbiAgICAgIHRoaXMubGFzdEF0dGFja1RpbWUgPSBEYXRlLm5vdygpIC0gUExBWUVSX0FUVEFDS19ERUxBWTtcbiAgICAgIHRoaXMudGltZXIgPSBudWxsO1xuICAgICAgdGhpcy5saWZlYmFyID0gbmV3IExpZmViYXIoKTtcblxuICAgICAgUGxheWVyU3RhdGUuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBQbGF5ZXJTdGF0ZS5pbnN0YW5jZTtcbiAgfVxuXG4gIGdldCBzdGF0ZSgpOiBQbGF5ZXJTdGF0ZU5hbWUge1xuICAgIHJldHVybiB0aGlzLmlubmVyU3RhdGU7XG4gIH1cbiAgc2V0IHN0YXRlKG5ld1N0YXRlOiBQbGF5ZXJTdGF0ZU5hbWUpIHtcbiAgICBzd2l0Y2ggKG5ld1N0YXRlKSB7XG4gICAgICBjYXNlICdiZWZvcmUtcGxheWluZyc6IHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdwbGF5aW5nJzoge1xuICAgICAgICB0aGlzLnNwcml0ZSA/Pz0gSGVscGVyLmNyZWF0ZUluaXRpYWxTcHJpdGUoKTtcbiAgICAgICAgdGhpcy5idWxsZXRzQ29sbGlkZXIgPz89IG5ldyBCdWxsZXRzQ29sbGlkZXIodGhpcy5zcHJpdGUsICdlbmVteScpO1xuICAgICAgICB0aGlzLmZyYW1lQmVoYXZpb3IgPSAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5wcm9jZXNzTW92ZW1lbnQoKTtcbiAgICAgICAgICB0aGlzLmFkZFRvTmV4dFJlbmRlcigpO1xuICAgICAgICAgIHRoaXMucmVnaXN0ZXJEYW1hZ2UoKTtcbiAgICAgICAgICB0aGlzLmF0dGFjaygpO1xuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ3BsYXlpbmctYWZ0ZXItZGFtYWdlJzoge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLnN0YXRlID0gJ3BsYXlpbmcnO1xuICAgICAgICB9LCBQTEFZRVJfQUZURVJfREFNQUdFX0RVUkFUSU9OKTtcblxuICAgICAgICB0aGlzLmZyYW1lQmVoYXZpb3IgPSAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5wcm9jZXNzTW92ZW1lbnQoKTtcbiAgICAgICAgICB0aGlzLmFkZFRvTmV4dFJlbmRlcigpO1xuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2JlZm9yZS1kZWFkJzoge1xuICAgICAgICB0aGlzLmZyYW1lQmVoYXZpb3IgPSAoKSA9PiB7fTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9ICdkZWFkJztcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdkZWFkJzoge1xuICAgICAgICB0aGlzLmZyYW1lQmVoYXZpb3IgPSAoKSA9PiB7fTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5pbm5lclN0YXRlID0gbmV3U3RhdGU7XG4gIH1cblxuICBwcml2YXRlIHByb2Nlc3NNb3ZlbWVudCgpIHtcbiAgICB0aGlzLnNwcml0ZS5zcGVlZCA9IEhlbHBlci5nZXRTcGVlZEJ5S2V5Ym9hcmRzS2V5cyhcbiAgICAgIHRoaXMuc3ByaXRlLFxuICAgICAgdGhpcy5rZXlib2FyZENvbnRyb2xsZXJcbiAgICApO1xuICAgIHRoaXMuc3ByaXRlLm1vdmUoKTtcbiAgfVxuICBwcml2YXRlIGFkZFRvTmV4dFJlbmRlcigpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudCh0aGlzLnNwcml0ZSk7XG4gIH1cbiAgcHJpdmF0ZSByZWdpc3RlckRhbWFnZSgpIHtcbiAgICB0aGlzLmJ1bGxldHNDb2xsaWRlci50cnlUb0NvbGxpZGUoKCkgPT4ge1xuICAgICAgdGhpcy5saWZlYmFyLnBsYXllckhlYWx0aCAtPSAxO1xuXG4gICAgICBpZiAodGhpcy5saWZlYmFyLnBsYXllckhlYWx0aCkge1xuICAgICAgICB0aGlzLnN0YXRlID0gJ3BsYXlpbmctYWZ0ZXItZGFtYWdlJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSAnYmVmb3JlLWRlYWQnO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHByaXZhdGUgYXR0YWNrKCkge1xuICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCByZWFkeVRvQXR0YWNrID1cbiAgICAgIGN1cnJlbnRUaW1lID4gdGhpcy5sYXN0QXR0YWNrVGltZSArIFBMQVlFUl9BVFRBQ0tfREVMQVk7XG5cbiAgICBpZiAocmVhZHlUb0F0dGFjayAmJiB0aGlzLmtleWJvYXJkQ29udHJvbGxlci5pc0FjdGl2ZUtleShLRVlfQVRUQUNLKSkge1xuICAgICAgdGhpcy5sYXN0QXR0YWNrVGltZSA9IGN1cnJlbnRUaW1lO1xuICAgICAgdGhpcy5idWxsZXRzU3RvcmUuYWRkRWxlbWVudChcbiAgICAgICAgbmV3IEJ1bGxldCgncGxheWVyJywgdGhpcy5zcHJpdGUucG9pbnQuY2xvbmUoKSwgbmV3IFNwZWVkKDAsIC00KSlcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGRvRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLmZyYW1lQmVoYXZpb3IoKTtcbiAgfVxufVxuIiwiaW1wb3J0IE1vdmFibGVPYmplY3QgZnJvbSAnfi9Nb3ZhYmxlT2JqZWN0JztcbmltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vR2FtZU9iamVjdCc7XG5pbXBvcnQgS2V5Ym9hcmRDb250cm9sbGVyIGZyb20gJ34vS2V5Ym9hcmRDb250cm9sbGVyJztcbmltcG9ydCBTcGVlZCBmcm9tICd+L1NwZWVkJztcbmltcG9ydCBwbGF5ZXJQbmcgZnJvbSAnfi9pbWcvd2l6YXJkLnBuZyc7XG5pbXBvcnQge1xuICBQTEFZRVJfSU5JVElBTF9QT0lOVCxcbiAgUExBWUVSX0lOSVRJQUxfU0laRSxcbiAgUExBWUVSX0lOSVRJQUxfU1BFRUQsXG4gIFBMQVlFUl9NSU5fVE9QLFxuICBHQU1FX1dJTkRPV19IRUlHSFQsXG4gIEdBTUVfV0lORE9XX1dJRFRILFxuICBQTEFZRVJfTU9WRU1FTlRfU1BFRUQsXG4gIEtFWV9UT1AsXG4gIEtFWV9MRUZULFxuICBLRVlfUklHSFQsXG4gIEtFWV9CT1RUT00sXG59IGZyb20gJ34vY29uc3RzJztcbmltcG9ydCB6SW5kZXggZnJvbSAnfi96SW5kZXgnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlSW5pdGlhbFNwcml0ZSA9ICgpID0+IHtcbiAgcmV0dXJuIG5ldyBNb3ZhYmxlT2JqZWN0KFxuICAgIFBMQVlFUl9JTklUSUFMX1BPSU5ULmNsb25lKCksXG4gICAgUExBWUVSX0lOSVRJQUxfU0laRS5jbG9uZSgpLFxuICAgIFBMQVlFUl9JTklUSUFMX1NQRUVELmNsb25lKCksXG4gICAgYHVybCgke3BsYXllclBuZ30pYCxcbiAgICB6SW5kZXgucGxheWVyU3RhdGVcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRTcGVlZEJ5S2V5Ym9hcmRzS2V5cyA9IChcbiAgb2JqOiBHYW1lT2JqZWN0LFxuICBrZXlib2FyZDogS2V5Ym9hcmRDb250cm9sbGVyXG4pID0+IHtcbiAgY29uc3QgbmVlZFByZXZlbnRUb3AgPSBvYmoucG9pbnQueSA8PSBQTEFZRVJfTUlOX1RPUDtcbiAgY29uc3QgbmVlZFByZXZlbnRMZWZ0ID0gb2JqLnBvaW50LnggPD0gMDtcbiAgY29uc3QgbmVlZFByZXZlbnRCb3R0b20gPSBvYmoucG9pbnQueSA+PSBHQU1FX1dJTkRPV19IRUlHSFQgLSBvYmouc2l6ZS5oZWlnaHQ7XG4gIGNvbnN0IG5lZWRQcmV2ZW50UmlnaHQgPSBvYmoucG9pbnQueCA+PSBHQU1FX1dJTkRPV19XSURUSCAtIG9iai5zaXplLndpZHRoO1xuXG4gIGxldCBzcGVlZFggPSAwO1xuICBsZXQgc3BlZWRZID0gMDtcblxuICBpZiAoa2V5Ym9hcmQuaXNBY3RpdmVLZXkoS0VZX1RPUCkgJiYgIW5lZWRQcmV2ZW50VG9wKSB7XG4gICAgc3BlZWRZID0gLVBMQVlFUl9NT1ZFTUVOVF9TUEVFRDtcbiAgfVxuICBpZiAoa2V5Ym9hcmQuaXNBY3RpdmVLZXkoS0VZX0xFRlQpICYmICFuZWVkUHJldmVudExlZnQpIHtcbiAgICBzcGVlZFggPSAtUExBWUVSX01PVkVNRU5UX1NQRUVEO1xuICB9XG4gIGlmIChrZXlib2FyZC5pc0FjdGl2ZUtleShLRVlfQk9UVE9NKSAmJiAhbmVlZFByZXZlbnRCb3R0b20pIHtcbiAgICBzcGVlZFkgPSBQTEFZRVJfTU9WRU1FTlRfU1BFRUQ7XG4gIH1cbiAgaWYgKGtleWJvYXJkLmlzQWN0aXZlS2V5KEtFWV9SSUdIVCkgJiYgIW5lZWRQcmV2ZW50UmlnaHQpIHtcbiAgICBzcGVlZFggPSBQTEFZRVJfTU9WRU1FTlRfU1BFRUQ7XG4gIH1cblxuICByZXR1cm4gbmV3IFNwZWVkKHNwZWVkWCwgc3BlZWRZKTtcbn07XG4iLCJpbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IE1vdmFibGVPYmplY3QgZnJvbSAnfi9Nb3ZhYmxlT2JqZWN0JztcbmltcG9ydCB7XG4gIEVORU1ZX0FGVEVSX0RBTUFHRV9EVVJBVElPTixcbiAgRU5FTVlfQVRUQUNLX0RFTEFZLFxuICBFTkVNWV9SRUNFSVZJTkdfREFNQUdFLFxufSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgQnVsbGV0c0NvbGxpZGVyIGZyb20gJ34vQnVsbGV0c0NvbGxpZGVyJztcbmltcG9ydCBCdWxsZXRzU3RvcmUgZnJvbSAnfi9CdWxsZXRzU3RvcmUnO1xuaW1wb3J0IExpZmViYXIgZnJvbSAnfi9MaWZlYmFyJztcblxuaW1wb3J0ICogYXMgSGVscGVyIGZyb20gJy4vaGVscGVyJztcbmltcG9ydCB7IEVuZW15U3RhdGVOYW1lIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZW15U3RhdGUge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogRW5lbXlTdGF0ZTtcbiAgcHJpdmF0ZSBpbm5lclN0YXRlOiBFbmVteVN0YXRlTmFtZTtcbiAgcHJpdmF0ZSBzcHJpdGU6IE1vdmFibGVPYmplY3Q7XG4gIHByaXZhdGUgdmlydHVhbERPTTogVmlydHVhbERPTTtcbiAgcHJpdmF0ZSBmcmFtZUJlaGF2aW9yOiAoKSA9PiB2b2lkO1xuICBwcml2YXRlIGJ1bGxldHNDb2xsaWRlcjogQnVsbGV0c0NvbGxpZGVyO1xuICBwcml2YXRlIGxhc3RBdHRhY2tUaW1lOiBudW1iZXI7XG4gIHByaXZhdGUgYnVsbGV0c1N0b3JlOiBCdWxsZXRzU3RvcmU7XG4gIHByaXZhdGUgdGltZXI6IE5vZGVKUy5UaW1lb3V0O1xuICBwcml2YXRlIGxpZmViYXI6IExpZmViYXI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFFbmVteVN0YXRlLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLnN0YXRlID0gJ2JlZm9yZS1wbGF5aW5nJztcbiAgICAgIHRoaXMudmlydHVhbERPTSA9IG5ldyBWaXJ0dWFsRE9NKCk7XG4gICAgICB0aGlzLnNwcml0ZSA9IG51bGw7XG4gICAgICB0aGlzLmJ1bGxldHNDb2xsaWRlciA9IG51bGw7XG4gICAgICB0aGlzLmZyYW1lQmVoYXZpb3IgPSAoKSA9PiB7fTtcbiAgICAgIHRoaXMubGFzdEF0dGFja1RpbWUgPSBEYXRlLm5vdygpIC0gRU5FTVlfQVRUQUNLX0RFTEFZO1xuICAgICAgdGhpcy5idWxsZXRzU3RvcmUgPSBuZXcgQnVsbGV0c1N0b3JlKCk7XG4gICAgICB0aGlzLnRpbWVyID0gbnVsbDtcbiAgICAgIHRoaXMubGlmZWJhciA9IG5ldyBMaWZlYmFyKCk7XG5cbiAgICAgIEVuZW15U3RhdGUuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBFbmVteVN0YXRlLmluc3RhbmNlO1xuICB9XG5cbiAgcHJpdmF0ZSBwcm9jZXNzTW92ZW1lbnQoKSB7XG4gICAgdGhpcy5zcHJpdGUuc3BlZWQgPSBIZWxwZXIuZ2V0U3BlZWQodGhpcy5zcHJpdGUpO1xuICAgIHRoaXMuc3ByaXRlLm1vdmUoKTtcbiAgfVxuICBwcml2YXRlIGFkZFRvTmV4dFJlbmRlcigpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudCh0aGlzLnNwcml0ZSk7XG4gIH1cbiAgcHJpdmF0ZSByZWdpc3RlckRhbWFnZSgpIHtcbiAgICB0aGlzLmJ1bGxldHNDb2xsaWRlci50cnlUb0NvbGxpZGUoKCkgPT4ge1xuICAgICAgdGhpcy5saWZlYmFyLmVuZW15SGVhbHRoIC09IEVORU1ZX1JFQ0VJVklOR19EQU1BR0U7XG5cbiAgICAgIGlmICh0aGlzLmxpZmViYXIuZW5lbXlIZWFsdGgpIHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9ICdwbGF5aW5nLWFmdGVyLWRhbWFnZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnN0YXRlID0gJ2JlZm9yZS1kZWFkJztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBwcml2YXRlIGF0dGFjaygpIHtcbiAgICBjb25zdCBjdXJyZW50VGltZSA9IERhdGUubm93KCk7XG4gICAgY29uc3QgcmVhZHlUb0F0dGFjayA9XG4gICAgICBjdXJyZW50VGltZSA+IHRoaXMubGFzdEF0dGFja1RpbWUgKyBFTkVNWV9BVFRBQ0tfREVMQVk7XG5cbiAgICBpZiAocmVhZHlUb0F0dGFjaykge1xuICAgICAgdGhpcy5sYXN0QXR0YWNrVGltZSA9IGN1cnJlbnRUaW1lO1xuICAgICAgdGhpcy5idWxsZXRzU3RvcmUuYWRkRWxlbWVudChIZWxwZXIuY3JlYXRlQnVsbGV0KHRoaXMuc3ByaXRlKSk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IHN0YXRlKCk6IEVuZW15U3RhdGVOYW1lIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lclN0YXRlO1xuICB9XG4gIHNldCBzdGF0ZShuZXdTdGF0ZTogRW5lbXlTdGF0ZU5hbWUpIHtcbiAgICBzd2l0Y2ggKG5ld1N0YXRlKSB7XG4gICAgICBjYXNlICdiZWZvcmUtcGxheWluZyc6IHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdwbGF5aW5nJzoge1xuICAgICAgICB0aGlzLnNwcml0ZSA/Pz0gSGVscGVyLmNyZWF0ZUluaXRpYWxTcHJpdGUoKTtcbiAgICAgICAgdGhpcy5idWxsZXRzQ29sbGlkZXIgPz89IG5ldyBCdWxsZXRzQ29sbGlkZXIodGhpcy5zcHJpdGUsICdwbGF5ZXInKTtcbiAgICAgICAgdGhpcy5mcmFtZUJlaGF2aW9yID0gKCkgPT4ge1xuICAgICAgICAgIHRoaXMucHJvY2Vzc01vdmVtZW50KCk7XG4gICAgICAgICAgdGhpcy5hZGRUb05leHRSZW5kZXIoKTtcbiAgICAgICAgICB0aGlzLnJlZ2lzdGVyRGFtYWdlKCk7XG4gICAgICAgICAgdGhpcy5hdHRhY2soKTtcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdwbGF5aW5nLWFmdGVyLWRhbWFnZSc6IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ3NvbWUgYWN0aW9uIGFmdGVyIGRhbWFnZScpO1xuICAgICAgICAgIHRoaXMuc3RhdGUgPSAncGxheWluZyc7XG4gICAgICAgIH0sIEVORU1ZX0FGVEVSX0RBTUFHRV9EVVJBVElPTik7XG5cbiAgICAgICAgdGhpcy5mcmFtZUJlaGF2aW9yID0gKCkgPT4ge1xuICAgICAgICAgIHRoaXMucHJvY2Vzc01vdmVtZW50KCk7XG4gICAgICAgICAgdGhpcy5hZGRUb05leHRSZW5kZXIoKTtcbiAgICAgICAgICB0aGlzLnJlZ2lzdGVyRGFtYWdlKCk7XG4gICAgICAgICAgdGhpcy5hdHRhY2soKTtcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdiZWZvcmUtZGVhZCc6IHtcbiAgICAgICAgdGhpcy5mcmFtZUJlaGF2aW9yID0gKCkgPT4ge307XG4gICAgICAgIHRoaXMuc3RhdGUgPSAnZGVhZCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnZGVhZCc6IHtcbiAgICAgICAgdGhpcy5mcmFtZUJlaGF2aW9yID0gKCkgPT4ge307XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuaW5uZXJTdGF0ZSA9IG5ld1N0YXRlO1xuICB9XG5cbiAgcHVibGljIGRvRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLmZyYW1lQmVoYXZpb3IoKTtcbiAgfVxufVxuIiwiaW1wb3J0IEJ1bGxldCBmcm9tICd+L0J1bGxldCc7XG5pbXBvcnQgeyBQb2ludFNpemUgfSBmcm9tICd+L0dhbWVPYmplY3QvR2FtZU9iamVjdEFQSSc7XG5pbXBvcnQgUG9pbnQgZnJvbSAnfi9Qb2ludCc7XG5pbXBvcnQgU3BlZWQgZnJvbSAnfi9TcGVlZCc7XG5pbXBvcnQgTW92YWJsZU9iamVjdCBmcm9tICd+L01vdmFibGVPYmplY3QnO1xuaW1wb3J0IGVuZW15UG5nIGZyb20gJ34vaW1nL3NwaWRlci5wbmcnO1xuaW1wb3J0IHtcbiAgRU5FTVlfSU5JVElBTF9QT0lOVCxcbiAgRU5FTVlfSU5JVElBTF9TSVpFLFxuICBFTkVNWV9JTklUSUFMX1NQRUVELFxuICBFTkVNWV9MRUZUX0JPUkRFUixcbiAgRU5FTVlfUklHSFRfQk9SREVSLFxuICBHQU1FX1dJTkRPV19XSURUSCxcbn0gZnJvbSAnfi9jb25zdHMnO1xuaW1wb3J0IHpJbmRleCBmcm9tICd+L3pJbmRleCc7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVCdWxsZXQgPSAob2JqOiBQb2ludFNpemUpID0+IHtcbiAgY29uc3QgcG9pbnQgPSBuZXcgUG9pbnQoXG4gICAgb2JqLnBvaW50LnggKyBvYmouc2l6ZS53aWR0aCAvIDIsXG4gICAgb2JqLnBvaW50LnkgKyBvYmouc2l6ZS5oZWlnaHRcbiAgKTtcblxuICBjb25zdCBzcGVlZCA9IG5ldyBTcGVlZChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCkgLSA1LCAzKTtcblxuICByZXR1cm4gbmV3IEJ1bGxldCgnZW5lbXknLCBwb2ludCwgc3BlZWQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUluaXRpYWxTcHJpdGUgPSAoKSA9PiB7XG4gIHJldHVybiBuZXcgTW92YWJsZU9iamVjdChcbiAgICBFTkVNWV9JTklUSUFMX1BPSU5ULmNsb25lKCksXG4gICAgRU5FTVlfSU5JVElBTF9TSVpFLmNsb25lKCksXG4gICAgRU5FTVlfSU5JVElBTF9TUEVFRC5jbG9uZSgpLFxuICAgIGB1cmwoJHtlbmVteVBuZ30pYCxcbiAgICB6SW5kZXguZW5lbXlTdGF0ZVxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFNwZWVkID0gKG1vdmFibGVPYmplY3Q6IE1vdmFibGVPYmplY3QpID0+IHtcbiAgY29uc3QgbmVlZFByZXZlbnRMZWZ0ID0gbW92YWJsZU9iamVjdC5wb2ludC54IDw9IEVORU1ZX0xFRlRfQk9SREVSO1xuXG4gIGxldCBzcGVlZFggPSBtb3ZhYmxlT2JqZWN0LnNwZWVkLng7XG5cbiAgaWYgKG5lZWRQcmV2ZW50TGVmdCkge1xuICAgIHNwZWVkWCA9IE1hdGguYWJzKHNwZWVkWCk7XG4gICAgcmV0dXJuIG5ldyBTcGVlZChzcGVlZFgsIG1vdmFibGVPYmplY3Quc3BlZWQueSk7XG4gIH1cblxuICBjb25zdCBuZWVkUHJldmVudFJpZ2h0ID1cbiAgICBtb3ZhYmxlT2JqZWN0LnBvaW50LnggPj1cbiAgICBHQU1FX1dJTkRPV19XSURUSCAtIEVORU1ZX1JJR0hUX0JPUkRFUiAtIG1vdmFibGVPYmplY3Quc2l6ZS53aWR0aDtcblxuICBpZiAobmVlZFByZXZlbnRSaWdodCkge1xuICAgIHNwZWVkWCA9IC1NYXRoLmFicyhzcGVlZFgpO1xuICAgIHJldHVybiBuZXcgU3BlZWQoc3BlZWRYLCBtb3ZhYmxlT2JqZWN0LnNwZWVkLnkpO1xuICB9XG5cbiAgcmV0dXJuIG1vdmFibGVPYmplY3Quc3BlZWQ7XG59O1xuIiwiaW1wb3J0ICd+L2luZGV4LmNzcyc7XG5pbXBvcnQgJ34vZm9udHMvc3R5bGVzaGVldC5jc3MnO1xuaW1wb3J0IEFwcCBmcm9tICd+L0FwcCc7XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKTtcblxuYXBwLnN0YXJ0KCk7XG4iLCJpbXBvcnQgUmVuZGVyQVBJIGZyb20gJ34vUmVuZGVyQVBJJztcbmltcG9ydCBHYW1lV2luZG93IGZyb20gJ34vR2FtZVdpbmRvdyc7XG5pbXBvcnQgR2FtZUxvb3AgZnJvbSAnfi9HYW1lTG9vcCc7XG5pbXBvcnQgZ2V0UmVuZGVyQVBJIGZyb20gJ34vUmVuZGVyQVBJL2dldFJlbmRlckFQSSc7XG5pbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IFBsYXllclN0YXRlIGZyb20gJ34vUGxheWVyU3RhdGUnO1xuaW1wb3J0IEVuZW15U3RhdGUgZnJvbSAnfi9FbmVteVN0YXRlJztcbmltcG9ydCBCdWxsZXRzU3RvcmUgZnJvbSAnfi9CdWxsZXRzU3RvcmUnO1xuaW1wb3J0IExpZmViYXIgZnJvbSAnfi9MaWZlYmFyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEFwcDtcbiAgcHJpdmF0ZSByZW5kZXJBUEk6IFJlbmRlckFQSTtcbiAgcHJpdmF0ZSBnYW1lTG9vcDogR2FtZUxvb3A7XG4gIHByaXZhdGUgdmlydHVhbERPTTogVmlydHVhbERPTTtcbiAgcHJpdmF0ZSBwbGF5ZXJTdGF0ZTogUGxheWVyU3RhdGU7XG4gIHByaXZhdGUgZW5lbXlTdGF0ZTogRW5lbXlTdGF0ZTtcbiAgcHJpdmF0ZSBidWxsZXRzU3RvcmU6IEJ1bGxldHNTdG9yZTtcbiAgcHJpdmF0ZSBsaWZlYmFyOiBMaWZlYmFyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghQXBwLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLnJlbmRlckFQSSA9IGdldFJlbmRlckFQSSgpO1xuICAgICAgdGhpcy5nYW1lTG9vcCA9IG5ldyBHYW1lTG9vcCgpO1xuICAgICAgdGhpcy52aXJ0dWFsRE9NID0gbmV3IFZpcnR1YWxET00oKTtcbiAgICAgIHRoaXMucGxheWVyU3RhdGUgPSBuZXcgUGxheWVyU3RhdGUoKTtcbiAgICAgIHRoaXMuZW5lbXlTdGF0ZSA9IG5ldyBFbmVteVN0YXRlKCk7XG4gICAgICB0aGlzLmJ1bGxldHNTdG9yZSA9IG5ldyBCdWxsZXRzU3RvcmUoKTtcbiAgICAgIHRoaXMubGlmZWJhciA9IG5ldyBMaWZlYmFyKCk7XG4gICAgICBBcHAuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBBcHAuaW5zdGFuY2U7XG4gIH1cblxuICBwcml2YXRlIHJlbmRlcigpIHtcbiAgICB0aGlzLnJlbmRlckFQSS5yZW5kZXIodGhpcy52aXJ0dWFsRE9NLmdldENoYW5nZXMoKSk7XG4gICAgdGhpcy52aXJ0dWFsRE9NLnByZXBhcmVGb3JOZXdGcmFtZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBkb0J1bGxldHNGcmFtZUJlaGF2aW9yKCkge1xuICAgIHRoaXMuYnVsbGV0c1N0b3JlLnJlbW92ZUJ1bGxldHNPdXRzaWRlU2NyZWVuKCk7XG4gICAgdGhpcy5idWxsZXRzU3RvcmUuYnVsbGV0cy5mb3JFYWNoKChidWxsZXQpID0+IHtcbiAgICAgIGJ1bGxldC5kb0ZyYW1lQmVoYXZpb3IoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBzdGFydCgpIHtcbiAgICBjb25zdCBnYW1lV2luZG93ID0gbmV3IEdhbWVXaW5kb3codGhpcy5yZW5kZXJBUEkpO1xuXG4gICAgZ2FtZVdpbmRvdy5yZW5kZXIoKTtcblxuICAgIHRoaXMucGxheWVyU3RhdGUuc3RhdGUgPSAncGxheWluZyc7XG4gICAgdGhpcy5lbmVteVN0YXRlLnN0YXRlID0gJ3BsYXlpbmcnO1xuXG4gICAgdGhpcy5nYW1lTG9vcC5zdGFydCgoKSA9PiB7XG4gICAgICB0aGlzLmRvQnVsbGV0c0ZyYW1lQmVoYXZpb3IoKTtcbiAgICAgIHRoaXMucGxheWVyU3RhdGUuZG9GcmFtZUJlaGF2aW9yKCk7XG4gICAgICB0aGlzLmVuZW15U3RhdGUuZG9GcmFtZUJlaGF2aW9yKCk7XG4gICAgICB0aGlzLmxpZmViYXIuZG9GcmFtZUJlaGF2aW9yKCk7XG5cbiAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBCcm93c2VyQVBJIGZyb20gJy4vQnJvd3NlckFQSSc7XG5pbXBvcnQgRmFrZUFQSSBmcm9tICcuL0Zha2VBUEknO1xuaW1wb3J0IFJlbmRlckFQSSwgeyBSZW5kZXJBUElUeXBlIH0gZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFJlbmRlckFQSSgpOiBSZW5kZXJBUEkge1xuICBjb25zdCB0eXBlOiBSZW5kZXJBUElUeXBlID1cbiAgICAocHJvY2Vzcy5lbnYuUkVOREVSX0FQSSBhcyBSZW5kZXJBUElUeXBlKSA/PyAnYnJvd3Nlcic7XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAnYnJvd3Nlcic6XG4gICAgICByZXR1cm4gbmV3IEJyb3dzZXJBUEkoKTtcbiAgICBjYXNlICdmYWtlJzpcbiAgICAgIHJldHVybiBuZXcgRmFrZUFQSSgpO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgZW52IFJFTkRFUl9BUEk6ICR7dHlwZX1gKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF82X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF85X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzExX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ3X19fIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyIsImhhc2giLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfM19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF84X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zM19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zOV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80Ml9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80OF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81NF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81N19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTlfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInRhZ05hbWUiLCJ0b1VwcGVyQ2FzZSIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJsb2NhbHMiLCJyZW5kZXJBUEkiLCJHYW1lV2luZG93IiwiaW5zdGFuY2UiLCJoYW5kbGVFcnJvcnNGb3JEZXN0cm95IiwiSVNfVEVTVF9NT0RFIiwicmVuZGVyIiwicmVuZGVyR2FtZVdpbmRvdyIsImRlc3Ryb3kiLCJjbGVhckFsbCIsIngiLCJ5IiwiY2xvbmUiLCJQb2ludCIsIndpZHRoIiwiaGVpZ2h0IiwiU2l6ZSIsIlNwZWVkIiwiR0FNRV9XSU5ET1dfV0lEVEgiLCJQTEFZRVJfSU5JVElBTF9QT0lOVCIsIlBMQVlFUl9JTklUSUFMX1NJWkUiLCJQTEFZRVJfSU5JVElBTF9TUEVFRCIsIkVORU1ZX0lOSVRJQUxfUE9JTlQiLCJFTkVNWV9JTklUSUFMX1NJWkUiLCJFTkVNWV9JTklUSUFMX1NQRUVEIiwiUExBWUVSX0hFQUxUSF9JQ09OX1NJWkUiLCJCVUxMRVRfU0laRSIsImZyYW1lRHVyYXRpb24iLCJHYW1lTG9vcCIsImxhc3RGcmFtZVRpbWUiLCJEYXRlIiwibm93Iiwic3RhcnQiLCJmbiIsImxvb3AiLCJjdXJyZW50VGltZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIlJPT1RfSUQiLCJHQU1FX1dJTkRPV19JRCIsIlJlbmRlckFQSSIsInJvb3RDU1MiLCJ3aW5kb3dDU1MiLCJhZGRJZCIsImRhdGFzZXQiLCJ0ZXN0aWQiLCJjcmVhdGVXaW5kb3ciLCJyb290IiwiZ2V0RWxlbWVudEJ5SWQiLCJuYW1lIiwiZ2FtZU9iamVjdEFQSSIsImlubmVyRWxlbWVudCIsInNldEVsZW1lbnQiLCJodG1sIiwicG9pbnQiLCJzaXplIiwiYmFja2dyb3VuZCIsInpJbmRleCIsImFwcGx5QWN0dWFsQ2hhbmdlIiwiZWxlbWVudHNNYXAiLCJ3aW5kb3dOb2RlIiwiYm9keSIsImlubmVySFRNTCIsIm1vdW50IiwidmlldyIsIm5ld1ZpZXciLCJvbGRWaWV3IiwidW5tb3VudCIsImNoYW5nZXMiLCJmb3JFYWNoIiwiY2hhbmdlIiwiYWN0aW9uIiwiY29uc29sZSIsImxvZyIsIlZpcnR1YWxET00iLCJwcmV2RWxlbWVudHNNYXAiLCJuZXh0RWxlbWVudHNNYXAiLCJhZGRFbGVtZW50IiwiZ2V0QWxsSWRzRnJvbU1hcHMiLCJhbGxJZHNTZXQiLCJTZXQiLCJhZGQiLCJnZXRDaGFuZ2VzIiwiYWxsSWRzIiwicHJldkVsZW1lbnQiLCJuZXh0RWxlbWVudCIsInByZXBhcmVGb3JOZXdGcmFtZSIsIktleWJvYXJkQ29udHJvbGxlciIsImtleXMiLCJhZGRFdmVudExpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJkZWxldGUiLCJpc0FjdGl2ZUtleSIsImhhcyIsIkJ1bGxldHNTdG9yZSIsImlubmVyQnVsbGV0cyIsInJlbW92ZUJ1bGxldHNPdXRzaWRlU2NyZWVuIiwiZmlsdGVyIiwiYnVsbGV0IiwicmVtb3ZlRWxlbWVudCIsImlubmVyQnVsbGV0IiwiYnVsbGV0VHlwZSIsImJ1bGxldHNTdG9yZSIsInRyeVRvQ29sbGlkZSIsImFjdGlvbldoZW5Db2xsaWRlIiwiYnVsbGV0cyIsInR5cGUiLCJvYmoxIiwib2JqMiIsImxlZnQxIiwicmlnaHQxIiwibGVmdDIiLCJyaWdodDIiLCJ0b3AxIiwiYm90dG9tMSIsInRvcDIiLCJib3R0b20yIiwibGFzdFVuaXF1ZUlkIiwiYW1vdW50R2l2ZW5TYW1lSWQiLCJpbm5lcklkIiwiaW5uZXJQb2ludCIsImlubmVyU2l6ZSIsImlubmVyQmFja2dyb3VuZCIsImlubmVyWkluZGV4IiwidmFsdWUiLCJzcGVlZCIsImlubmVyU3BlZWQiLCJtb3ZlIiwibmV3U3BlZWQiLCJpbm5lclR5cGUiLCJ2aXJ0dWFsRE9NIiwic3ByaXRlIiwiQnVsbGV0IiwiY3JlYXRlSW5pdGlhbFNwcml0ZSIsInByb2Nlc3NNb3ZlbWVudCIsImFkZFRvTmV4dFJlbmRlciIsImRvRnJhbWVCZWhhdmlvciIsIkxpZmViYXIiLCJpbm5lclBsYXllckhlYWx0aCIsImlubmVyRW5lbXlIZWFsdGgiLCJhZGRUb1JlbmRlckVtcHR5QmFyIiwiYWRkVG9SZW5kZXJFbmVteUVtcHR5SGVhbHRoIiwiYWRkVG9SZW5kZXJFbmVteUhlYWx0aCIsImFkZFRvUmVuZGVyUGxheWVySGVhbHRoIiwiaXNMaWZlIiwiUGxheWVyU3RhdGUiLCJzdGF0ZSIsImtleWJvYXJkQ29udHJvbGxlciIsImJ1bGxldHNDb2xsaWRlciIsImZyYW1lQmVoYXZpb3IiLCJsYXN0QXR0YWNrVGltZSIsInRpbWVyIiwibGlmZWJhciIsImlubmVyU3RhdGUiLCJuZXdTdGF0ZSIsInJlZ2lzdGVyRGFtYWdlIiwiYXR0YWNrIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImtleWJvYXJkIiwibmVlZFByZXZlbnRUb3AiLCJuZWVkUHJldmVudExlZnQiLCJuZWVkUHJldmVudEJvdHRvbSIsIm5lZWRQcmV2ZW50UmlnaHQiLCJzcGVlZFgiLCJzcGVlZFkiLCJwbGF5ZXJIZWFsdGgiLCJFbmVteVN0YXRlIiwibW92YWJsZU9iamVjdCIsIk1hdGgiLCJhYnMiLCJlbmVteUhlYWx0aCIsImZsb29yIiwicmFuZG9tIiwiQXBwIiwiUkVOREVSX0FQSSIsImdldFJlbmRlckFQSSIsImdhbWVMb29wIiwicGxheWVyU3RhdGUiLCJlbmVteVN0YXRlIiwiZG9CdWxsZXRzRnJhbWVCZWhhdmlvciJdLCJzb3VyY2VSb290IjoiIn0=
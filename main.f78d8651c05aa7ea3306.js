(()=>{"use strict";var t={6882:(t,e,n)=>{n.d(e,{A:()=>le});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i),s=n(4417),c=n.n(s),p=new URL(n(1338),n.b),l=new URL(n(4878),n.b),f=new URL(n(8148),n.b),u=new URL(n(1140),n.b),d=new URL(n(9456),n.b),m=new URL(n(1388),n.b),h=new URL(n(8074),n.b),b=new URL(n(6202),n.b),y=new URL(n(7068),n.b),g=new URL(n(5328),n.b),w=new URL(n(7046),n.b),A=new URL(n(9830),n.b),_=new URL(n(7331),n.b),v=new URL(n(5571),n.b),R=new URL(n(3899),n.b),C=new URL(n(1669),n.b),I=new URL(n(7479),n.b),E=new URL(n(1967),n.b),x=new URL(n(9375),n.b),B=new URL(n(9449),n.b),T=new URL(n(7016),n.b),O=new URL(n(676),n.b),S=new URL(n(7682),n.b),k=new URL(n(690),n.b),M=new URL(n(3754),n.b),N=new URL(n(382),n.b),U=new URL(n(1892),n.b),P=new URL(n(3828),n.b),L=new URL(n(9564),n.b),D=new URL(n(1312),n.b),j=new URL(n(5766),n.b),F=new URL(n(2918),n.b),$=new URL(n(9212),n.b),H=new URL(n(3520),n.b),G=new URL(n(6646),n.b),K=new URL(n(8678),n.b),z=new URL(n(7239),n.b),V=new URL(n(7535),n.b),q=new URL(n(5823),n.b),W=new URL(n(8681),n.b),X=new URL(n(5625),n.b),Y=new URL(n(961),n.b),Z=new URL(n(1457),n.b),J=new URL(n(8403),n.b),Q=new URL(n(6272),n.b),tt=new URL(n(9484),n.b),et=new URL(n(7274),n.b),nt=new URL(n(3018),n.b),ot=a()(r()),rt=c()(p),it=c()(p,{hash:"?#iefix"}),at=c()(l),st=c()(f),ct=c()(u),pt=c()(d),lt=c()(d,{hash:"?#iefix"}),ft=c()(m),ut=c()(h),dt=c()(b),mt=c()(y),ht=c()(y,{hash:"?#iefix"}),bt=c()(g),yt=c()(w),gt=c()(A),wt=c()(_),At=c()(_,{hash:"?#iefix"}),_t=c()(v),vt=c()(R),Rt=c()(C),Ct=c()(I),It=c()(I,{hash:"?#iefix"}),Et=c()(E),xt=c()(x),Bt=c()(B),Tt=c()(T),Ot=c()(T,{hash:"?#iefix"}),St=c()(O),kt=c()(S),Mt=c()(k),Nt=c()(M),Ut=c()(M,{hash:"?#iefix"}),Pt=c()(N),Lt=c()(U),Dt=c()(P),jt=c()(L),Ft=c()(L,{hash:"?#iefix"}),$t=c()(D),Ht=c()(j),Gt=c()(F),Kt=c()($),zt=c()($,{hash:"?#iefix"}),Vt=c()(H),qt=c()(G),Wt=c()(K),Xt=c()(z),Yt=c()(z,{hash:"?#iefix"}),Zt=c()(V),Jt=c()(q),Qt=c()(W),te=c()(X),ee=c()(X,{hash:"?#iefix"}),ne=c()(Y),oe=c()(Z),re=c()(J),ie=c()(Q),ae=c()(Q,{hash:"?#iefix"}),se=c()(tt),ce=c()(et),pe=c()(nt);ot.push([t.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${rt});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${it}) format('embedded-opentype'),\n        url(${at}) format('woff2'),\n        url(${st}) format('woff'),\n        url(${ct}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${pt});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${lt}) format('embedded-opentype'),\n        url(${ft}) format('woff2'),\n        url(${ut}) format('woff'),\n        url(${dt}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${mt});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${ht}) format('embedded-opentype'),\n        url(${bt}) format('woff2'),\n        url(${yt}) format('woff'),\n        url(${gt}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${wt});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${At}) format('embedded-opentype'),\n        url(${_t}) format('woff2'),\n        url(${vt}) format('woff'),\n        url(${Rt}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ct});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${It}) format('embedded-opentype'),\n        url(${Et}) format('woff2'),\n        url(${xt}) format('woff'),\n        url(${Bt}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Tt});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Ot}) format('embedded-opentype'),\n        url(${St}) format('woff2'),\n        url(${kt}) format('woff'),\n        url(${Mt}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Nt});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${Ut}) format('embedded-opentype'),\n        url(${Pt}) format('woff2'),\n        url(${Lt}) format('woff'),\n        url(${Dt}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${jt});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${Ft}) format('embedded-opentype'),\n        url(${$t}) format('woff2'),\n        url(${Ht}) format('woff'),\n        url(${Gt}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Kt});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${zt}) format('embedded-opentype'),\n        url(${Vt}) format('woff2'),\n        url(${qt}) format('woff'),\n        url(${Wt}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Xt});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Yt}) format('embedded-opentype'),\n        url(${Zt}) format('woff2'),\n        url(${Jt}) format('woff'),\n        url(${Qt}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${te});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${ee}) format('embedded-opentype'),\n        url(${ne}) format('woff2'),\n        url(${oe}) format('woff'),\n        url(${re}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ie});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${ae}) format('embedded-opentype'),\n        url(${se}) format('woff2'),\n        url(${ce}) format('woff'),\n        url(${pe}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const le=ot},6523:(t,e,n)=>{n.d(e,{A:()=>s});var o=n(1354),r=n.n(o),i=n(6314),a=n.n(i)()(r());a.push([t.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const s=a},6314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var p=0;p<t.length;p++){var l=[].concat(t[p]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},4417:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},1354:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},5072:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},a=[],s=0;s<t.length;s++){var c=t[s],p=o.base?c[0]+o.base:c[0],l=i[p]||0,f="".concat(p," ").concat(l);i[p]=l+1;var u=n(f),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(d);else{var m=r(d,o);o.byIndex=s,e.splice(s,0,{identifier:f,updater:m,references:1})}a.push(f)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=n(i[a]);e[s].references--}for(var c=o(t,r),p=0;p<i.length;p++){var l=n(i[p]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},7659:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},5056:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},7825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},1113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},3754:(t,e,n)=>{t.exports=n.p+"d747b63eb41cdc64e3dd.eot"},3828:(t,e,n)=>{t.exports=n.p+"8e5479279b074720e15f.ttf"},1892:(t,e,n)=>{t.exports=n.p+"88d7f1b3ca9a9494d8e3.woff"},382:(t,e,n)=>{t.exports=n.p+"ae0c1d409f7d45d81c29.woff2"},1338:(t,e,n)=>{t.exports=n.p+"32f9679ea3ede2ca14de.eot"},1140:(t,e,n)=>{t.exports=n.p+"508cb30d2090ab879d2f.ttf"},8148:(t,e,n)=>{t.exports=n.p+"3123587706218b4d8187.woff"},4878:(t,e,n)=>{t.exports=n.p+"71b2b84d5d1a55271b57.woff2"},9456:(t,e,n)=>{t.exports=n.p+"6490694b37b0ee09bd91.eot"},6202:(t,e,n)=>{t.exports=n.p+"5e9f6556d3c0bf6230f0.ttf"},8074:(t,e,n)=>{t.exports=n.p+"3f2cbde6b72e8d05669f.woff"},1388:(t,e,n)=>{t.exports=n.p+"6cd35edfbc0d7a417131.woff2"},7068:(t,e,n)=>{t.exports=n.p+"e5f75ce1f7e72a64d436.eot"},9830:(t,e,n)=>{t.exports=n.p+"1e46c5294501ef46e23b.ttf"},7046:(t,e,n)=>{t.exports=n.p+"997a1e8970d2b7e50fff.woff"},5328:(t,e,n)=>{t.exports=n.p+"74126ecd07ad0d25d3f6.woff2"},5625:(t,e,n)=>{t.exports=n.p+"7588d6373c3525bc74cd.eot"},8403:(t,e,n)=>{t.exports=n.p+"4302c2e2c9e789c4c7ea.ttf"},1457:(t,e,n)=>{t.exports=n.p+"0d0bf30e7eeb4f6e7fd5.woff"},961:(t,e,n)=>{t.exports=n.p+"007ccbd3e8708c6afef8.woff2"},7239:(t,e,n)=>{t.exports=n.p+"d592a653abb7a57fedd8.eot"},8681:(t,e,n)=>{t.exports=n.p+"13d61ef8e609b548d9b5.ttf"},5823:(t,e,n)=>{t.exports=n.p+"df0f59d80526acc6d0cd.woff"},7535:(t,e,n)=>{t.exports=n.p+"d537674e9e217fa53a13.woff2"},7331:(t,e,n)=>{t.exports=n.p+"0ad9ca04101ace1b39d1.eot"},1669:(t,e,n)=>{t.exports=n.p+"ca7144f68f54653d3728.ttf"},3899:(t,e,n)=>{t.exports=n.p+"3c494714cdd1de859813.woff"},5571:(t,e,n)=>{t.exports=n.p+"6006fa5b67e554e06562.woff2"},6272:(t,e,n)=>{t.exports=n.p+"f9f0c87146a33023da7e.eot"},3018:(t,e,n)=>{t.exports=n.p+"ef677e217f2009c16854.ttf"},7274:(t,e,n)=>{t.exports=n.p+"b14ca2d2b289afceb0b0.woff"},9484:(t,e,n)=>{t.exports=n.p+"fc0337b9cf1cce2e6e1e.woff2"},9564:(t,e,n)=>{t.exports=n.p+"c000f0984de5d20c8eab.eot"},2918:(t,e,n)=>{t.exports=n.p+"ff1379d2f5bd26261cb2.ttf"},5766:(t,e,n)=>{t.exports=n.p+"9a91a0398c5cb21f0199.woff"},1312:(t,e,n)=>{t.exports=n.p+"ace58ae211415a1f378b.woff2"},7479:(t,e,n)=>{t.exports=n.p+"30b57652c88c5dbd65de.eot"},9449:(t,e,n)=>{t.exports=n.p+"25e40da956314b12d333.ttf"},9375:(t,e,n)=>{t.exports=n.p+"31012f9b3e3da44f87e8.woff"},1967:(t,e,n)=>{t.exports=n.p+"a25806274237d06e00a6.woff2"},9212:(t,e,n)=>{t.exports=n.p+"ae807ad4142f3eae2e0c.eot"},8678:(t,e,n)=>{t.exports=n.p+"7d12c80b1925091e4fec.ttf"},6646:(t,e,n)=>{t.exports=n.p+"674b1d2bd9d781457c17.woff"},3520:(t,e,n)=>{t.exports=n.p+"0b33782009e32497dba2.woff2"},7016:(t,e,n)=>{t.exports=n.p+"bc4d192a93ba33f68109.eot"},690:(t,e,n)=>{t.exports=n.p+"491dd1cc3dfda2b79d09.ttf"},7682:(t,e,n)=>{t.exports=n.p+"d5937d18c46d7ae260b6.woff"},676:(t,e,n)=>{t.exports=n.p+"3669a8fac8736f85a7f1.woff2"}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=o[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0;var o=n(5072),r=n.n(o),i=n(7825),a=n.n(i),s=n(7659),c=n.n(s),p=n(5056),l=n.n(p),f=n(540),u=n.n(f),d=n(1113),m=n.n(d),h=n(6523),b={};b.styleTagTransform=m(),b.setAttributes=l(),b.insert=c().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u(),r()(h.A,b),h.A&&h.A.locals&&h.A.locals;var y=n(6882),g={};g.styleTagTransform=m(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),r()(y.A,g),y.A&&y.A.locals&&y.A.locals;const w=function(){function t(e){return this.renderAPI=null,t.instance||(this.renderAPI=e,t.instance=this),t.instance}return t.prototype.handleErrorsForDestroy=function(){if(!{KEY_TOP:"W",KEY_LEFT:"A",KEY_BOTTOM:"S",KEY_RIGHT:"D",KEY_ATTACK:"K",TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},t.prototype.render=function(){this.renderAPI.renderGameWindow()},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,t.instance=null},t.instance=null,t}(),A=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t}(),_=function(){function t(t,e){this.width=t,this.height=e}return t.prototype.clone=function(){return new t(this.width,this.height)},t}(),v=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t}();var R=800,C=new A(380,500),I=new _(34,47),E=new v(0,0),x=new A(350,50),B=new _(100,100),T=new v(4,0),O=new _(30,27),S=new _(14,14);const k=function(){function t(e){return void 0===e&&(e=33),t.instance||(this.lastFrameTime=Date.now(),this.frameDuration=e,t.instance=this),t.instance}return t.prototype.start=function(t){var e=this,n=function(){var o=Date.now();e.lastFrameTime+e.frameDuration<=o&&(e.lastFrameTime=o,t()),requestAnimationFrame(n)};n()},t}();var M="root",N="game-window";const U=function(){function t(){return t.instance||(t.instance=this),t.instance}return t.instance=null,t}();var P="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),L="\n  width: ".concat(R,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n");function D(t,e){t.id=e,{KEY_TOP:"W",KEY_LEFT:"A",KEY_BOTTOM:"S",KEY_RIGHT:"D",KEY_ATTACK:"K",TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(t.dataset.testid=e)}function j(){var t=document.getElementById(M);if(!t)throw new Error('BrowserAPI Error: method "'.concat(j.name,'" - root not found'));var e=document.createElement("div");D(e,N),e.setAttribute("style",L),t.appendChild(e)}const F=function(){function t(t){this.gameObjectAPI=t,this.innerElement=null}return Object.defineProperty(t.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObjectAPI.id},enumerable:!1,configurable:!0}),t.prototype.createElement=function(){this.innerElement=document.createElement("div")},t.prototype.setElement=function(t){this.innerElement=t},Object.defineProperty(t.prototype,"css",{get:function(){var t=this.gameObjectAPI,e=t.point,n=t.size,o=t.background,r=t.zIndex;return"\n    position: absolute;\n    top: ".concat(e.y,"px;\n    left: ").concat(e.x,"px;\n    z-index: ").concat(r,";\n    width: ").concat(n.width,"px;\n    height: ").concat(n.height,"px;\n    background: ").concat(o,";\n    ")},enumerable:!1,configurable:!0}),t.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css)},t}();var $,H=($=function(t,e){return $=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},$(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}$(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});const G=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.elementsMap={},e}return H(e,t),Object.defineProperty(e.prototype,"window",{get:function(){var t=document.getElementById(N);if(!t)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return t},enumerable:!1,configurable:!0}),e.prototype.renderGameWindow=function(){var t,e;t=document.querySelector("body"),D(e=document.createElement("div"),M),e.setAttribute("style",P),t.appendChild(e),j()},e.prototype.clearAll=function(){document.body.innerHTML=""},e.prototype.mount=function(t){var e=new F(t);e.createElement(),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[e.id]=e},e.prototype.update=function(t){var e=new F(t),n=this.elementsMap[t.id];e.setElement(n.element),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[t.id]=e},e.prototype.unmount=function(t){this.elementsMap[t.id].element.remove(),delete this.elementsMap[t.id]},e.prototype.render=function(t){var e=this;t.forEach((function(t){switch(t.action){case"mount":e.mount(t);break;case"unmount":e.unmount(t);break;default:e.update(t)}}))},e}(U);var K=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const z=function(t){function e(){return t.call(this)||this}return K(e,t),e.prototype.renderGameWindow=function(){console.log("renderGameWindow")},e.prototype.clearAll=function(){console.log("clearAll")},e.prototype.render=function(t){console.log("render")},e}(U);const V=function(){function t(){return t.instance||(this.prevElementsMap={},this.nextElementsMap={},t.instance=this),t.instance}return t.prototype.addElement=function(t){this.nextElementsMap[t.id]=t},t.prototype.getAllIdsFromMaps=function(){var t=new Set;for(var e in this.prevElementsMap)t.add(e);for(var e in this.nextElementsMap)t.add(e);return t},t.prototype.getChanges=function(){var t=this,e=this.getAllIdsFromMaps(),n=[];return e.forEach((function(e){var o,r,i=null!==(o=t.prevElementsMap[e])&&void 0!==o?o:null,a=null!==(r=t.nextElementsMap[e])&&void 0!==r?r:null;i?a?n.push(a):n.push({id:i.id,point:i.point,size:i.size,background:i.background,zIndex:i.zIndex,action:"unmount"}):n.push({id:a.id,point:a.point,size:a.size,background:a.background,zIndex:a.zIndex,action:"mount"})})),n},t.prototype.prepareForNewFrame=function(){this.prevElementsMap=this.nextElementsMap,this.nextElementsMap={}},t}();var q,W;const X=(q="",W=0,function(){var t=Date.now()+"";return q===t?(W++,q+" "+W):(q=t,t)});const Y=function(){function t(t,e,n,o){void 0===n&&(n=""),void 0===o&&(o=1),this.innerId=X(),this.innerPoint=t,this.innerSize=e,this.innerBackground=n,this.innerZIndex=o}return Object.defineProperty(t.prototype,"id",{get:function(){return this.innerId},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"point",{get:function(){return this.innerPoint},set:function(t){this.innerPoint=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.innerSize},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"background",{get:function(){return this.innerBackground},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"zIndex",{get:function(){return this.innerZIndex},enumerable:!1,configurable:!0}),t}();var Z=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const J=function(t){function e(e,n,o,r,i){var a=t.call(this,e,n,r,i)||this;return a.innerSpeed=o,a}return Z(e,t),e.prototype.move=function(){this.point=new A(this.point.x+this.speed.x,this.point.y+this.speed.y)},Object.defineProperty(e.prototype,"speed",{get:function(){return this.innerSpeed},set:function(t){this.innerSpeed=t},enumerable:!1,configurable:!0}),e}(Y),Q=n.p+"98ce5afade1e5dcf76f2.png",tt=4,et=5,nt=6,ot=7,rt=n.p+"f6daa77bf4e4dd5f7f9f.png",it=n.p+"51183ae04093a5b578b5.png",at=function(){function t(e,n,o){this.innerType=e,this.virtualDOM=new V,this.sprite=t.createInitialSprite(this.innerType,n,o)}return t.createInitialSprite=function(t,e,n){return new J(e.clone(),S.clone(),n.clone(),"url(".concat("enemy"===t?rt:it,")"),3)},Object.defineProperty(t.prototype,"point",{get:function(){return this.sprite.point},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.sprite.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.sprite.id},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"type",{get:function(){return this.innerType},enumerable:!1,configurable:!0}),t.prototype.processMovement=function(){this.sprite.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.sprite)},t.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},t}(),st=function(){function t(){return t.instance||(this.keys=new Set,t.instance=this),t.instance}return t.prototype.addEventListeners=function(){var t=this;document.addEventListener("keydown",(function(e){t.keys.add(e.key.toUpperCase())})),document.addEventListener("keyup",(function(e){t.keys.delete(e.key.toUpperCase())}))},t.prototype.isActiveKey=function(t){return this.keys.has(t)},t}(),ct=function(){function t(){return t.instance||(this.innerBullets=[],t.instance=this),t.instance}return t.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(t){return!(t.point.x+t.size.width<0||t.point.x>R||t.point.y+t.size.height<0||t.point.y>600)}))},t.prototype.addElement=function(t){this.innerBullets.push(t)},t.prototype.removeElement=function(t){this.innerBullets=this.innerBullets.filter((function(e){return e.id!==t.id}))},Object.defineProperty(t.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),t}(),pt=function(){function t(t,e){this.target=t,this.bulletType=e,this.bulletsStore=new ct}return t.prototype.tryToCollide=function(t){var e=this;this.bulletsStore.bullets.forEach((function(n){e.bulletType===n.type&&function(t,e){var n=t.point.x,o=t.point.x+t.size.width,r=e.point.x,i=e.point.x+e.size.width;if(n>=r&&n<=i||o>=r&&o<=i){var a=t.point.y,s=t.point.y+t.size.height,c=e.point.y,p=e.point.y+e.size.height;if(a>=c&&a<=p||s>=c&&s<=p)return!0}return!1}(n,e.target)&&(t(),e.bulletsStore.removeElement(n))}))},t}(),lt=function(){function t(t,e){this.keyboardController=new st,this.keyboardController.addEventListeners(),this.sprite=t,this.virtualDOM=new V,this.bulletsCollider=new pt(this.sprite,"enemy"),this.bulletsStore=new ct,this.lastAttackTime=Date.now()-500,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,n,o,r,i,a,s;this.sprite.speed=(t=this.sprite,e=this.keyboardController,n=t.point.y<=350,o=t.point.x<=0,r=t.point.y>=600-t.size.height,i=t.point.x>=R-t.size.width,a=0,s=0,e.isActiveKey("W")&&!n&&(s=-4),e.isActiveKey("A")&&!o&&(a=-4),e.isActiveKey("S")&&!r&&(s=4),e.isActiveKey("D")&&!i&&(a=4),new v(a,s)),this.sprite.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.sprite)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=1,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t=Date.now();t>this.lastAttackTime+500&&this.keyboardController.isActiveKey("K")&&(this.lastAttackTime=t,this.bulletsStore.addElement(new at("player",this.sprite.point.clone(),new v(0,-4))))},t}();var ft=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const ut=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-playing",o}return ft(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(lt);var dt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const mt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing",o}return dt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(lt);var ht=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const bt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing-after-damage",o}return ht(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(lt);var yt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const gt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-dead",o}return yt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(lt);var wt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const At=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="dead",o}return wt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(lt);const _t=function(){function t(){return t.instance||(this.timer=null,this.innerHealth=3,this.sprite=new J(C.clone(),I.clone(),E.clone(),"url(".concat(Q,")"),2),this.stateNameBefore="before-playing",t.instance=this),t.instance}return Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){var t;return null!==(t=this.state.stateName)&&void 0!==t?t:"before-playing"},set:function(t){var e=this;switch(t){case"before-playing":this.state=new ut(this.sprite,this.innerHealth);break;case"playing":this.state=new mt(this.sprite,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="playing"}),1e3),this.state=new bt(this.sprite,this.innerHealth);break;case"before-dead":clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="dead"}),0),this.state=new gt(this.sprite,this.innerHealth);break;case"dead":this.state=new At(this.sprite,this.innerHealth)}},enumerable:!1,configurable:!0}),t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t}(),vt=n.p+"49dc2035dd05181f3af7.png",Rt=function(){function t(t,e){this.sprite=t,this.virtualDOM=new V,this.bulletsCollider=new pt(this.sprite,"player"),this.bulletsStore=new ct,this.lastAttackTime=Date.now()-200,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,n;this.sprite.speed=(e=(t=this.sprite).point.x<=50,n=t.speed.x,e?(n=Math.abs(n),new v(n,t.speed.y)):t.point.x>=750-t.size.width?(n=-Math.abs(n),new v(n,t.speed.y)):t.speed),this.sprite.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.sprite)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=10,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t,e,n,o=Date.now();o>this.lastAttackTime+200&&(this.lastAttackTime=o,this.bulletsStore.addElement((t=this.sprite,e=new A(t.point.x+t.size.width/2,t.point.y+t.size.height),n=new v(Math.floor(10*Math.random())-5,3),new at("enemy",e,n))))},t}();var Ct=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const It=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-playing",o}return Ct(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Rt);var Et=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const xt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing",o}return Et(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Rt);var Bt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Tt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing-after-damage",o}return Bt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Rt);var Ot=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const St=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-dead",o}return Ot(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Rt);var kt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Mt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="dead",o}return kt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Rt),Nt=function(){function t(){return t.instance||(this.sprite=new J(x.clone(),B.clone(),T.clone(),"url(".concat(vt,")"),2),this.innerHealth=400,this.state=new It(this.sprite,this.innerHealth),this.stateNameBefore=this.state.stateName,this.timer=null,t.instance=this),t.instance}return Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){var e=this;switch(t){case"before-playing":break;case"playing":this.state=new xt(this.sprite,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){console.log("some action after damage"),e.stateName="playing"}),500),this.state=new Tt(this.sprite,this.innerHealth);break;case"before-dead":this.state=new St(this.sprite,this.innerHealth),clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="dead"}),500);break;case"dead":this.state=new Mt(this.sprite,this.innerHealth)}},enumerable:!1,configurable:!0}),t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t}(),Ut=n.p+"7467a9e3d648bcc674d6.png",Pt=n.p+"3d38fa44a32629a1f955.png",Lt=function(){function t(){return t.instance||(this.enemy=new Nt,this.player=new _t,this.virtualDOM=new V,t.instance=this),t.instance}return t.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(new Y(new A(0,0),new _(R,29),"#009",tt))},t.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(new Y(new A(0,0),new _(400,29),"#000",et))},t.prototype.addToRenderEnemyHealth=function(){this.virtualDOM.addElement(new Y(new A(0,0),new _(this.enemy.health,29),"#f00",nt))},t.prototype.addToRenderPlayerHealth=function(){for(var t=1;t<=3;t++){var e=this.player.health>=t,n=new A(R-(1+O.width)*t,1);this.virtualDOM.addElement(new Y(n,O,"url(".concat(e?Ut:Pt,")"),ot))}},t.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},t}();(new(function(){function t(){return t.instance||(this.renderAPI=function(){var t,e=null!==(t={KEY_TOP:"W",KEY_LEFT:"A",KEY_BOTTOM:"S",KEY_RIGHT:"D",KEY_ATTACK:"K",TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==t?t:"browser";switch(e){case"browser":return new G;case"fake":return new z;default:throw new Error("Invalid env RENDER_API: ".concat(e))}}(),this.gameLoop=new k,this.virtualDOM=new V,this.player=new _t,this.enemy=new Nt,this.bulletsStore=new ct,this.lifebar=new Lt,t.instance=this),t.instance}return t.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},t.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(t){t.doFrameBehavior()}))},t.prototype.start=function(){var t=this;new w(this.renderAPI).render(),this.player.stateName="playing",this.enemy.stateName="playing",this.gameLoop.start((function(){t.doBulletsFrameBehavior(),t.player.doFrameBehavior(),t.enemy.doFrameBehavior(),t.lifebar.doFrameBehavior(),t.render()}))},t}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
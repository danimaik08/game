(()=>{"use strict";var e={5124:(e,t,n)=>{n.d(t,{A:()=>pt});var o=n(1354),r=n.n(o),i=n(6314),s=n.n(i),a=n(4417),c=n.n(a),l=new URL(n(1960),n.b),p=new URL(n(4436),n.b),u=new URL(n(6434),n.b),f=new URL(n(6402),n.b),d=new URL(n(8298),n.b),m=new URL(n(7038),n.b),h=new URL(n(8516),n.b),b=new URL(n(5844),n.b),y=new URL(n(6170),n.b),g=new URL(n(7294),n.b),_=new URL(n(4388),n.b),w=new URL(n(5972),n.b),A=new URL(n(3689),n.b),v=new URL(n(3265),n.b),R=new URL(n(5361),n.b),C=new URL(n(643),n.b),E=new URL(n(1889),n.b),I=new URL(n(2985),n.b),x=new URL(n(6681),n.b),O=new URL(n(6747),n.b),B=new URL(n(8698),n.b),T=new URL(n(7486),n.b),S=new URL(n(9012),n.b),k=new URL(n(1380),n.b),M=new URL(n(8796),n.b),N=new URL(n(6576),n.b),U=new URL(n(7830),n.b),P=new URL(n(8262),n.b),j=new URL(n(4498),n.b),D=new URL(n(374),n.b),L=new URL(n(5516),n.b),F=new URL(n(4604),n.b),G=new URL(n(6490),n.b),H=new URL(n(910),n.b),$=new URL(n(6980),n.b),K=new URL(n(740),n.b),z=new URL(n(8833),n.b),V=new URL(n(7081),n.b),q=new URL(n(7385),n.b),X=new URL(n(3691),n.b),W=new URL(n(4759),n.b),Y=new URL(n(1919),n.b),Z=new URL(n(255),n.b),J=new URL(n(2553),n.b),Q=new URL(n(8146),n.b),ee=new URL(n(1302),n.b),te=new URL(n(8332),n.b),ne=new URL(n(9964),n.b),oe=s()(r()),re=c()(l),ie=c()(l,{hash:"?#iefix"}),se=c()(p),ae=c()(u),ce=c()(f),le=c()(d),pe=c()(d,{hash:"?#iefix"}),ue=c()(m),fe=c()(h),de=c()(b),me=c()(y),he=c()(y,{hash:"?#iefix"}),be=c()(g),ye=c()(_),ge=c()(w),_e=c()(A),we=c()(A,{hash:"?#iefix"}),Ae=c()(v),ve=c()(R),Re=c()(C),Ce=c()(E),Ee=c()(E,{hash:"?#iefix"}),Ie=c()(I),xe=c()(x),Oe=c()(O),Be=c()(B),Te=c()(B,{hash:"?#iefix"}),Se=c()(T),ke=c()(S),Me=c()(k),Ne=c()(M),Ue=c()(M,{hash:"?#iefix"}),Pe=c()(N),je=c()(U),De=c()(P),Le=c()(j),Fe=c()(j,{hash:"?#iefix"}),Ge=c()(D),He=c()(L),$e=c()(F),Ke=c()(G),ze=c()(G,{hash:"?#iefix"}),Ve=c()(H),qe=c()($),Xe=c()(K),We=c()(z),Ye=c()(z,{hash:"?#iefix"}),Ze=c()(V),Je=c()(q),Qe=c()(X),et=c()(W),tt=c()(W,{hash:"?#iefix"}),nt=c()(Y),ot=c()(Z),rt=c()(J),it=c()(Q),st=c()(Q,{hash:"?#iefix"}),at=c()(ee),ct=c()(te),lt=c()(ne);oe.push([e.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${re});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${ie}) format('embedded-opentype'),\n        url(${se}) format('woff2'),\n        url(${ae}) format('woff'),\n        url(${ce}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${le});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${pe}) format('embedded-opentype'),\n        url(${ue}) format('woff2'),\n        url(${fe}) format('woff'),\n        url(${de}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${me});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${he}) format('embedded-opentype'),\n        url(${be}) format('woff2'),\n        url(${ye}) format('woff'),\n        url(${ge}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${_e});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${we}) format('embedded-opentype'),\n        url(${Ae}) format('woff2'),\n        url(${ve}) format('woff'),\n        url(${Re}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ce});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${Ee}) format('embedded-opentype'),\n        url(${Ie}) format('woff2'),\n        url(${xe}) format('woff'),\n        url(${Oe}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Be});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Te}) format('embedded-opentype'),\n        url(${Se}) format('woff2'),\n        url(${ke}) format('woff'),\n        url(${Me}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ne});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${Ue}) format('embedded-opentype'),\n        url(${Pe}) format('woff2'),\n        url(${je}) format('woff'),\n        url(${De}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Le});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${Fe}) format('embedded-opentype'),\n        url(${Ge}) format('woff2'),\n        url(${He}) format('woff'),\n        url(${$e}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ke});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${ze}) format('embedded-opentype'),\n        url(${Ve}) format('woff2'),\n        url(${qe}) format('woff'),\n        url(${Xe}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${We});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Ye}) format('embedded-opentype'),\n        url(${Ze}) format('woff2'),\n        url(${Je}) format('woff'),\n        url(${Qe}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${et});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${tt}) format('embedded-opentype'),\n        url(${nt}) format('woff2'),\n        url(${ot}) format('woff'),\n        url(${rt}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${it});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${st}) format('embedded-opentype'),\n        url(${at}) format('woff2'),\n        url(${ct}) format('woff'),\n        url(${lt}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/assets/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const pt=oe},6523:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(1354),r=n.n(o),i=n(6314),s=n.n(i)()(r());s.push([e.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const a=s},6314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);o&&s[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),t.push(p))}},t}},4417:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},1354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},5072:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},s=[],a=0;a<e.length;a++){var c=e[a],l=o.base?c[0]+o.base:c[0],p=i[l]||0,u="".concat(l," ").concat(p);i[l]=p+1;var f=n(u),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)t[f].references++,t[f].updater(d);else{var m=r(d,o);o.byIndex=a,t.splice(a,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var a=n(i[s]);t[a].references--}for(var c=o(e,r),l=0;l<i.length;l++){var p=n(i[l]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}i=c}}},7659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},5056:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},1113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},8796:(e,t,n)=>{e.exports=n.p+"d747b63eb41cdc64e3dd.eot"},8262:(e,t,n)=>{e.exports=n.p+"8e5479279b074720e15f.ttf"},7830:(e,t,n)=>{e.exports=n.p+"88d7f1b3ca9a9494d8e3.woff"},6576:(e,t,n)=>{e.exports=n.p+"ae0c1d409f7d45d81c29.woff2"},1960:(e,t,n)=>{e.exports=n.p+"32f9679ea3ede2ca14de.eot"},6402:(e,t,n)=>{e.exports=n.p+"508cb30d2090ab879d2f.ttf"},6434:(e,t,n)=>{e.exports=n.p+"3123587706218b4d8187.woff"},4436:(e,t,n)=>{e.exports=n.p+"71b2b84d5d1a55271b57.woff2"},8298:(e,t,n)=>{e.exports=n.p+"6490694b37b0ee09bd91.eot"},5844:(e,t,n)=>{e.exports=n.p+"5e9f6556d3c0bf6230f0.ttf"},8516:(e,t,n)=>{e.exports=n.p+"3f2cbde6b72e8d05669f.woff"},7038:(e,t,n)=>{e.exports=n.p+"6cd35edfbc0d7a417131.woff2"},6170:(e,t,n)=>{e.exports=n.p+"e5f75ce1f7e72a64d436.eot"},5972:(e,t,n)=>{e.exports=n.p+"1e46c5294501ef46e23b.ttf"},4388:(e,t,n)=>{e.exports=n.p+"997a1e8970d2b7e50fff.woff"},7294:(e,t,n)=>{e.exports=n.p+"74126ecd07ad0d25d3f6.woff2"},4759:(e,t,n)=>{e.exports=n.p+"7588d6373c3525bc74cd.eot"},2553:(e,t,n)=>{e.exports=n.p+"4302c2e2c9e789c4c7ea.ttf"},255:(e,t,n)=>{e.exports=n.p+"0d0bf30e7eeb4f6e7fd5.woff"},1919:(e,t,n)=>{e.exports=n.p+"007ccbd3e8708c6afef8.woff2"},8833:(e,t,n)=>{e.exports=n.p+"d592a653abb7a57fedd8.eot"},3691:(e,t,n)=>{e.exports=n.p+"13d61ef8e609b548d9b5.ttf"},7385:(e,t,n)=>{e.exports=n.p+"df0f59d80526acc6d0cd.woff"},7081:(e,t,n)=>{e.exports=n.p+"d537674e9e217fa53a13.woff2"},3689:(e,t,n)=>{e.exports=n.p+"0ad9ca04101ace1b39d1.eot"},643:(e,t,n)=>{e.exports=n.p+"ca7144f68f54653d3728.ttf"},5361:(e,t,n)=>{e.exports=n.p+"3c494714cdd1de859813.woff"},3265:(e,t,n)=>{e.exports=n.p+"6006fa5b67e554e06562.woff2"},8146:(e,t,n)=>{e.exports=n.p+"f9f0c87146a33023da7e.eot"},9964:(e,t,n)=>{e.exports=n.p+"ef677e217f2009c16854.ttf"},8332:(e,t,n)=>{e.exports=n.p+"b14ca2d2b289afceb0b0.woff"},1302:(e,t,n)=>{e.exports=n.p+"fc0337b9cf1cce2e6e1e.woff2"},4498:(e,t,n)=>{e.exports=n.p+"c000f0984de5d20c8eab.eot"},4604:(e,t,n)=>{e.exports=n.p+"ff1379d2f5bd26261cb2.ttf"},5516:(e,t,n)=>{e.exports=n.p+"9a91a0398c5cb21f0199.woff"},374:(e,t,n)=>{e.exports=n.p+"ace58ae211415a1f378b.woff2"},1889:(e,t,n)=>{e.exports=n.p+"30b57652c88c5dbd65de.eot"},6747:(e,t,n)=>{e.exports=n.p+"25e40da956314b12d333.ttf"},6681:(e,t,n)=>{e.exports=n.p+"31012f9b3e3da44f87e8.woff"},2985:(e,t,n)=>{e.exports=n.p+"a25806274237d06e00a6.woff2"},6490:(e,t,n)=>{e.exports=n.p+"ae807ad4142f3eae2e0c.eot"},740:(e,t,n)=>{e.exports=n.p+"7d12c80b1925091e4fec.ttf"},6980:(e,t,n)=>{e.exports=n.p+"674b1d2bd9d781457c17.woff"},910:(e,t,n)=>{e.exports=n.p+"0b33782009e32497dba2.woff2"},8698:(e,t,n)=>{e.exports=n.p+"bc4d192a93ba33f68109.eot"},1380:(e,t,n)=>{e.exports=n.p+"491dd1cc3dfda2b79d09.ttf"},9012:(e,t,n)=>{e.exports=n.p+"d5937d18c46d7ae260b6.woff"},7486:(e,t,n)=>{e.exports=n.p+"3669a8fac8736f85a7f1.woff2"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0;var o=n(5072),r=n.n(o),i=n(7825),s=n.n(i),a=n(7659),c=n.n(a),l=n(5056),p=n.n(l),u=n(540),f=n.n(u),d=n(1113),m=n.n(d),h=n(6523),b={};b.styleTagTransform=m(),b.setAttributes=p(),b.insert=c().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=f(),r()(h.A,b),h.A&&h.A.locals&&h.A.locals;var y=n(5124),g={};g.styleTagTransform=m(),g.setAttributes=p(),g.insert=c().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=f(),r()(y.A,g),y.A&&y.A.locals&&y.A.locals;var _="root",w="game-window";const A=function(){},v=function(){function e(e,t){this.x=e,this.y=t}return e.prototype.clone=function(){return new e(this.x,this.y)},e.prototype.valueOf=function(){return this.x+" "+this.y},e}(),R=function(){function e(e,t){this.width=e,this.height=t}return e.prototype.clone=function(){return new e(this.width,this.height)},e.prototype.valueOf=function(){return this.width+" "+this.height},e}(),C=function(){function e(e,t){this.x=e,this.y=t}return e.prototype.clone=function(){return new e(this.x,this.y)},e.prototype.valueOf=function(){return this.x+" "+this.y},e}();var E,I,x,O,B,T,S=800,k=new v(380,500),M=new R(34,47),N=new C(0,0),U=new v(350,50),P=new R(100,100),j=new C(4,0),D=new R(30,27),L=new R(14,14),F=null!==(E=localStorage.getItem("KEY_TOP"))&&void 0!==E?E:"W",G=null!==(I=localStorage.getItem("KEY_LEFT"))&&void 0!==I?I:"A",H=null!==(x=localStorage.getItem("KEY_BOTTOM"))&&void 0!==x?x:"S",$=null!==(O=localStorage.getItem("KEY_RIGHT"))&&void 0!==O?O:"D",K=null!==(B=localStorage.getItem("KEY_ATTACK"))&&void 0!==B?B:"K",z=null!==(T=localStorage.getItem("KEY_PAUSE"))&&void 0!==T?T:"P",V="Enter";console.log("keys",F,G,H,$,K,z);var q="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),X="\n  width: ".concat(S,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n  cursor: default;\n");function W(e,t){e.id=t,{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(e.dataset.testid=t)}function Y(){var e=document.getElementById(_);if(!e)throw new Error('BrowserAPI Error: method "'.concat(Y.name,'" - root not found'));var t=document.createElement("div");W(t,w),t.setAttribute("style",X),e.appendChild(t)}var Z=function(){function e(e){this.gameObject=e,this.innerElement=null}return Object.defineProperty(e.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),e.prototype.createElement=function(){this.innerElement=document.createElement("div")},e.prototype.setElement=function(e){this.innerElement=e},e.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css),this.element.innerHTML=this.gameObject.text},Object.defineProperty(e.prototype,"css",{get:function(){var e=this.gameObject,t=e.point,n=e.size,o=e.background,r=e.textColor,i=e.zIndex;return"\n    position: absolute;\n    top: ".concat(t.y,"px;\n    left: ").concat(t.x,"px;\n    z-index: ").concat(i,";\n    width: ").concat(n.width,"px;\n    height: ").concat(n.height,"px;\n    background: ").concat(o,";\n    color: ").concat(r,";\n    ")},enumerable:!1,configurable:!0}),e}();const J=Z;var Q,ee=(Q=function(e,t){return Q=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},Q(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}Q(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});const te=function(e){function t(){var n=e.call(this)||this;return n.elementsMap={},t.instance||(t.instance=n),t.instance}return ee(t,e),Object.defineProperty(t.prototype,"window",{get:function(){var e=document.getElementById(w);if(!e)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return e},enumerable:!1,configurable:!0}),t.prototype.renderGameWindow=function(){var e,t;e=document.querySelector("body"),W(t=document.createElement("div"),_),t.setAttribute("style",q),e.appendChild(t),Y()},t.prototype.clearAll=function(){document.body.innerHTML=""},t.prototype.render=function(e){var t=this;e.forEach((function(e){switch(e.action){case"mount":t.mount(e.gameObject);break;case"unmount":t.unmount(e.gameObject);break;case"update":t.update(e.gameObject)}}))},t.prototype.mount=function(e){var t=new J(e);t.createElement(),t.applyActualChange(),this.window.appendChild(t.element),this.elementsMap[t.id]=t},t.prototype.update=function(e){var t=new J(e),n=this.elementsMap[e.id];t.setElement(n.element),t.applyActualChange(),this.window.appendChild(t.element),this.elementsMap[e.id]=t},t.prototype.unmount=function(e){this.elementsMap[e.id].element.remove(),delete this.elementsMap[e.id]},t.instance=null,t}(A);var ne=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const oe=function(e){function t(){return e.call(this)||this}return ne(t,e),t.prototype.renderGameWindow=function(){console.log("renderGameWindow")},t.prototype.clearAll=function(){console.log("clearAll")},t.prototype.render=function(e){console.log("render")},t}(A);function re(){var e,t=null!==(e={TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==e?e:"browser";switch(t){case"browser":return new te;case"fake":return new oe;default:throw new Error("Invalid env RENDER_API: ".concat(t))}}const ie=function(){function e(t){return void 0===t&&(t=33),e.instance||(this.lastFrameTime=Date.now(),this.frameDuration=t,e.instance=this),e.instance}return e.prototype.start=function(e){var t=this,n=function(){var o=Date.now();t.lastFrameTime+t.frameDuration<=o&&(t.lastFrameTime=o,e()),requestAnimationFrame(n)};n()},e}(),se=function(){function e(t){return this.renderAPI=null,e.instance||(this.renderAPI=t,e.instance=this),e.instance}return e.prototype.render=function(){this.renderAPI.renderGameWindow()},e.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,e.instance=null},e.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},e.instance=null,e}();var ae,ce;const le=(ae="",ce=0,function(){var e=Date.now()+"";return ae===e?(ce++,ae+" "+ce):(ae=e,e)});var pe=function(){function e(e){var t,n,o,r,i,s,a,c;this.id=null!==(t=null==e?void 0:e.id)&&void 0!==t?t:le(),this.point=null!==(n=null==e?void 0:e.point)&&void 0!==n?n:new v(0,0),this.size=null!==(o=null==e?void 0:e.size)&&void 0!==o?o:new R(1,1),this.speed=null!==(r=null==e?void 0:e.speed)&&void 0!==r?r:new C(0,0),this.zIndex=null!==(i=null==e?void 0:e.zIndex)&&void 0!==i?i:1,this.text=null!==(s=null==e?void 0:e.text)&&void 0!==s?s:"",this.textColor=null!==(a=null==e?void 0:e.textColor)&&void 0!==a?a:"#000",this.background=null!==(c=null==e?void 0:e.background)&&void 0!==c?c:"transparent"}return e.prototype.move=function(){this.point=new v(this.point.x+this.speed.x,this.point.y+this.speed.y)},e.prototype.clone=function(){return new e(this)},e}();const ue=pe,fe=n.p+"98ce5afade1e5dcf76f2.png",de=4,me=5,he=6,be=7;var ye=function(){function e(){return e.instance||(this.prevElements={},this.nextElements={},e.instance=this),e.instance}return e.prototype.addElement=function(e){this.nextElements[e.id]=e},e.prototype.prepareForNewFrame=function(){this.prevElements={},this.cloneNextElementsIntoPrevElements(),this.nextElements={}},e.prototype.getChanges=function(){var e=this,t=this.getAllIdsFromMaps(),n=[];return t.forEach((function(t){n.push(e.getChangeForElementById(t))})),n},e.prototype.destroy=function(){this.handleErrorsForDestroy(),this.prevElements=null,this.nextElements=null,e.instance=null},e.prototype.cloneNextElementsIntoPrevElements=function(){for(var e in this.nextElements)this.prevElements[e]=this.nextElements[e].clone()},e.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('VirtualDOM Error: called method "destroy" (which for tests only!) not in tests')},e.prototype.getAllIdsFromMaps=function(){var e=new Set;for(var t in this.prevElements)e.add(t);for(var t in this.nextElements)e.add(t);return e},e.prototype.getChangeForElementById=function(e){var t,n,o=null!==(t=this.prevElements[e])&&void 0!==t?t:null,r=null!==(n=this.nextElements[e])&&void 0!==n?n:null;return o?r?{gameObject:r,action:this.isElementUpdated(e)?"update":"not-a-change"}:{gameObject:o,action:"unmount"}:{gameObject:r,action:"mount"}},e.prototype.isElementUpdated=function(e){var t=this.prevElements[e],n=this.nextElements[e];for(var o in t){var r=o;if(t[r].valueOf()!==n[r].valueOf())return!0}return!1},e}();const ge=ye,_e=n.p+"f6daa77bf4e4dd5f7f9f.png",we=n.p+"51183ae04093a5b578b5.png",Ae=function(){function e(t,n,o){this.type=t,this.virtualDOM=new ge,this.gameObject=e.createInitialSprite(this.type,n,o)}return Object.defineProperty(e.prototype,"point",{get:function(){return this.gameObject.point},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"size",{get:function(){return this.gameObject.size},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),e.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},e.createInitialSprite=function(e,t,n){return new ue({point:t.clone(),size:L.clone(),speed:n.clone(),zIndex:3,background:"url(".concat("enemy"===e?_e:we,")")})},e.prototype.processMovement=function(){this.gameObject.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},e}(),ve=function(){function e(){var t=this;return e.instance||(this.keys=new Set,e.instance=this,document.addEventListener("keydown",(function(e){t.keys.add(e.key.toUpperCase())})),document.addEventListener("keyup",(function(e){t.keys.delete(e.key.toUpperCase())}))),e.instance}return e.prototype.isActiveKey=function(e){return this.keys.has(e.toUpperCase())},e}(),Re=function(){function e(){return e.instance||(this.innerBullets=[],e.instance=this),e.instance}return e.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(e){return!(e.point.x+e.size.width<0||e.point.x>S||e.point.y+e.size.height<0||e.point.y>600)}))},e.prototype.addElement=function(e){this.innerBullets.push(e)},e.prototype.removeElement=function(e){this.innerBullets=this.innerBullets.filter((function(t){return t.id!==e.id}))},Object.defineProperty(e.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),e}(),Ce=function(){function e(e,t){this.target=e,this.bulletType=t,this.bulletsStore=new Re}return e.prototype.tryToCollide=function(e){var t=this;this.bulletsStore.bullets.forEach((function(n){t.bulletType===n.type&&function(e,t){var n=e.point.x,o=e.point.x+e.size.width,r=t.point.x,i=t.point.x+t.size.width;if(n>=r&&n<=i||o>=r&&o<=i){var s=e.point.y,a=e.point.y+e.size.height,c=t.point.y,l=t.point.y+t.size.height;if(s>=c&&s<=l||a>=c&&a<=l)return!0}return!1}(n,t.target)&&(e(),t.bulletsStore.removeElement(n))}))},e}(),Ee=function(){function e(e,t){this.keyboardController=new ve,this.gameObject=e,this.virtualDOM=new ge,this.bulletsCollider=new Ce(this.gameObject,"enemy"),this.bulletsStore=new Re,this.lastAttackTime=Date.now()-500,this.stateName="before-playing",this.health=t}return e.prototype.processMovement=function(){var e,t,n,o,r,i,s,a;this.gameObject.speed=(e=this.gameObject,t=this.keyboardController,n=e.point.y<=350,o=e.point.x<=0,r=e.point.y>=600-e.size.height,i=e.point.x>=S-e.size.width,s=0,a=0,t.isActiveKey(F)&&!n&&(a=-4),t.isActiveKey(G)&&!o&&(s=-4),t.isActiveKey(H)&&!r&&(a=4),t.isActiveKey($)&&!i&&(s=4),new C(s,a)),this.gameObject.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},e.prototype.registerDamage=function(){var e=this;this.bulletsCollider.tryToCollide((function(){e.health-=1,e.health?e.stateName="playing-after-damage":e.stateName="before-dead"}))},e.prototype.attack=function(){var e=Date.now();e>this.lastAttackTime+500&&this.keyboardController.isActiveKey(K)&&(this.lastAttackTime=e,this.bulletsStore.addElement(new Ae("player",this.gameObject.point.clone(),new C(0,-4))))},e}();var Ie=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const xe=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="before-playing",o}return Ie(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(Ee);var Oe=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Be=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing",o}return Oe(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){e.prototype.addToNextRender.call(this)},t.prototype.registerDamage=function(){e.prototype.registerDamage.call(this)},t.prototype.attack=function(){e.prototype.attack.call(this)},t}(Ee);var Te=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Se=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing-after-damage",o.framesCount=0,o.isInvisiblePlayer=!0,o}return Te(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){this.isInvisiblePlayer||e.prototype.addToNextRender.call(this),this.framesCount++,this.framesCount>=t.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER&&(this.isInvisiblePlayer=!this.isInvisiblePlayer,this.framesCount=0)},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER=5,t}(Ee);var ke=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Me=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="before-dead",o}return ke(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(Ee);var Ne=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Ue=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="dead",o}return Ne(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(Ee);var Pe=function(){function e(){return e.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",e.instance=this),e.instance}return e.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=3,this.gameObject=new ue({point:k.clone(),size:M.clone(),speed:N.clone(),background:"url(".concat(fe,")"),zIndex:2}),this.stateName="playing"},e.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},e.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},e.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(e.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"stateName",{get:function(){var e;return null!==(e=this.state.stateName)&&void 0!==e?e:"before-playing"},set:function(e){var t=this;switch(e){case"before-playing":this.state=new xe(this.gameObject,this.innerHealth);break;case"playing":this.state=new Be(this.gameObject,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){t.stateName="playing"}),3e3),this.state=new Se(this.gameObject,this.innerHealth);break;case"before-dead":clearTimeout(this.timer),this.timer=setTimeout((function(){t.stateName="dead"}),0),this.state=new Me(this.gameObject,this.innerHealth);break;case"dead":this.state=new Ue(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),e}();const je=Pe,De=n.p+"49dc2035dd05181f3af7.png",Le=function(){function e(e,t){this.gameObject=e,this.virtualDOM=new ge,this.bulletsCollider=new Ce(this.gameObject,"player"),this.bulletsStore=new Re,this.lastAttackTime=Date.now()-200,this.stateName="before-playing",this.health=t}return e.prototype.processMovement=function(){var e,t,n;this.gameObject.speed=(t=(e=this.gameObject).point.x<=50,n=e.speed.x,t?(n=Math.abs(n),new C(n,e.speed.y)):e.point.x>=750-e.size.width?(n=-Math.abs(n),new C(n,e.speed.y)):e.speed),this.gameObject.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},e.prototype.registerDamage=function(){var e=this;this.bulletsCollider.tryToCollide((function(){e.health-=10,e.health?e.stateName="playing-after-damage":e.stateName="before-dead"}))},e.prototype.attack=function(){var e,t,n,o,r=Date.now();r>this.lastAttackTime+200&&(this.lastAttackTime=r,this.bulletsStore.addElement((e=this.gameObject.point,t=this.gameObject.size,n=new v(e.x+t.width/2,e.y+t.height),o=new C(Math.floor(10*Math.random())-5,3),new Ae("enemy",n,o))))},e}();var Fe=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Ge=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing",o}return Fe(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){e.prototype.addToNextRender.call(this)},t.prototype.registerDamage=function(){e.prototype.registerDamage.call(this)},t.prototype.attack=function(){e.prototype.attack.call(this)},t}(Le);var He=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const $e=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing-after-damage",o}return He(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){e.prototype.addToNextRender.call(this)},t.prototype.registerDamage=function(){e.prototype.registerDamage.call(this)},t.prototype.attack=function(){e.prototype.attack.call(this)},t}(Le);var Ke=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const ze=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="before-dead",o}return Ke(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(Le);var Ve=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const qe=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="dead",o}return Ve(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(Le),Xe=function(){function e(){return e.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",e.instance=this),e.instance}return e.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=400,this.gameObject=new ue({point:U.clone(),size:P.clone(),speed:j.clone(),zIndex:2,background:"url(".concat(De,")")}),this.stateName="playing"},e.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},e.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},e.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(e.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"stateName",{get:function(){return this.state.stateName},set:function(e){var t=this;switch(e){case"before-playing":break;case"playing":this.state=new Ge(this.gameObject,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){console.log("some action after damage"),t.stateName="playing"}),500),this.state=new $e(this.gameObject,this.innerHealth);break;case"before-dead":this.state=new ze(this.gameObject,this.innerHealth),clearTimeout(this.timer),this.timer=setTimeout((function(){t.stateName="dead"}),500);break;case"dead":this.state=new qe(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),e}(),We=n.p+"7467a9e3d648bcc674d6.png",Ye=n.p+"3d38fa44a32629a1f955.png",Ze=function(){function e(){if(!e.instance){this.enemy=new Xe,this.player=new je,this.virtualDOM=new ge,this.emptyBar=new ue({point:new v(0,0),size:new R(S,29),background:"#009",zIndex:de}),this.enemyEmptyHealth=new ue({point:new v(0,0),size:new R(400,29),background:"#000",zIndex:me}),this.enemyHealth=new ue({point:new v(0,0),size:new R(this.enemy.health,29),background:"#f00",zIndex:he});var t={x:1,y:1};this.healths=[];for(var n=1;n<=3;n++){var o=this.player.health>=n,r=new v(S-(t.x+D.width)*n,t.y);this.healths.push(new ue({point:r,size:D.clone(),background:"url(".concat(o?We:Ye,")"),zIndex:be}))}e.instance=this}return e.instance}return e.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},e.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(this.emptyBar)},e.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(this.enemyEmptyHealth)},e.prototype.addToRenderEnemyHealth=function(){this.enemyHealth.size=new R(this.enemy.health,29),this.virtualDOM.addElement(this.enemyHealth)},e.prototype.addToRenderPlayerHealth=function(){for(var e=1;e<=3;e++){var t=this.player.health>=e;this.healths[e-1].background="url(".concat(t?We:Ye,")"),this.virtualDOM.addElement(this.healths[e-1])}},e}(),Je=function(){function e(){this.renderAPI=re(),this.virtualDOM=new ge,this.keyboard=new ve}return e.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},e}();var Qe=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const et=function(e){function t(){var t=e.call(this)||this;return t.stateName="playing",t.player=new je,t.enemy=new Xe,t.bulletsStore=new Re,t.lifebar=new Ze,t.isPause=!1,t.isReadyToChangeIsPause=!0,t.timerOfIsPause=null,t.player.init(),t.enemy.init(),t}return Qe(t,e),t.prototype.doFrameBehavior=function(){this.processPauseController(),this.isPause||(this.doBulletsFrameBehavior(),this.player.doFrameBehavior(),this.enemy.doFrameBehavior(),this.lifebar.doFrameBehavior(),e.prototype.render.call(this))},t.prototype.processPauseController=function(){var e=this;this.keyboard.isActiveKey(z)&&(this.isReadyToChangeIsPause&&(this.isPause=!this.isPause),this.isReadyToChangeIsPause=!1,clearTimeout(this.timerOfIsPause),this.timerOfIsPause=setTimeout((function(){e.isReadyToChangeIsPause=!0}),50))},t.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(e){e.doFrameBehavior()}))},t}(Je);var tt=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),nt=["new-game","settings"];const ot=function(e){function t(){var t=e.call(this)||this;return t.stateName="menu",t.currentMenuOptionIdx=0,t.hint=new ue({text:"Нажмите Enter, чтобы продолжить",point:new v(20,560),size:new R(300,30)}),t.header=new ue({text:"Главное меню",point:new v(330,260),size:new R(150,30)}),t.newGameButton=new ue({text:"Новая игра",point:new v(340,300),size:new R(100,30)}),t.settingsButton=new ue({text:"Настройки",point:new v(340,330),size:new R(100,30)}),t}return tt(t,e),Object.defineProperty(t.prototype,"currentMenuOption",{get:function(){return nt[this.currentMenuOptionIdx]},enumerable:!1,configurable:!0}),t.prototype.doFrameBehavior=function(){this.processKeyboard(),this.processCurrentChange(),this.addToRenderElements(),e.prototype.render.call(this)},t.prototype.addToRenderElements=function(){this.virtualDOM.addElement(this.hint),this.virtualDOM.addElement(this.header),this.virtualDOM.addElement(this.newGameButton),this.virtualDOM.addElement(this.settingsButton)},t.prototype.processKeyboard=function(){this.keyboard.isActiveKey(V)&&"new-game"===this.currentMenuOption&&(this.stateName="playing"),this.keyboard.isActiveKey(V)&&"settings"===this.currentMenuOption&&(this.stateName="settings"),(this.keyboard.isActiveKey("ArrowUp")||this.keyboard.isActiveKey(F))&&(this.currentMenuOptionIdx=this.currentMenuOptionIdx<=0?0:this.currentMenuOptionIdx-1),(this.keyboard.isActiveKey("ArrowDown")||this.keyboard.isActiveKey(H))&&(this.currentMenuOptionIdx=this.currentMenuOptionIdx>=nt.length-1?nt.length-1:this.currentMenuOptionIdx+1)},t.prototype.processCurrentChange=function(){this.newGameButton.textColor="new-game"===this.currentMenuOption?"#f00":"#000",this.settingsButton.textColor="settings"===this.currentMenuOption?"#f00":"#000"},t}(Je);var rt=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const it=function(e){function t(){var t=e.call(this)||this;return t.stateName="settings",t.hint=new ue({text:"Нажмите Escape, чтобы выйти назад в меню",point:new v(20,560),size:new R(350,30)}),t}return rt(t,e),t.prototype.doFrameBehavior=function(){this.processKeyboard(),this.addToRenderElements(),e.prototype.render.call(this)},t.prototype.addToRenderElements=function(){this.virtualDOM.addElement(this.hint)},t.prototype.processKeyboard=function(){this.keyboard.isActiveKey("Escape")&&(this.stateName="menu")},t}(Je);(new(function(){function e(){return e.instance||(this.renderAPI=re(),this.gameLoop=new ie,this.stateName="menu",this.stateNameBefore=this.state.stateName,e.instance=this),e.instance}return Object.defineProperty(e.prototype,"stateName",{get:function(){return this.state.stateName},set:function(e){switch(e){case"playing":this.state=new et;break;case"settings":this.state=new it;break;case"menu":this.state=new ot}},enumerable:!1,configurable:!0}),e.prototype.start=function(){var e=this;new se(this.renderAPI).render(),this.gameLoop.start((function(){e.state.doFrameBehavior(),e.applyNewState()}))},e.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},e}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
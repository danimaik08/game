(()=>{"use strict";var t={5124:(t,e,o)=>{o.d(e,{A:()=>pe});var n=o(1354),r=o.n(n),i=o(6314),a=o.n(i),s=o(4417),c=o.n(s),l=new URL(o(1960),o.b),p=new URL(o(4436),o.b),f=new URL(o(6434),o.b),u=new URL(o(6402),o.b),d=new URL(o(8298),o.b),m=new URL(o(7038),o.b),h=new URL(o(8516),o.b),b=new URL(o(5844),o.b),y=new URL(o(6170),o.b),g=new URL(o(7294),o.b),_=new URL(o(4388),o.b),w=new URL(o(5972),o.b),A=new URL(o(3689),o.b),v=new URL(o(3265),o.b),R=new URL(o(5361),o.b),C=new URL(o(643),o.b),E=new URL(o(1889),o.b),I=new URL(o(2985),o.b),O=new URL(o(6681),o.b),x=new URL(o(6747),o.b),B=new URL(o(8698),o.b),T=new URL(o(7486),o.b),S=new URL(o(9012),o.b),N=new URL(o(1380),o.b),P=new URL(o(8796),o.b),U=new URL(o(6576),o.b),k=new URL(o(7830),o.b),M=new URL(o(8262),o.b),j=new URL(o(4498),o.b),L=new URL(o(374),o.b),D=new URL(o(5516),o.b),F=new URL(o(4604),o.b),H=new URL(o(6490),o.b),G=new URL(o(910),o.b),$=new URL(o(6980),o.b),V=new URL(o(740),o.b),K=new URL(o(8833),o.b),z=new URL(o(7081),o.b),q=new URL(o(7385),o.b),X=new URL(o(3691),o.b),W=new URL(o(4759),o.b),Y=new URL(o(1919),o.b),Z=new URL(o(255),o.b),J=new URL(o(2553),o.b),Q=new URL(o(8146),o.b),tt=new URL(o(1302),o.b),et=new URL(o(8332),o.b),ot=new URL(o(9964),o.b),nt=a()(r()),rt=c()(l),it=c()(l,{hash:"?#iefix"}),at=c()(p),st=c()(f),ct=c()(u),lt=c()(d),pt=c()(d,{hash:"?#iefix"}),ft=c()(m),ut=c()(h),dt=c()(b),mt=c()(y),ht=c()(y,{hash:"?#iefix"}),bt=c()(g),yt=c()(_),gt=c()(w),_t=c()(A),wt=c()(A,{hash:"?#iefix"}),At=c()(v),vt=c()(R),Rt=c()(C),Ct=c()(E),Et=c()(E,{hash:"?#iefix"}),It=c()(I),Ot=c()(O),xt=c()(x),Bt=c()(B),Tt=c()(B,{hash:"?#iefix"}),St=c()(T),Nt=c()(S),Pt=c()(N),Ut=c()(P),kt=c()(P,{hash:"?#iefix"}),Mt=c()(U),jt=c()(k),Lt=c()(M),Dt=c()(j),Ft=c()(j,{hash:"?#iefix"}),Ht=c()(L),Gt=c()(D),$t=c()(F),Vt=c()(H),Kt=c()(H,{hash:"?#iefix"}),zt=c()(G),qt=c()($),Xt=c()(V),Wt=c()(K),Yt=c()(K,{hash:"?#iefix"}),Zt=c()(z),Jt=c()(q),Qt=c()(X),te=c()(W),ee=c()(W,{hash:"?#iefix"}),oe=c()(Y),ne=c()(Z),re=c()(J),ie=c()(Q),ae=c()(Q,{hash:"?#iefix"}),se=c()(tt),ce=c()(et),le=c()(ot);nt.push([t.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${rt});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${it}) format('embedded-opentype'),\n        url(${at}) format('woff2'),\n        url(${st}) format('woff'),\n        url(${ct}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${lt});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${pt}) format('embedded-opentype'),\n        url(${ft}) format('woff2'),\n        url(${ut}) format('woff'),\n        url(${dt}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${mt});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${ht}) format('embedded-opentype'),\n        url(${bt}) format('woff2'),\n        url(${yt}) format('woff'),\n        url(${gt}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${_t});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${wt}) format('embedded-opentype'),\n        url(${At}) format('woff2'),\n        url(${vt}) format('woff'),\n        url(${Rt}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ct});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${Et}) format('embedded-opentype'),\n        url(${It}) format('woff2'),\n        url(${Ot}) format('woff'),\n        url(${xt}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Bt});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Tt}) format('embedded-opentype'),\n        url(${St}) format('woff2'),\n        url(${Nt}) format('woff'),\n        url(${Pt}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ut});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${kt}) format('embedded-opentype'),\n        url(${Mt}) format('woff2'),\n        url(${jt}) format('woff'),\n        url(${Lt}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Dt});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${Ft}) format('embedded-opentype'),\n        url(${Ht}) format('woff2'),\n        url(${Gt}) format('woff'),\n        url(${$t}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Vt});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${Kt}) format('embedded-opentype'),\n        url(${zt}) format('woff2'),\n        url(${qt}) format('woff'),\n        url(${Xt}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Wt});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Yt}) format('embedded-opentype'),\n        url(${Zt}) format('woff2'),\n        url(${Jt}) format('woff'),\n        url(${Qt}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${te});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${ee}) format('embedded-opentype'),\n        url(${oe}) format('woff2'),\n        url(${ne}) format('woff'),\n        url(${re}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ie});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${ae}) format('embedded-opentype'),\n        url(${se}) format('woff2'),\n        url(${ce}) format('woff'),\n        url(${le}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/assets/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const pe=nt},6523:(t,e,o)=>{o.d(e,{A:()=>s});var n=o(1354),r=o.n(n),i=o(6314),a=o.n(i)()(r());a.push([t.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const s=a},6314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var o="",n=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),n&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=t(e),n&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(t,o,n,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<t.length;l++){var p=[].concat(t[l]);n&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),o&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=o):p[2]=o),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},4417:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},1354:t=>{t.exports=function(t){var e=t[1],o=t[3];if(!o)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},5072:t=>{var e=[];function o(t){for(var o=-1,n=0;n<e.length;n++)if(e[n].identifier===t){o=n;break}return o}function n(t,n){for(var i={},a=[],s=0;s<t.length;s++){var c=t[s],l=n.base?c[0]+n.base:c[0],p=i[l]||0,f="".concat(l," ").concat(p);i[l]=p+1;var u=o(f),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(d);else{var m=r(d,n);n.byIndex=s,e.splice(s,0,{identifier:f,updater:m,references:1})}a.push(f)}return a}function r(t,e){var o=e.domAPI(e);return o.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;o.update(t=e)}else o.remove()}}t.exports=function(t,r){var i=n(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=o(i[a]);e[s].references--}for(var c=n(t,r),l=0;l<i.length;l++){var p=o(i[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}i=c}}},7659:t=>{var e={};t.exports=function(t,o){var n=function(t){if(void 0===e[t]){var o=document.querySelector(t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}e[t]=o}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(o)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},5056:(t,e,o)=>{t.exports=function(t){var e=o.nc;e&&t.setAttribute("nonce",e)}},7825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(o){!function(t,e,o){var n="";o.supports&&(n+="@supports (".concat(o.supports,") {")),o.media&&(n+="@media ".concat(o.media," {"));var r=void 0!==o.layer;r&&(n+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),n+=o.css,r&&(n+="}"),o.media&&(n+="}"),o.supports&&(n+="}");var i=o.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,o)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},1113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},8796:(t,e,o)=>{t.exports=o.p+"d747b63eb41cdc64e3dd.eot"},8262:(t,e,o)=>{t.exports=o.p+"8e5479279b074720e15f.ttf"},7830:(t,e,o)=>{t.exports=o.p+"88d7f1b3ca9a9494d8e3.woff"},6576:(t,e,o)=>{t.exports=o.p+"ae0c1d409f7d45d81c29.woff2"},1960:(t,e,o)=>{t.exports=o.p+"32f9679ea3ede2ca14de.eot"},6402:(t,e,o)=>{t.exports=o.p+"508cb30d2090ab879d2f.ttf"},6434:(t,e,o)=>{t.exports=o.p+"3123587706218b4d8187.woff"},4436:(t,e,o)=>{t.exports=o.p+"71b2b84d5d1a55271b57.woff2"},8298:(t,e,o)=>{t.exports=o.p+"6490694b37b0ee09bd91.eot"},5844:(t,e,o)=>{t.exports=o.p+"5e9f6556d3c0bf6230f0.ttf"},8516:(t,e,o)=>{t.exports=o.p+"3f2cbde6b72e8d05669f.woff"},7038:(t,e,o)=>{t.exports=o.p+"6cd35edfbc0d7a417131.woff2"},6170:(t,e,o)=>{t.exports=o.p+"e5f75ce1f7e72a64d436.eot"},5972:(t,e,o)=>{t.exports=o.p+"1e46c5294501ef46e23b.ttf"},4388:(t,e,o)=>{t.exports=o.p+"997a1e8970d2b7e50fff.woff"},7294:(t,e,o)=>{t.exports=o.p+"74126ecd07ad0d25d3f6.woff2"},4759:(t,e,o)=>{t.exports=o.p+"7588d6373c3525bc74cd.eot"},2553:(t,e,o)=>{t.exports=o.p+"4302c2e2c9e789c4c7ea.ttf"},255:(t,e,o)=>{t.exports=o.p+"0d0bf30e7eeb4f6e7fd5.woff"},1919:(t,e,o)=>{t.exports=o.p+"007ccbd3e8708c6afef8.woff2"},8833:(t,e,o)=>{t.exports=o.p+"d592a653abb7a57fedd8.eot"},3691:(t,e,o)=>{t.exports=o.p+"13d61ef8e609b548d9b5.ttf"},7385:(t,e,o)=>{t.exports=o.p+"df0f59d80526acc6d0cd.woff"},7081:(t,e,o)=>{t.exports=o.p+"d537674e9e217fa53a13.woff2"},3689:(t,e,o)=>{t.exports=o.p+"0ad9ca04101ace1b39d1.eot"},643:(t,e,o)=>{t.exports=o.p+"ca7144f68f54653d3728.ttf"},5361:(t,e,o)=>{t.exports=o.p+"3c494714cdd1de859813.woff"},3265:(t,e,o)=>{t.exports=o.p+"6006fa5b67e554e06562.woff2"},8146:(t,e,o)=>{t.exports=o.p+"f9f0c87146a33023da7e.eot"},9964:(t,e,o)=>{t.exports=o.p+"ef677e217f2009c16854.ttf"},8332:(t,e,o)=>{t.exports=o.p+"b14ca2d2b289afceb0b0.woff"},1302:(t,e,o)=>{t.exports=o.p+"fc0337b9cf1cce2e6e1e.woff2"},4498:(t,e,o)=>{t.exports=o.p+"c000f0984de5d20c8eab.eot"},4604:(t,e,o)=>{t.exports=o.p+"ff1379d2f5bd26261cb2.ttf"},5516:(t,e,o)=>{t.exports=o.p+"9a91a0398c5cb21f0199.woff"},374:(t,e,o)=>{t.exports=o.p+"ace58ae211415a1f378b.woff2"},1889:(t,e,o)=>{t.exports=o.p+"30b57652c88c5dbd65de.eot"},6747:(t,e,o)=>{t.exports=o.p+"25e40da956314b12d333.ttf"},6681:(t,e,o)=>{t.exports=o.p+"31012f9b3e3da44f87e8.woff"},2985:(t,e,o)=>{t.exports=o.p+"a25806274237d06e00a6.woff2"},6490:(t,e,o)=>{t.exports=o.p+"ae807ad4142f3eae2e0c.eot"},740:(t,e,o)=>{t.exports=o.p+"7d12c80b1925091e4fec.ttf"},6980:(t,e,o)=>{t.exports=o.p+"674b1d2bd9d781457c17.woff"},910:(t,e,o)=>{t.exports=o.p+"0b33782009e32497dba2.woff2"},8698:(t,e,o)=>{t.exports=o.p+"bc4d192a93ba33f68109.eot"},1380:(t,e,o)=>{t.exports=o.p+"491dd1cc3dfda2b79d09.ttf"},9012:(t,e,o)=>{t.exports=o.p+"d5937d18c46d7ae260b6.woff"},7486:(t,e,o)=>{t.exports=o.p+"3669a8fac8736f85a7f1.woff2"}},e={};function o(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,o),i.exports}o.m=t,o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;o.g.importScripts&&(t=o.g.location+"");var e=o.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=n[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=t})(),o.b=document.baseURI||self.location.href,o.nc=void 0;var n=o(5072),r=o.n(n),i=o(7825),a=o.n(i),s=o(7659),c=o.n(s),l=o(5056),p=o.n(l),f=o(540),u=o.n(f),d=o(1113),m=o.n(d),h=o(6523),b={};b.styleTagTransform=m(),b.setAttributes=p(),b.insert=c().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u(),r()(h.A,b),h.A&&h.A.locals&&h.A.locals;var y=o(5124),g={};g.styleTagTransform=m(),g.setAttributes=p(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),r()(y.A,g),y.A&&y.A.locals&&y.A.locals;var _="root",w="game-window";const A=function(){function t(){return t.instance||(t.instance=this),t.instance}return t.instance=null,t}(),v=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}(),R=function(){function t(t,e){this.width=t,this.height=e}return t.prototype.clone=function(){return new t(this.width,this.height)},t.prototype.valueOf=function(){return this.width+" "+this.height},t}(),C=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}();var E,I,O,x,B,T,S=800,N=new v(380,500),P=new R(34,47),U=new C(0,0),k=new v(350,50),M=new R(100,100),j=new C(4,0),L=new R(30,27),D=new R(14,14),F=null!==(E=localStorage.getItem("KEY_TOP"))&&void 0!==E?E:"W",H=null!==(I=localStorage.getItem("KEY_LEFT"))&&void 0!==I?I:"A",G=null!==(O=localStorage.getItem("KEY_BOTTOM"))&&void 0!==O?O:"S",$=null!==(x=localStorage.getItem("KEY_RIGHT"))&&void 0!==x?x:"D",V=null!==(B=localStorage.getItem("KEY_ATTACK"))&&void 0!==B?B:"K",K=null!==(T=localStorage.getItem("KEY_PAUSE"))&&void 0!==T?T:"P";console.log("keys",F,H,G,$,V,K);var z="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),q="\n  width: ".concat(S,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n");function X(t,e){t.id=e,{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(t.dataset.testid=e)}function W(){var t=document.getElementById(_);if(!t)throw new Error('BrowserAPI Error: method "'.concat(W.name,'" - root not found'));var e=document.createElement("div");X(e,w),e.setAttribute("style",q),t.appendChild(e)}var Y=function(){function t(t){this.gameObject=t,this.innerElement=null}return Object.defineProperty(t.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.createElement=function(){this.innerElement=document.createElement("div")},t.prototype.setElement=function(t){this.innerElement=t},t.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css)},Object.defineProperty(t.prototype,"css",{get:function(){var t=this.gameObject,e=t.point,o=t.size,n=t.background,r=t.zIndex;return"\n    position: absolute;\n    top: ".concat(e.y,"px;\n    left: ").concat(e.x,"px;\n    z-index: ").concat(r,";\n    width: ").concat(o.width,"px;\n    height: ").concat(o.height,"px;\n    background: ").concat(n,";\n    ")},enumerable:!1,configurable:!0}),t}();const Z=Y;var J,Q=(J=function(t,e){return J=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},J(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}J(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});const tt=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.elementsMap={},e}return Q(e,t),Object.defineProperty(e.prototype,"window",{get:function(){var t=document.getElementById(w);if(!t)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return t},enumerable:!1,configurable:!0}),e.prototype.renderGameWindow=function(){var t,e;t=document.querySelector("body"),X(e=document.createElement("div"),_),e.setAttribute("style",z),t.appendChild(e),W()},e.prototype.clearAll=function(){document.body.innerHTML=""},e.prototype.render=function(t){var e=this;t.forEach((function(t){switch(t.action){case"mount":e.mount(t.gameObject);break;case"unmount":e.unmount(t.gameObject);break;case"update":e.update(t.gameObject)}}))},e.prototype.mount=function(t){var e=new Z(t);e.createElement(),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[e.id]=e},e.prototype.update=function(t){var e=new Z(t),o=this.elementsMap[t.id];e.setElement(o.element),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[t.id]=e},e.prototype.unmount=function(t){this.elementsMap[t.id].element.remove(),delete this.elementsMap[t.id]},e}(A);var et=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const ot=function(t){function e(){return t.call(this)||this}return et(e,t),e.prototype.renderGameWindow=function(){console.log("renderGameWindow")},e.prototype.clearAll=function(){console.log("clearAll")},e.prototype.render=function(t){console.log("render")},e}(A);function nt(){var t,e=null!==(t={TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==t?t:"browser";switch(e){case"browser":return new tt;case"fake":return new ot;default:throw new Error("Invalid env RENDER_API: ".concat(e))}}const rt=function(){function t(e){return void 0===e&&(e=33),t.instance||(this.lastFrameTime=Date.now(),this.frameDuration=e,t.instance=this),t.instance}return t.prototype.start=function(t){var e=this,o=function(){var n=Date.now();e.lastFrameTime+e.frameDuration<=n&&(e.lastFrameTime=n,t()),requestAnimationFrame(o)};o()},t}(),it=function(){function t(e){return this.renderAPI=null,t.instance||(this.renderAPI=e,t.instance=this),t.instance}return t.prototype.render=function(){this.renderAPI.renderGameWindow()},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,t.instance=null},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},t.instance=null,t}();var at,st;const ct=(at="",st=0,function(){var t=Date.now()+"";return at===t?(st++,at+" "+st):(at=t,t)});const lt=function(){function t(t,e,o,n,r,i){void 0===o&&(o=""),void 0===n&&(n=1),void 0===r&&(r=new C(0,0)),void 0===i&&(i=ct()),this.point=t,this.size=e,this.background=o,this.zIndex=n,this.speed=r,this.id=i}return t.prototype.move=function(){this.point=new v(this.point.x+this.speed.x,this.point.y+this.speed.y)},t.prototype.clone=function(){return new t(this.point,this.size,this.background,this.zIndex,this.speed,this.id)},t}(),pt=o.p+"98ce5afade1e5dcf76f2.png",ft=4,ut=5,dt=6,mt=7;var ht=function(){return new lt(N.clone(),P.clone(),"url(".concat(pt,")"),2,U.clone())},bt=function(){function t(){return t.instance||(this.prevElements={},this.nextElements={},t.instance=this),t.instance}return t.prototype.addElement=function(t){this.nextElements[t.id]=t},t.prototype.prepareForNewFrame=function(){this.prevElements={},this.cloneNextElementsIntoPrevElements(),this.nextElements={}},t.prototype.getChanges=function(){var t=this,e=this.getAllIdsFromMaps(),o=[];return e.forEach((function(e){o.push(t.getChangeForElementById(e))})),o},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.prevElements=null,this.nextElements=null,t.instance=null},t.prototype.cloneNextElementsIntoPrevElements=function(){for(var t in this.nextElements)this.prevElements[t]=this.nextElements[t].clone()},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('VirtualDOM Error: called method "destroy" (which for tests only!) not in tests')},t.prototype.getAllIdsFromMaps=function(){var t=new Set;for(var e in this.prevElements)t.add(e);for(var e in this.nextElements)t.add(e);return t},t.prototype.getChangeForElementById=function(t){var e,o,n=null!==(e=this.prevElements[t])&&void 0!==e?e:null,r=null!==(o=this.nextElements[t])&&void 0!==o?o:null;return n?r?{gameObject:r,action:this.isElementUpdated(t)?"update":"not-a-change"}:{gameObject:n,action:"unmount"}:{gameObject:r,action:"mount"}},t.prototype.isElementUpdated=function(t){var e=this.prevElements[t],o=this.nextElements[t];for(var n in e){var r=n;if(e[r].valueOf()!==o[r].valueOf())return!0}return!1},t}();const yt=bt,gt=o.p+"f6daa77bf4e4dd5f7f9f.png",_t=o.p+"51183ae04093a5b578b5.png",wt=function(){function t(e,o,n){this.type=e,this.virtualDOM=new yt,this.gameObject=t.createInitialSprite(this.type,o,n)}return Object.defineProperty(t.prototype,"point",{get:function(){return this.gameObject.point},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.gameObject.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},t.createInitialSprite=function(t,e,o){return new lt(e.clone(),D.clone(),"url(".concat("enemy"===t?gt:_t,")"),3,o.clone())},t.prototype.processMovement=function(){this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t}(),At=function(){function t(){var e=this;return t.instance||(this.keys=new Set,t.instance=this,document.addEventListener("keydown",(function(t){e.keys.add(t.key.toUpperCase())})),document.addEventListener("keyup",(function(t){e.keys.delete(t.key.toUpperCase())}))),t.instance}return t.prototype.isActiveKey=function(t){return this.keys.has(t)},t}(),vt=function(){function t(){return t.instance||(this.innerBullets=[],t.instance=this),t.instance}return t.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(t){return!(t.point.x+t.size.width<0||t.point.x>S||t.point.y+t.size.height<0||t.point.y>600)}))},t.prototype.addElement=function(t){this.innerBullets.push(t)},t.prototype.removeElement=function(t){this.innerBullets=this.innerBullets.filter((function(e){return e.id!==t.id}))},Object.defineProperty(t.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),t}(),Rt=function(){function t(t,e){this.target=t,this.bulletType=e,this.bulletsStore=new vt}return t.prototype.tryToCollide=function(t){var e=this;this.bulletsStore.bullets.forEach((function(o){e.bulletType===o.type&&function(t,e){var o=t.point.x,n=t.point.x+t.size.width,r=e.point.x,i=e.point.x+e.size.width;if(o>=r&&o<=i||n>=r&&n<=i){var a=t.point.y,s=t.point.y+t.size.height,c=e.point.y,l=e.point.y+e.size.height;if(a>=c&&a<=l||s>=c&&s<=l)return!0}return!1}(o,e.target)&&(t(),e.bulletsStore.removeElement(o))}))},t}(),Ct=function(){function t(t,e){this.keyboardController=new At,this.gameObject=t,this.virtualDOM=new yt,this.bulletsCollider=new Rt(this.gameObject,"enemy"),this.bulletsStore=new vt,this.lastAttackTime=Date.now()-500,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,o,n,r,i,a,s;this.gameObject.speed=(t=this.gameObject,e=this.keyboardController,o=t.point.y<=350,n=t.point.x<=0,r=t.point.y>=600-t.size.height,i=t.point.x>=S-t.size.width,a=0,s=0,e.isActiveKey(F)&&!o&&(s=-4),e.isActiveKey(H)&&!n&&(a=-4),e.isActiveKey(G)&&!r&&(s=4),e.isActiveKey($)&&!i&&(a=4),new C(a,s)),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=1,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t=Date.now();t>this.lastAttackTime+500&&this.keyboardController.isActiveKey(V)&&(this.lastAttackTime=t,this.bulletsStore.addElement(new wt("player",this.gameObject.point.clone(),new C(0,-4))))},t}();var Et=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const It=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-playing",n}return Et(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var Ot=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const xt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing",n}return Ot(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Ct);var Bt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Tt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing-after-damage",n.framesCount=0,n.isInvisiblePlayer=!0,n}return Bt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){this.isInvisiblePlayer||t.prototype.addToNextRender.call(this),this.framesCount++,this.framesCount>=e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER&&(this.isInvisiblePlayer=!this.isInvisiblePlayer,this.framesCount=0)},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER=5,e}(Ct);var St=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Nt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-dead",n}return St(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var Pt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Ut=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="dead",n}return Pt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var kt=function(){function t(){return t.instance||(this.timer=null,this.innerHealth=3,this.gameObject=ht(),this.stateNameBefore="before-playing",t.instance=this),t.instance}return t.prototype.init=function(){this.innerHealth=3,this.gameObject=ht(),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){var t;return null!==(t=this.state.stateName)&&void 0!==t?t:"before-playing"},set:function(t){var e=this;switch(t){case"before-playing":this.state=new It(this.gameObject,this.innerHealth);break;case"playing":this.state=new xt(this.gameObject,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="playing"}),3e3),this.state=new Tt(this.gameObject,this.innerHealth);break;case"before-dead":clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="dead"}),0),this.state=new Nt(this.gameObject,this.innerHealth);break;case"dead":this.state=new Ut(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}();const Mt=kt,jt=o.p+"49dc2035dd05181f3af7.png";var Lt=function(){return new lt(k.clone(),M.clone(),"url(".concat(jt,")"),2,j.clone())};const Dt=function(){function t(t,e){this.gameObject=t,this.virtualDOM=new yt,this.bulletsCollider=new Rt(this.gameObject,"player"),this.bulletsStore=new vt,this.lastAttackTime=Date.now()-200,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,o;this.gameObject.speed=(e=(t=this.gameObject).point.x<=50,o=t.speed.x,e?(o=Math.abs(o),new C(o,t.speed.y)):t.point.x>=750-t.size.width?(o=-Math.abs(o),new C(o,t.speed.y)):t.speed),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=10,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t,e,o,n,r=Date.now();r>this.lastAttackTime+200&&(this.lastAttackTime=r,this.bulletsStore.addElement((t=this.gameObject.point,e=this.gameObject.size,o=new v(t.x+e.width/2,t.y+e.height),n=new C(Math.floor(10*Math.random())-5,3),new wt("enemy",o,n))))},t}();var Ft=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Ht=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-playing",n}return Ft(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt);var Gt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const $t=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing",n}return Gt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Dt);var Vt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Kt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing-after-damage",n}return Vt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Dt);var zt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const qt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-dead",n}return zt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt);var Xt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Wt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="dead",n}return Xt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt),Yt=function(){function t(){return t.instance||(this.gameObject=Lt(),this.innerHealth=400,this.state=new Ht(this.gameObject,this.innerHealth),this.stateNameBefore=this.state.stateName,this.timer=null,t.instance=this),t.instance}return t.prototype.init=function(){this.innerHealth=400,this.gameObject=Lt(),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){var e=this;switch(t){case"before-playing":break;case"playing":this.state=new $t(this.gameObject,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){console.log("some action after damage"),e.stateName="playing"}),500),this.state=new Kt(this.gameObject,this.innerHealth);break;case"before-dead":this.state=new qt(this.gameObject,this.innerHealth),clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="dead"}),500);break;case"dead":this.state=new Wt(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}(),Zt=o.p+"7467a9e3d648bcc674d6.png",Jt=o.p+"3d38fa44a32629a1f955.png",Qt=function(){function t(){if(!t.instance){this.enemy=new Yt,this.player=new Mt,this.virtualDOM=new yt,this.emptyBar=new lt(new v(0,0),new R(S,29),"#009",ft),this.enemyEmptyHealth=new lt(new v(0,0),new R(400,29),"#000",ut),this.enemyHealth=new lt(new v(0,0),new R(this.enemy.health,29),"#f00",dt);var e={x:1,y:1};this.healths=[];for(var o=1;o<=3;o++){var n=this.player.health>=o,r=new v(S-(e.x+L.width)*o,e.y);this.healths.push(new lt(r,L,"url(".concat(n?Zt:Jt,")"),mt))}t.instance=this}return t.instance}return t.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},t.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(this.emptyBar)},t.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(this.enemyEmptyHealth)},t.prototype.addToRenderEnemyHealth=function(){this.enemyHealth.size=new R(this.enemy.health,29),this.virtualDOM.addElement(this.enemyHealth)},t.prototype.addToRenderPlayerHealth=function(){for(var t=1;t<=3;t++){var e=this.player.health>=t;this.healths[t-1].background="url(".concat(e?Zt:Jt,")"),this.virtualDOM.addElement(this.healths[t-1])}},t}(),te=function(){function t(){this.renderAPI=nt(),this.virtualDOM=new yt,this.stateName="menu"}return t.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},t}();var ee=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const oe=function(t){function e(){var e=t.call(this)||this;return e.player=new Mt,e.enemy=new Yt,e.bulletsStore=new vt,e.lifebar=new Qt,e.keyboard=new At,e.isPause=!1,e.isReadyToChangeIsPause=!0,e.timerOfIsPause=null,e.player.init(),e.enemy.init(),e}return ee(e,t),e.prototype.doFrameBehavior=function(){this.processPauseController(),this.isPause||(this.doBulletsFrameBehavior(),this.player.doFrameBehavior(),this.enemy.doFrameBehavior(),this.lifebar.doFrameBehavior(),t.prototype.render.call(this))},e.prototype.processPauseController=function(){var t=this;this.keyboard.isActiveKey(K)&&(this.isReadyToChangeIsPause&&(this.isPause=!this.isPause),this.isReadyToChangeIsPause=!1,clearTimeout(this.timerOfIsPause),this.timerOfIsPause=setTimeout((function(){t.isReadyToChangeIsPause=!0}),300))},e.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(t){t.doFrameBehavior()}))},e}(te);var ne=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const re=function(t){function e(){return t.call(this)||this}return ne(e,t),e.prototype.doFrameBehavior=function(){t.prototype.render.call(this)},e}(te);var ie=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const ae=function(t){function e(){return t.call(this)||this}return ie(e,t),e.prototype.doFrameBehavior=function(){t.prototype.render.call(this)},e}(te);(new(function(){function t(){return t.instance||(this.renderAPI=nt(),this.gameLoop=new rt,this.stateName="playing",this.stateNameBefore=this.state.stateName,t.instance=this),t.instance}return Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){switch(t){case"playing":this.state=new oe;break;case"settings":this.state=new re;break;case"menu":this.state=new ae}},enumerable:!1,configurable:!0}),t.prototype.start=function(){var t=this;new it(this.renderAPI).render(),this.gameLoop.start((function(){t.state.doFrameBehavior(),t.applyNewState()}))},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RWhDLEVBQ0YsRUEzREEsS0RMSXZFLE8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2Fzc2V0cy9mb250cy9zdHlsZXNoZWV0LmNzcyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2luZGV4LmNzcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2dhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2dhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9nYW1lL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9nYW1lL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9pbmRleC5jc3M/Y2ZlNCIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2Fzc2V0cy9mb250cy9zdHlsZXNoZWV0LmNzcz80ZWM3Iiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL2NvbnN0cy50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL1JlbmRlckFQSS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL3N0cnVjdHMvUG9pbnQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9zdHJ1Y3RzL1NpemUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9zdHJ1Y3RzL1NwZWVkL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29uc3RzLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL0Jyb3dzZXJBUEkvY3NzLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL0Jyb3dzZXJBUEkvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL0Jyb3dzZXJBUEkvQnJvd3NlckFQSVZpZXcudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9SZW5kZXJBUEkvQnJvd3NlckFQSS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL1JlbmRlckFQSS9GYWtlQVBJLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL2dldFJlbmRlckFQSS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9HYW1lTG9vcC9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9HYW1lV2luZG93L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvc2hhcmVkL2dldFVuaXF1ZUlkLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvc3RydWN0cy9HYW1lT2JqZWN0L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvekluZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9QbGF5ZXIvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvVmlydHVhbERPTS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvQnVsbGV0L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29udHJvbGxlcnMvS2V5Ym9hcmQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9zdG9yZXMvQnVsbGV0c1N0b3JlL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29sbGlkZXJzL0J1bGxldHNDb2xsaWRlci9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbGxpZGVycy9CdWxsZXRzQ29sbGlkZXIvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9QbGF5ZXIvUGxheWVyU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL1BsYXllci9CZWZvcmVQbGF5aW5nU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL1BsYXllci9QbGF5aW5nU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL1BsYXllci9QbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvUGxheWVyL0JlZm9yZURlYWRTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvUGxheWVyL0RlYWRTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvUGxheWVyL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9FbmVteS9oZWxwZXIudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL0VuZW15L0VuZW15U3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL0VuZW15L0JlZm9yZVBsYXlpbmdTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvRW5lbXkvUGxheWluZ1N0YXRlLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9FbmVteS9QbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvRW5lbXkvQmVmb3JlRGVhZFN0YXRlLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9FbmVteS9EZWFkU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL0VuZW15L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9MaWZlYmFyL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQXBwL0FwcFN0YXRlL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQXBwL0FwcFN0YXRlL1BsYXlpbmdTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9BcHBTdGF0ZS9NZW51U3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9BcHAvQXBwU3RhdGUvU2V0dGluZ3NTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQXBwL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQmxhY2tJdGFsaWMuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrSXRhbGljLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfM19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQmxhY2tJdGFsaWMudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGQuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGQud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZC53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGQudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzhfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGRJdGFsaWMuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzlfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGRJdGFsaWMud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTBfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJvbGRJdGFsaWMud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZEl0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTJfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0SXRhbGljLmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xM19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTGlnaHRJdGFsaWMud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0SXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0SXRhbGljLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tUmVndWxhci5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVJlZ3VsYXIud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMThfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVJlZ3VsYXIud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tUmVndWxhci50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW5JdGFsaWMuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIxX19fID0gbmV3IFVSTChcIlJvYm90by1UaGluSXRhbGljLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIyX19fID0gbmV3IFVSTChcIlJvYm90by1UaGluSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjNfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW5JdGFsaWMudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI0X19fID0gbmV3IFVSTChcIlJvYm90by1CbGFjay5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI2X19fID0gbmV3IFVSTChcIlJvYm90by1CbGFjay53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI3X19fID0gbmV3IFVSTChcIlJvYm90by1CbGFjay50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjhfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bUl0YWxpYy5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjlfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bUl0YWxpYy53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzFfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bUl0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW4uZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMzX19fID0gbmV3IFVSTChcIlJvYm90by1UaGluLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM0X19fID0gbmV3IFVSTChcIlJvYm90by1UaGluLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW4udHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM2X19fID0gbmV3IFVSTChcIlJvYm90by1MaWdodC5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0LndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM4X19fID0gbmV3IFVSTChcIlJvYm90by1MaWdodC53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM5X19fID0gbmV3IFVSTChcIlJvYm90by1MaWdodC50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDBfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUl0YWxpYy5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDFfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUl0YWxpYy53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80Ml9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tSXRhbGljLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDNfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUl0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bS5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDVfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bS53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80Nl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLU1lZGl1bS50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzdfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF81X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF84X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEwX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF84X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEyX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMl9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xN19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEzX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE0X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE1X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE2X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE2X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIyX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIzX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMThfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI0X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI1X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI2X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjdfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjhfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjlfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNF9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI1X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI2X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI3X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI4X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI4X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM3X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM4X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM5X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQwX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQxX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNl9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80N19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM3X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80OF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM4X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80OV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM5X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQwX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQwX19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUyX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUzX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU0X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDNfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU1X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU2X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTdfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80NV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNThfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80Nl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTlfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80N19fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQmxhY2sgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tQmxhY2tJdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfM19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81X19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJvbGQnKSwgbG9jYWwoJ1JvYm90by1Cb2xkJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzZfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzhfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEwX19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJvbGQgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tQm9sZEl0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMV9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTJfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEzX19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE0X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTGlnaHQgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tTGlnaHRJdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTZfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE3X19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOF9fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xOV9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjBfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8nKSwgbG9jYWwoJ1JvYm90by1SZWd1bGFyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIxX19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMl9fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjNfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjRfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI1X19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIFRoaW4gSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tVGhpbkl0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yNl9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI4X19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI5X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMF9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCbGFjaycpLCBsb2NhbCgnUm9ib3RvLUJsYWNrJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMxX19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMl9fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzNfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzRfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM1X19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIE1lZGl1bSBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1NZWRpdW1JdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzZfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM3X19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zOF9fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zOV9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDBfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gVGhpbicpLCBsb2NhbCgnUm9ib3RvLVRoaW4nKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDFfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQyX19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80M19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NF9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogMTAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTGlnaHQnKSwgbG9jYWwoJ1JvYm90by1MaWdodCcpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80Nl9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ4X19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ5X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MF9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1JdGFsaWMnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTFfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUyX19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81M19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81NF9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTWVkaXVtJyksIGxvY2FsKCdSb2JvdG8tTWVkaXVtJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU2X19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81N19fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNThfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTlfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9mb250cy9zdHlsZXNoZWV0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQiw0Q0FBa0M7SUFDbEM7Ozs7a0VBSW9EO0lBQ3BELGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNENBQTJCO0lBQzNCOzs7O2tFQUk2QztJQUM3QyxpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUFpQztJQUNqQzs7OzttRUFJbUQ7SUFDbkQsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBa0M7SUFDbEM7Ozs7bUVBSW9EO0lBQ3BELGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQThCO0lBQzlCOzs7O21FQUlnRDtJQUNoRCxtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUFpQztJQUNqQzs7OzttRUFJbUQ7SUFDbkQsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBNEI7SUFDNUI7Ozs7bUVBSThDO0lBQzlDLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQW1DO0lBQ25DOzs7O21FQUlxRDtJQUNyRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUEyQjtJQUMzQjs7OzttRUFJNkM7SUFDN0MsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBNEI7SUFDNUI7Ozs7bUVBSThDO0lBQzlDLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQTZCO0lBQzdCOzs7O21FQUkrQztJQUMvQyxtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUE2QjtJQUM3Qjs7OzttRUFJK0M7SUFDL0MsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLUJsYWNrSXRhbGljLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQmxhY2sgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tQmxhY2tJdGFsaWMnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJsYWNrSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1CbGFja0l0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJsYWNrSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJsYWNrSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLUJvbGQuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCb2xkJyksIGxvY2FsKCdSb2JvdG8tQm9sZCcpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJvbGQud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tQm9sZEl0YWxpYy5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJvbGQgSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tQm9sZEl0YWxpYycpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZEl0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJvbGRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZEl0YWxpYy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tTGlnaHRJdGFsaWMuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBMaWdodCBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1MaWdodEl0YWxpYycpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHRJdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUxpZ2h0SXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHRJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogMzAwO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tUmVndWxhci5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvJyksIGxvY2FsKCdSb2JvdG8tUmVndWxhcicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tUmVndWxhci5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tUmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tUmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1UaGluSXRhbGljLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gVGhpbiBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1UaGluSXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tVGhpbkl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLUJsYWNrLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQmxhY2snKSwgbG9jYWwoJ1JvYm90by1CbGFjaycpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2suZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJsYWNrLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2sud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2sudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tTWVkaXVtSXRhbGljLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTWVkaXVtIEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLU1lZGl1bUl0YWxpYycpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTWVkaXVtSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTWVkaXVtSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLVRoaW4uZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBUaGluJyksIGxvY2FsKCdSb2JvdG8tVGhpbicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tVGhpbi5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tVGhpbi53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVRoaW4ud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tVGhpbi50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1MaWdodC5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIExpZ2h0JyksIGxvY2FsKCdSb2JvdG8tTGlnaHQnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUxpZ2h0LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1MaWdodC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUxpZ2h0LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUxpZ2h0LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLUl0YWxpYy5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLUl0YWxpYycpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1JdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1JdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLU1lZGl1bS5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIE1lZGl1bScpLCBsb2NhbCgnUm9ib3RvLU1lZGl1bScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTWVkaXVtLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW0ud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTWVkaXVtLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGh0bWwsIGJvZHkge1xuICBtYXJnaW46IDA7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvaW5kZXguY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsU0FBUztBQUNYXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImh0bWwsIGJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xuXG4gIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9XG5cbiAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQgJiYgZG9jdW1lbnQuY3VycmVudFNjcmlwdC50YWdOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICdTQ1JJUFQnKVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAoIXNjcmlwdFVybCB8fCAhL15odHRwKHM/KTovLnRlc3Qoc2NyaXB0VXJsKSkpIHNjcmlwdFVybCA9IHNjcmlwdHNbaS0tXS5zcmM7XG5cdFx0fVxuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQ3OTI6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzaGVldC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXNoZWV0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBjb25zdCBST09UX0lEID0gJ3Jvb3QnO1xuZXhwb3J0IGNvbnN0IEdBTUVfV0lORE9XX0lEID0gJ2dhbWUtd2luZG93JztcbiIsImltcG9ydCB7IFZpcnR1YWxET01DaGFuZ2UgfSBmcm9tICd+L1ZpcnR1YWxET00vdHlwZXMnO1xuXG5leHBvcnQgdHlwZSBSZW5kZXJBUElUeXBlID0gJ2Jyb3dzZXInIHwgJ2Zha2UnO1xuXG5leHBvcnQgZGVmYXVsdCBhYnN0cmFjdCBjbGFzcyBSZW5kZXJBUEkge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogUmVuZGVyQVBJIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFSZW5kZXJBUEkuaW5zdGFuY2UpIHtcbiAgICAgIFJlbmRlckFQSS5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlbmRlckFQSS5pbnN0YW5jZTtcbiAgfVxuICBwdWJsaWMgYWJzdHJhY3QgcmVuZGVyR2FtZVdpbmRvdygpOiB2b2lkO1xuICBwdWJsaWMgYWJzdHJhY3QgY2xlYXJBbGwoKTogdm9pZDtcbiAgcHVibGljIGFic3RyYWN0IHJlbmRlcihjaGFuZ2VzOiBWaXJ0dWFsRE9NQ2hhbmdlW10pOiB2b2lkO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9pbnQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgeDogbnVtYmVyLCBwdWJsaWMgcmVhZG9ubHkgeTogbnVtYmVyKSB7fVxuXG4gIHB1YmxpYyBjbG9uZSgpOiBQb2ludCB7XG4gICAgcmV0dXJuIG5ldyBQb2ludCh0aGlzLngsIHRoaXMueSk7XG4gIH1cblxuICBwdWJsaWMgdmFsdWVPZigpIHtcbiAgICByZXR1cm4gdGhpcy54ICsgJyAnICsgdGhpcy55O1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTaXplIHtcbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IHdpZHRoOiBudW1iZXIsIHB1YmxpYyByZWFkb25seSBoZWlnaHQ6IG51bWJlcikge31cblxuICBwdWJsaWMgY2xvbmUoKTogU2l6ZSB7XG4gICAgcmV0dXJuIG5ldyBTaXplKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcbiAgfVxuXG4gIHB1YmxpYyB2YWx1ZU9mKCkge1xuICAgIHJldHVybiB0aGlzLndpZHRoICsgJyAnICsgdGhpcy5oZWlnaHQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwZWVkIHtcbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IHg6IG51bWJlciwgcHVibGljIHJlYWRvbmx5IHk6IG51bWJlcikge31cblxuICBwdWJsaWMgY2xvbmUoKTogU3BlZWQge1xuICAgIHJldHVybiBuZXcgU3BlZWQodGhpcy54LCB0aGlzLnkpO1xuICB9XG5cbiAgcHVibGljIHZhbHVlT2YoKSB7XG4gICAgcmV0dXJuIHRoaXMueCArICcgJyArIHRoaXMueTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvaW50IGZyb20gJ34vc3RydWN0cy9Qb2ludCc7XG5pbXBvcnQgU2l6ZSBmcm9tICd+L3N0cnVjdHMvU2l6ZSc7XG5pbXBvcnQgU3BlZWQgZnJvbSAnfi9zdHJ1Y3RzL1NwZWVkJztcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfREVCT1VOQ0UgPSAzMDA7XG5leHBvcnQgY29uc3QgREVGQVVMVF9GUkFNRV9EVVJBVElPTiA9IDMzO1xuZXhwb3J0IGNvbnN0IEdBTUVfV0lORE9XX1dJRFRIID0gODAwO1xuZXhwb3J0IGNvbnN0IEdBTUVfV0lORE9XX0hFSUdIVCA9IDYwMDtcblxuZXhwb3J0IGNvbnN0IFBMQVlFUl9JTklUSUFMX1BPSU5UID0gbmV3IFBvaW50KDM4MCwgNTAwKTtcbmV4cG9ydCBjb25zdCBQTEFZRVJfSU5JVElBTF9TSVpFID0gbmV3IFNpemUoMzQsIDQ3KTtcbmV4cG9ydCBjb25zdCBQTEFZRVJfSU5JVElBTF9TUEVFRCA9IG5ldyBTcGVlZCgwLCAwKTtcbmV4cG9ydCBjb25zdCBQTEFZRVJfTU9WRU1FTlRfU1BFRUQgPSA0O1xuZXhwb3J0IGNvbnN0IFBMQVlFUl9NSU5fVE9QID0gMzUwO1xuZXhwb3J0IGNvbnN0IFBMQVlFUl9BVFRBQ0tfREVMQVkgPSA1MDA7XG5leHBvcnQgY29uc3QgUExBWUVSX0FGVEVSX0RBTUFHRV9EVVJBVElPTiA9IDMwMDA7XG5cbmV4cG9ydCBjb25zdCBFTkVNWV9JTklUSUFMX1BPSU5UID0gbmV3IFBvaW50KDM1MCwgNTApO1xuZXhwb3J0IGNvbnN0IEVORU1ZX0lOSVRJQUxfU0laRSA9IG5ldyBTaXplKDEwMCwgMTAwKTtcbmV4cG9ydCBjb25zdCBFTkVNWV9JTklUSUFMX1NQRUVEID0gbmV3IFNwZWVkKDQsIDApO1xuZXhwb3J0IGNvbnN0IEVORU1ZX0xFRlRfQk9SREVSID0gNTA7XG5leHBvcnQgY29uc3QgRU5FTVlfUklHSFRfQk9SREVSID0gNTA7XG5leHBvcnQgY29uc3QgRU5FTVlfUkVDRUlWSU5HX0RBTUFHRSA9IDEwO1xuZXhwb3J0IGNvbnN0IEVORU1ZX0FUVEFDS19ERUxBWSA9IDIwMDtcbmV4cG9ydCBjb25zdCBFTkVNWV9BRlRFUl9EQU1BR0VfRFVSQVRJT04gPSA1MDA7XG5cbmV4cG9ydCBjb25zdCBQTEFZRVJfTUFYX0hFQUxUSCA9IDM7XG5leHBvcnQgY29uc3QgRU5FTVlfTUFYX0hFQUxUSCA9IDQwMDtcblxuZXhwb3J0IGNvbnN0IExJRkVCQVJfSEVJR0hUID0gMjk7XG5leHBvcnQgY29uc3QgTElGRUJBUl9DT0xPUiA9ICcjMDA5JztcbmV4cG9ydCBjb25zdCBMSUZFQkFSX0VORU1ZX0VNUFRZX0hFQUxUSF9DT0xPUiA9ICcjMDAwJztcbmV4cG9ydCBjb25zdCBMSUZFQkFSX0VORU1ZX0ZVTExfSEVBTFRIX0NPTE9SID0gJyNmMDAnO1xuXG5leHBvcnQgY29uc3QgUExBWUVSX0hFQUxUSF9JQ09OX1NJWkUgPSBuZXcgU2l6ZSgzMCwgMjcpO1xuXG5leHBvcnQgY29uc3QgQlVMTEVUX1NJWkUgPSBuZXcgU2l6ZSgxNCwgMTQpO1xuXG5leHBvcnQgY29uc3QgS0VZX1RPUCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdLRVlfVE9QJykgPz8gJ1cnO1xuZXhwb3J0IGNvbnN0IEtFWV9MRUZUID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ0tFWV9MRUZUJykgPz8gJ0EnO1xuZXhwb3J0IGNvbnN0IEtFWV9CT1RUT00gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnS0VZX0JPVFRPTScpID8/ICdTJztcbmV4cG9ydCBjb25zdCBLRVlfUklHSFQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnS0VZX1JJR0hUJykgPz8gJ0QnO1xuZXhwb3J0IGNvbnN0IEtFWV9BVFRBQ0sgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnS0VZX0FUVEFDSycpID8/ICdLJztcbmV4cG9ydCBjb25zdCBLRVlfUEFVU0UgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnS0VZX1BBVVNFJykgPz8gJ1AnO1xuXG5jb25zb2xlLmxvZygna2V5cycsIEtFWV9UT1AsIEtFWV9MRUZULCBLRVlfQk9UVE9NLCBLRVlfUklHSFQsIEtFWV9BVFRBQ0ssIEtFWV9QQVVTRSk7XG4iLCJpbXBvcnQgeyBHQU1FX1dJTkRPV19XSURUSCwgR0FNRV9XSU5ET1dfSEVJR0hUIH0gZnJvbSAnfi9jb25zdHMnO1xuXG5jb25zdCBmb250Q1NTID0gYFxuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxNnB4O1xuYDtcblxuZXhwb3J0IGNvbnN0IHJvb3RDU1MgPSBgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgJHtmb250Q1NTfVxuYDtcblxuZXhwb3J0IGNvbnN0IHdpbmRvd0NTUyA9IGBcbiAgd2lkdGg6ICR7R0FNRV9XSU5ET1dfV0lEVEh9cHg7XG4gIGhlaWdodDogJHtHQU1FX1dJTkRPV19IRUlHSFR9cHg7XG4gIGJhY2tncm91bmQ6ICNiYmY7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcbiIsImltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICd+L1JlbmRlckFQSS9jb25zdHMnO1xuXG5pbXBvcnQgKiBhcyBjc3MgZnJvbSAnLi9jc3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkSWQoZWxlbWVudDogSFRNTEVsZW1lbnQsIGlkOiBzdHJpbmcpOiB2b2lkIHtcbiAgZWxlbWVudC5pZCA9IGlkO1xuXG4gIGlmIChwcm9jZXNzLmVudi5JU19URVNUX01PREUpIHtcbiAgICBlbGVtZW50LmRhdGFzZXQudGVzdGlkID0gaWQ7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3QoKSB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykgYXMgSFRNTEJvZHlFbGVtZW50O1xuICBjb25zdCByb290ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgYWRkSWQocm9vdCwgY29uc3RzLlJPT1RfSUQpO1xuICByb290LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCBjc3Mucm9vdENTUyk7XG4gIGJvZHkuYXBwZW5kQ2hpbGQocm9vdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVXaW5kb3coKSB7XG4gIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb25zdHMuUk9PVF9JRCk7XG5cbiAgaWYgKCFyb290KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEJyb3dzZXJBUEkgRXJyb3I6IG1ldGhvZCBcIiR7Y3JlYXRlV2luZG93Lm5hbWV9XCIgLSByb290IG5vdCBmb3VuZGBcbiAgICApO1xuICB9XG5cbiAgY29uc3Qgd2luZG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgYWRkSWQod2luZG93LCBjb25zdHMuR0FNRV9XSU5ET1dfSUQpO1xuICB3aW5kb3cuc2V0QXR0cmlidXRlKCdzdHlsZScsIGNzcy53aW5kb3dDU1MpO1xuICByb290LmFwcGVuZENoaWxkKHdpbmRvdyk7XG59XG4iLCJpbXBvcnQgeyBHYW1lT2JqZWN0U3RydWN0IH0gZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QvdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCcm93c2VyQVBJVmlldyB7XG4gIHByaXZhdGUgZ2FtZU9iamVjdDogR2FtZU9iamVjdFN0cnVjdDtcbiAgcHJpdmF0ZSBpbm5lckVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBwdWJsaWMgZ2V0IGVsZW1lbnQoKTogSFRNTEVsZW1lbnQge1xuICAgIHJldHVybiB0aGlzLmlubmVyRWxlbWVudDtcbiAgfVxuICBwdWJsaWMgZ2V0IGlkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZ2FtZU9iamVjdC5pZDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3RTdHJ1Y3QpIHtcbiAgICB0aGlzLmdhbWVPYmplY3QgPSBnYW1lT2JqZWN0O1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIHB1YmxpYyBjcmVhdGVFbGVtZW50KCkge1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIH1cblxuICBwdWJsaWMgc2V0RWxlbWVudChodG1sOiBIVE1MRWxlbWVudCkge1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gaHRtbDtcbiAgfVxuXG4gIHB1YmxpYyBhcHBseUFjdHVhbENoYW5nZSgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdHlsZScsIHRoaXMuY3NzKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IGNzcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IHsgcG9pbnQsIHNpemUsIGJhY2tncm91bmQsIHpJbmRleCB9ID0gdGhpcy5nYW1lT2JqZWN0O1xuXG4gICAgcmV0dXJuIGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAke3BvaW50Lnl9cHg7XG4gICAgbGVmdDogJHtwb2ludC54fXB4O1xuICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICB3aWR0aDogJHtzaXplLndpZHRofXB4O1xuICAgIGhlaWdodDogJHtzaXplLmhlaWdodH1weDtcbiAgICBiYWNrZ3JvdW5kOiAke2JhY2tncm91bmR9O1xuICAgIGA7XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICd+L1JlbmRlckFQSS9jb25zdHMnO1xuaW1wb3J0IFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSSc7XG5pbXBvcnQgeyBHYW1lT2JqZWN0U3RydWN0IH0gZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QvdHlwZXMnO1xuaW1wb3J0IHsgVmlydHVhbERPTUNoYW5nZSB9IGZyb20gJ34vVmlydHVhbERPTS90eXBlcyc7XG5cbmltcG9ydCAqIGFzIEhlbHBlciBmcm9tICcuL2hlbHBlcic7XG5pbXBvcnQgQnJvd3NlckFQSVZpZXcgZnJvbSAnLi9Ccm93c2VyQVBJVmlldyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJyb3dzZXJBUEkgZXh0ZW5kcyBSZW5kZXJBUEkge1xuICBwcml2YXRlIGVsZW1lbnRzTWFwOiBSZWNvcmQ8R2FtZU9iamVjdFN0cnVjdFsnaWQnXSwgQnJvd3NlckFQSVZpZXc+ID0ge307XG4gIHByaXZhdGUgZ2V0IHdpbmRvdygpOiBIVE1MRWxlbWVudCB7XG4gICAgY29uc3Qgd2luZG93Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvbnN0cy5HQU1FX1dJTkRPV19JRCk7XG5cbiAgICBpZiAoIXdpbmRvd05vZGUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0Jyb3dzZXJBUEkgRXJyb3I6IHlvdSBjYW5cXCd0IHVzZSBwcm9wZXJ0eSBcIndpbmRvd1wiIGJlZm9yZSBjYWxsIG9mIG1ldGhvZCBcInJlbmRlckdhbWVXaW5kb3dcIidcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHdpbmRvd05vZGU7XG4gIH1cblxuICBwdWJsaWMgcmVuZGVyR2FtZVdpbmRvdygpOiB2b2lkIHtcbiAgICBIZWxwZXIuY3JlYXRlUm9vdCgpO1xuICAgIEhlbHBlci5jcmVhdGVXaW5kb3coKTtcbiAgfVxuICBwdWJsaWMgY2xlYXJBbGwoKTogdm9pZCB7XG4gICAgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSAnJztcbiAgfVxuICBwdWJsaWMgcmVuZGVyKGNoYW5nZXM6IFZpcnR1YWxET01DaGFuZ2VbXSk6IHZvaWQge1xuICAgIGNoYW5nZXMuZm9yRWFjaCgoY2hhbmdlKSA9PiB7XG4gICAgICBzd2l0Y2ggKGNoYW5nZS5hY3Rpb24pIHtcbiAgICAgICAgY2FzZSAnbW91bnQnOiB7XG4gICAgICAgICAgdGhpcy5tb3VudChjaGFuZ2UuZ2FtZU9iamVjdCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAndW5tb3VudCc6IHtcbiAgICAgICAgICB0aGlzLnVubW91bnQoY2hhbmdlLmdhbWVPYmplY3QpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ3VwZGF0ZSc6IHtcbiAgICAgICAgICB0aGlzLnVwZGF0ZShjaGFuZ2UuZ2FtZU9iamVjdCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgbW91bnQoZ2FtZU9iamVjdDogR2FtZU9iamVjdFN0cnVjdCk6IHZvaWQge1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgQnJvd3NlckFQSVZpZXcoZ2FtZU9iamVjdCk7XG5cbiAgICB2aWV3LmNyZWF0ZUVsZW1lbnQoKTtcbiAgICB2aWV3LmFwcGx5QWN0dWFsQ2hhbmdlKCk7XG5cbiAgICB0aGlzLndpbmRvdy5hcHBlbmRDaGlsZCh2aWV3LmVsZW1lbnQpO1xuICAgIHRoaXMuZWxlbWVudHNNYXBbdmlldy5pZF0gPSB2aWV3O1xuICB9XG4gIHByaXZhdGUgdXBkYXRlKGdhbWVPYmplY3Q6IEdhbWVPYmplY3RTdHJ1Y3QpIHtcbiAgICBjb25zdCBuZXdWaWV3ID0gbmV3IEJyb3dzZXJBUElWaWV3KGdhbWVPYmplY3QpO1xuICAgIGNvbnN0IG9sZFZpZXcgPSB0aGlzLmVsZW1lbnRzTWFwW2dhbWVPYmplY3QuaWRdO1xuXG4gICAgbmV3Vmlldy5zZXRFbGVtZW50KG9sZFZpZXcuZWxlbWVudCk7XG4gICAgbmV3Vmlldy5hcHBseUFjdHVhbENoYW5nZSgpO1xuXG4gICAgdGhpcy53aW5kb3cuYXBwZW5kQ2hpbGQobmV3Vmlldy5lbGVtZW50KTtcbiAgICB0aGlzLmVsZW1lbnRzTWFwW2dhbWVPYmplY3QuaWRdID0gbmV3VmlldztcbiAgfVxuICBwcml2YXRlIHVubW91bnQoZ2FtZU9iamVjdDogR2FtZU9iamVjdFN0cnVjdCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudHNNYXBbZ2FtZU9iamVjdC5pZF0uZWxlbWVudC5yZW1vdmUoKTtcbiAgICBkZWxldGUgdGhpcy5lbGVtZW50c01hcFtnYW1lT2JqZWN0LmlkXTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgVmlydHVhbERPTUNoYW5nZSB9IGZyb20gJ34vVmlydHVhbERPTS90eXBlcyc7XG5cbmltcG9ydCBSZW5kZXJBUEkgZnJvbSAnLic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZha2VBUEkgZXh0ZW5kcyBSZW5kZXJBUEkge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgcHVibGljIHJlbmRlckdhbWVXaW5kb3coKSB7XG4gICAgY29uc29sZS5sb2coJ3JlbmRlckdhbWVXaW5kb3cnKTtcbiAgfVxuICBwdWJsaWMgY2xlYXJBbGwoKSB7XG4gICAgY29uc29sZS5sb2coJ2NsZWFyQWxsJyk7XG4gIH1cbiAgcHVibGljIHJlbmRlcihjaGFuZ2VzOiBWaXJ0dWFsRE9NQ2hhbmdlW10pOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZygncmVuZGVyJyk7XG4gIH1cbn1cbiIsImltcG9ydCBCcm93c2VyQVBJIGZyb20gJy4vQnJvd3NlckFQSSc7XG5pbXBvcnQgRmFrZUFQSSBmcm9tICcuL0Zha2VBUEknO1xuaW1wb3J0IFJlbmRlckFQSSwgeyBSZW5kZXJBUElUeXBlIH0gZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFJlbmRlckFQSSgpOiBSZW5kZXJBUEkge1xuICBjb25zdCB0eXBlOiBSZW5kZXJBUElUeXBlID1cbiAgICAocHJvY2Vzcy5lbnYuUkVOREVSX0FQSSBhcyBSZW5kZXJBUElUeXBlKSA/PyAnYnJvd3Nlcic7XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAnYnJvd3Nlcic6XG4gICAgICByZXR1cm4gbmV3IEJyb3dzZXJBUEkoKTtcbiAgICBjYXNlICdmYWtlJzpcbiAgICAgIHJldHVybiBuZXcgRmFrZUFQSSgpO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgZW52IFJFTkRFUl9BUEk6ICR7dHlwZX1gKTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgREVGQVVMVF9GUkFNRV9EVVJBVElPTiB9IGZyb20gJ34vY29uc3RzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUxvb3Age1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogR2FtZUxvb3A7XG4gIHByaXZhdGUgZnJhbWVEdXJhdGlvbjogbnVtYmVyO1xuICBwcml2YXRlIGxhc3RGcmFtZVRpbWU6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihmcmFtZUR1cmF0aW9uOiBudW1iZXIgPSBERUZBVUxUX0ZSQU1FX0RVUkFUSU9OKSB7XG4gICAgaWYgKCFHYW1lTG9vcC5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgIHRoaXMuZnJhbWVEdXJhdGlvbiA9IGZyYW1lRHVyYXRpb247XG4gICAgICBHYW1lTG9vcC5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIEdhbWVMb29wLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIHN0YXJ0KGZuOiBGdW5jdGlvbikge1xuICAgIGNvbnN0IGxvb3AgPSAoKSA9PiB7XG4gICAgICBjb25zdCBjdXJyZW50VGltZSA9IERhdGUubm93KCk7XG5cbiAgICAgIGlmICh0aGlzLmxhc3RGcmFtZVRpbWUgKyB0aGlzLmZyYW1lRHVyYXRpb24gPD0gY3VycmVudFRpbWUpIHtcbiAgICAgICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gY3VycmVudFRpbWU7XG4gICAgICAgIGZuKCk7XG4gICAgICB9XG5cbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShsb29wKTtcbiAgICB9O1xuXG4gICAgbG9vcCgpO1xuICB9XG59XG4iLCJpbXBvcnQgUmVuZGVyQVBJIGZyb20gJ34vUmVuZGVyQVBJJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVdpbmRvdyB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBHYW1lV2luZG93IHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgcmVuZGVyQVBJOiBSZW5kZXJBUEkgfCBudWxsID0gbnVsbDtcblxuICBjb25zdHJ1Y3RvcihyZW5kZXJBUEk6IFJlbmRlckFQSSkge1xuICAgIGlmICghR2FtZVdpbmRvdy5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5yZW5kZXJBUEkgPSByZW5kZXJBUEk7XG4gICAgICBHYW1lV2luZG93Lmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gR2FtZVdpbmRvdy5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyByZW5kZXIoKSB7XG4gICAgdGhpcy5yZW5kZXJBUEkucmVuZGVyR2FtZVdpbmRvdygpO1xuICB9XG5cbiAgcHVibGljIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5oYW5kbGVFcnJvcnNGb3JEZXN0cm95KCk7XG4gICAgdGhpcy5yZW5kZXJBUEkuY2xlYXJBbGwoKTtcbiAgICB0aGlzLnJlbmRlckFQSSA9IG51bGw7XG4gICAgR2FtZVdpbmRvdy5pbnN0YW5jZSA9IG51bGw7XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZUVycm9yc0ZvckRlc3Ryb3koKSB7XG4gICAgaWYgKCFwcm9jZXNzLmVudi5JU19URVNUX01PREUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0dhbWVXaW5kb3cgRXJyb3I6IGNhbGxlZCBtZXRob2QgXCJkZXN0cm95XCIgKHdoaWNoIGZvciB0ZXN0cyBvbmx5ISkgbm90IGluIHRlc3RzJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMucmVuZGVyQVBJKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdHYW1lV2luZG93IEVycm9yOiBjYWxsZWQgbWV0aG9kIFwiZGVzdHJveVwiIHdpdGhvdXQgYWRkaW5nIG9mIHJlbmRlckFQSSdcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iLCJjb25zdCBnZXRVbmlxdWVJZCA9IChmdW5jdGlvbiAoKSB7XG4gIGxldCBsYXN0VW5pcXVlSWQ6IHN0cmluZyA9ICcnO1xuICBsZXQgYW1vdW50R2l2ZW5TYW1lSWQgPSAwO1xuXG4gIHJldHVybiBmdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcbiAgICBjb25zdCBpZCA9IERhdGUubm93KCkgKyAnJztcblxuICAgIGlmIChsYXN0VW5pcXVlSWQgPT09IGlkKSB7XG4gICAgICBhbW91bnRHaXZlblNhbWVJZCsrO1xuXG4gICAgICByZXR1cm4gbGFzdFVuaXF1ZUlkICsgJyAnICsgYW1vdW50R2l2ZW5TYW1lSWQ7XG4gICAgfVxuXG4gICAgbGFzdFVuaXF1ZUlkID0gaWQ7XG5cbiAgICByZXR1cm4gaWQ7XG4gIH07XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBnZXRVbmlxdWVJZDtcbiIsImltcG9ydCBQb2ludCBmcm9tICd+L3N0cnVjdHMvUG9pbnQnO1xuaW1wb3J0IFNpemUgZnJvbSAnfi9zdHJ1Y3RzL1NpemUnO1xuaW1wb3J0IFNwZWVkIGZyb20gJ34vc3RydWN0cy9TcGVlZCc7XG5pbXBvcnQgZ2V0VW5pcXVlSWQgZnJvbSAnfi9zaGFyZWQvZ2V0VW5pcXVlSWQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lT2JqZWN0IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHBvaW50OiBQb2ludCxcbiAgICBwdWJsaWMgc2l6ZTogU2l6ZSxcbiAgICBwdWJsaWMgYmFja2dyb3VuZDogc3RyaW5nID0gJycsXG4gICAgcHVibGljIHpJbmRleDogbnVtYmVyID0gMSxcbiAgICBwdWJsaWMgc3BlZWQ6IFNwZWVkID0gbmV3IFNwZWVkKDAsIDApLFxuICAgIHB1YmxpYyByZWFkb25seSBpZCA9IGdldFVuaXF1ZUlkKClcbiAgKSB7fVxuXG4gIHB1YmxpYyBtb3ZlKCkge1xuICAgIHRoaXMucG9pbnQgPSBuZXcgUG9pbnQoXG4gICAgICB0aGlzLnBvaW50LnggKyB0aGlzLnNwZWVkLngsXG4gICAgICB0aGlzLnBvaW50LnkgKyB0aGlzLnNwZWVkLnlcbiAgICApO1xuICB9XG5cbiAgcHVibGljIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgR2FtZU9iamVjdChcbiAgICAgIHRoaXMucG9pbnQsXG4gICAgICB0aGlzLnNpemUsXG4gICAgICB0aGlzLmJhY2tncm91bmQsXG4gICAgICB0aGlzLnpJbmRleCxcbiAgICAgIHRoaXMuc3BlZWQsXG4gICAgICB0aGlzLmlkXG4gICAgKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQge1xuICBwbGF5ZXJTdGF0ZTogMixcbiAgZW5lbXlTdGF0ZTogMixcbiAgYnVsbGV0U3RhdGU6IDMsXG4gIGxpZmViYXI6IHtcbiAgICBlbXB0eUxpZmViYXI6IDQsXG4gICAgZW5lbXlFbXB0eUhlYWx0aDogNSxcbiAgICBlbmVteUhlYWx0aDogNixcbiAgICBwbGF5ZXJIZWFsdGg6IDcsXG4gIH0sXG59O1xuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IEtleWJvYXJkIGZyb20gJ34vY29udHJvbGxlcnMvS2V5Ym9hcmQnO1xuaW1wb3J0IFNwZWVkIGZyb20gJ34vc3RydWN0cy9TcGVlZCc7XG5pbXBvcnQgcGxheWVyUG5nIGZyb20gJ34vYXNzZXRzL2ltZy93aXphcmQucG5nJztcbmltcG9ydCB7XG4gIFBMQVlFUl9JTklUSUFMX1BPSU5ULFxuICBQTEFZRVJfSU5JVElBTF9TSVpFLFxuICBQTEFZRVJfSU5JVElBTF9TUEVFRCxcbiAgUExBWUVSX01JTl9UT1AsXG4gIEdBTUVfV0lORE9XX0hFSUdIVCxcbiAgR0FNRV9XSU5ET1dfV0lEVEgsXG4gIFBMQVlFUl9NT1ZFTUVOVF9TUEVFRCxcbiAgS0VZX1RPUCxcbiAgS0VZX0xFRlQsXG4gIEtFWV9SSUdIVCxcbiAgS0VZX0JPVFRPTSxcbn0gZnJvbSAnfi9jb25zdHMnO1xuaW1wb3J0IHpJbmRleCBmcm9tICd+L3pJbmRleCc7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVJbml0aWFsR2FtZU9iamVjdCA9ICgpID0+IHtcbiAgcmV0dXJuIG5ldyBHYW1lT2JqZWN0KFxuICAgIFBMQVlFUl9JTklUSUFMX1BPSU5ULmNsb25lKCksXG4gICAgUExBWUVSX0lOSVRJQUxfU0laRS5jbG9uZSgpLFxuICAgIGB1cmwoJHtwbGF5ZXJQbmd9KWAsXG4gICAgekluZGV4LnBsYXllclN0YXRlLFxuICAgIFBMQVlFUl9JTklUSUFMX1NQRUVELmNsb25lKClcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRTcGVlZEJ5S2V5Ym9hcmRzS2V5cyA9IChvYmo6IEdhbWVPYmplY3QsIGtleWJvYXJkOiBLZXlib2FyZCkgPT4ge1xuICBjb25zdCBuZWVkUHJldmVudFRvcCA9IG9iai5wb2ludC55IDw9IFBMQVlFUl9NSU5fVE9QO1xuICBjb25zdCBuZWVkUHJldmVudExlZnQgPSBvYmoucG9pbnQueCA8PSAwO1xuICBjb25zdCBuZWVkUHJldmVudEJvdHRvbSA9IG9iai5wb2ludC55ID49IEdBTUVfV0lORE9XX0hFSUdIVCAtIG9iai5zaXplLmhlaWdodDtcbiAgY29uc3QgbmVlZFByZXZlbnRSaWdodCA9IG9iai5wb2ludC54ID49IEdBTUVfV0lORE9XX1dJRFRIIC0gb2JqLnNpemUud2lkdGg7XG5cbiAgbGV0IHNwZWVkWCA9IDA7XG4gIGxldCBzcGVlZFkgPSAwO1xuXG4gIGlmIChrZXlib2FyZC5pc0FjdGl2ZUtleShLRVlfVE9QKSAmJiAhbmVlZFByZXZlbnRUb3ApIHtcbiAgICBzcGVlZFkgPSAtUExBWUVSX01PVkVNRU5UX1NQRUVEO1xuICB9XG4gIGlmIChrZXlib2FyZC5pc0FjdGl2ZUtleShLRVlfTEVGVCkgJiYgIW5lZWRQcmV2ZW50TGVmdCkge1xuICAgIHNwZWVkWCA9IC1QTEFZRVJfTU9WRU1FTlRfU1BFRUQ7XG4gIH1cbiAgaWYgKGtleWJvYXJkLmlzQWN0aXZlS2V5KEtFWV9CT1RUT00pICYmICFuZWVkUHJldmVudEJvdHRvbSkge1xuICAgIHNwZWVkWSA9IFBMQVlFUl9NT1ZFTUVOVF9TUEVFRDtcbiAgfVxuICBpZiAoa2V5Ym9hcmQuaXNBY3RpdmVLZXkoS0VZX1JJR0hUKSAmJiAhbmVlZFByZXZlbnRSaWdodCkge1xuICAgIHNwZWVkWCA9IFBMQVlFUl9NT1ZFTUVOVF9TUEVFRDtcbiAgfVxuXG4gIHJldHVybiBuZXcgU3BlZWQoc3BlZWRYLCBzcGVlZFkpO1xufTtcbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcbmltcG9ydCB7IEdhbWVPYmplY3RTdHJ1Y3QgfSBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdC90eXBlcyc7XG5cbmltcG9ydCB7IFZpcnR1YWxET01DaGFuZ2UsIFZpcnR1YWxET01HYW1lT2JqZWN0c01hcCB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaXJ0dWFsRE9NIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFZpcnR1YWxET007XG4gIHByaXZhdGUgcHJldkVsZW1lbnRzOiBWaXJ0dWFsRE9NR2FtZU9iamVjdHNNYXA7XG4gIHByaXZhdGUgbmV4dEVsZW1lbnRzOiBWaXJ0dWFsRE9NR2FtZU9iamVjdHNNYXA7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFWaXJ0dWFsRE9NLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLnByZXZFbGVtZW50cyA9IHt9O1xuICAgICAgdGhpcy5uZXh0RWxlbWVudHMgPSB7fTtcbiAgICAgIFZpcnR1YWxET00uaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBWaXJ0dWFsRE9NLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGFkZEVsZW1lbnQoZWxlbWVudDogR2FtZU9iamVjdFN0cnVjdCk6IHZvaWQge1xuICAgIHRoaXMubmV4dEVsZW1lbnRzW2VsZW1lbnQuaWRdID0gZWxlbWVudDtcbiAgfVxuICBwdWJsaWMgcHJlcGFyZUZvck5ld0ZyYW1lKCkge1xuICAgIHRoaXMucHJldkVsZW1lbnRzID0ge307XG4gICAgdGhpcy5jbG9uZU5leHRFbGVtZW50c0ludG9QcmV2RWxlbWVudHMoKTtcbiAgICB0aGlzLm5leHRFbGVtZW50cyA9IHt9O1xuICB9XG4gIHB1YmxpYyBnZXRDaGFuZ2VzKCk6IFZpcnR1YWxET01DaGFuZ2VbXSB7XG4gICAgY29uc3QgYWxsSWRzID0gdGhpcy5nZXRBbGxJZHNGcm9tTWFwcygpO1xuICAgIGNvbnN0IGNoYW5nZXM6IFZpcnR1YWxET01DaGFuZ2VbXSA9IFtdO1xuXG4gICAgYWxsSWRzLmZvckVhY2goKGlkOiBHYW1lT2JqZWN0U3RydWN0WydpZCddKSA9PiB7XG4gICAgICBjaGFuZ2VzLnB1c2godGhpcy5nZXRDaGFuZ2VGb3JFbGVtZW50QnlJZChpZCkpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNoYW5nZXM7XG4gIH1cbiAgcHVibGljIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5oYW5kbGVFcnJvcnNGb3JEZXN0cm95KCk7XG4gICAgdGhpcy5wcmV2RWxlbWVudHMgPSBudWxsO1xuICAgIHRoaXMubmV4dEVsZW1lbnRzID0gbnVsbDtcbiAgICBWaXJ0dWFsRE9NLmluc3RhbmNlID0gbnVsbDtcbiAgfVxuXG4gIHByaXZhdGUgY2xvbmVOZXh0RWxlbWVudHNJbnRvUHJldkVsZW1lbnRzKCk6IHZvaWQge1xuICAgIGZvciAoY29uc3QgaWQgaW4gdGhpcy5uZXh0RWxlbWVudHMpIHtcbiAgICAgIHRoaXMucHJldkVsZW1lbnRzW2lkXSA9IHRoaXMubmV4dEVsZW1lbnRzW2lkXS5jbG9uZSgpO1xuICAgIH1cbiAgfVxuICBwcml2YXRlIGhhbmRsZUVycm9yc0ZvckRlc3Ryb3koKSB7XG4gICAgaWYgKCFwcm9jZXNzLmVudi5JU19URVNUX01PREUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVmlydHVhbERPTSBFcnJvcjogY2FsbGVkIG1ldGhvZCBcImRlc3Ryb3lcIiAod2hpY2ggZm9yIHRlc3RzIG9ubHkhKSBub3QgaW4gdGVzdHMnKTtcbiAgICB9XG4gIH1cbiAgcHJpdmF0ZSBnZXRBbGxJZHNGcm9tTWFwcygpOiBTZXQ8R2FtZU9iamVjdFsnaWQnXT4ge1xuICAgIGNvbnN0IGFsbElkc1NldCA9IG5ldyBTZXQ8R2FtZU9iamVjdFsnaWQnXT4oKTtcblxuICAgIGZvciAoY29uc3QgaWQgaW4gdGhpcy5wcmV2RWxlbWVudHMpIHtcbiAgICAgIGFsbElkc1NldC5hZGQoaWQpO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgaWQgaW4gdGhpcy5uZXh0RWxlbWVudHMpIHtcbiAgICAgIGFsbElkc1NldC5hZGQoaWQpO1xuICAgIH1cblxuICAgIHJldHVybiBhbGxJZHNTZXQ7XG4gIH1cbiAgcHJpdmF0ZSBnZXRDaGFuZ2VGb3JFbGVtZW50QnlJZChpZDogR2FtZU9iamVjdFN0cnVjdFsnaWQnXSk6IFZpcnR1YWxET01DaGFuZ2Uge1xuICAgIGNvbnN0IHByZXZFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0IHwgbnVsbCA9IHRoaXMucHJldkVsZW1lbnRzW2lkXSA/PyBudWxsO1xuICAgIGNvbnN0IG5leHRFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0IHwgbnVsbCA9IHRoaXMubmV4dEVsZW1lbnRzW2lkXSA/PyBudWxsO1xuXG4gICAgaWYgKCFwcmV2RWxlbWVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2FtZU9iamVjdDogbmV4dEVsZW1lbnQsXG4gICAgICAgIGFjdGlvbjogJ21vdW50JyxcbiAgICAgIH07XG4gICAgfVxuICAgIGlmICghbmV4dEVsZW1lbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdhbWVPYmplY3Q6IHByZXZFbGVtZW50LFxuICAgICAgICBhY3Rpb246ICd1bm1vdW50JyxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGdhbWVPYmplY3Q6IG5leHRFbGVtZW50LFxuICAgICAgYWN0aW9uOiB0aGlzLmlzRWxlbWVudFVwZGF0ZWQoaWQpID8gJ3VwZGF0ZScgOiAnbm90LWEtY2hhbmdlJyxcbiAgICB9O1xuICB9XG4gIHByaXZhdGUgaXNFbGVtZW50VXBkYXRlZChpZDogR2FtZU9iamVjdFN0cnVjdFsnaWQnXSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHByZXZFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0ID0gdGhpcy5wcmV2RWxlbWVudHNbaWRdO1xuICAgIGNvbnN0IG5leHRFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0ID0gdGhpcy5uZXh0RWxlbWVudHNbaWRdO1xuXG4gICAgZm9yIChjb25zdCBrZXkgaW4gcHJldkVsZW1lbnQpIHtcbiAgICAgIGNvbnN0IHByb3BLZXkgPSBrZXkgYXMga2V5b2YgdHlwZW9mIHByZXZFbGVtZW50O1xuXG4gICAgICBpZiAocHJldkVsZW1lbnRbcHJvcEtleV0udmFsdWVPZigpICE9PSBuZXh0RWxlbWVudFtwcm9wS2V5XS52YWx1ZU9mKCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iLCJpbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IHsgQlVMTEVUX1NJWkUgfSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgekluZGV4IGZyb20gJ34vekluZGV4JztcbmltcG9ydCBlbmVteUJ1bGxldFBuZyBmcm9tICd+L2Fzc2V0cy9pbWcvd2ViLnBuZyc7XG5pbXBvcnQgcGxheWVyQnVsbGV0UG5nIGZyb20gJ34vYXNzZXRzL2ltZy9maXJlYmFsbC5wbmcnO1xuaW1wb3J0IFBvaW50IGZyb20gJ34vc3RydWN0cy9Qb2ludCc7XG5pbXBvcnQgU3BlZWQgZnJvbSAnfi9zdHJ1Y3RzL1NwZWVkJztcblxuaW1wb3J0IHsgQnVsbGV0VHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXQge1xuICBwcml2YXRlIGdhbWVPYmplY3Q6IEdhbWVPYmplY3Q7XG4gIHByaXZhdGUgdmlydHVhbERPTTogVmlydHVhbERPTTtcblxuICBnZXQgcG9pbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2FtZU9iamVjdC5wb2ludDtcbiAgfVxuICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nYW1lT2JqZWN0LnNpemU7XG4gIH1cbiAgZ2V0IGlkKCkge1xuICAgIHJldHVybiB0aGlzLmdhbWVPYmplY3QuaWQ7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgdHlwZTogQnVsbGV0VHlwZSwgcG9pbnQ6IFBvaW50LCBzcGVlZDogU3BlZWQpIHtcbiAgICB0aGlzLnZpcnR1YWxET00gPSBuZXcgVmlydHVhbERPTSgpO1xuICAgIHRoaXMuZ2FtZU9iamVjdCA9IEJ1bGxldC5jcmVhdGVJbml0aWFsU3ByaXRlKHRoaXMudHlwZSwgcG9pbnQsIHNwZWVkKTtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5wcm9jZXNzTW92ZW1lbnQoKTtcbiAgICB0aGlzLmFkZFRvTmV4dFJlbmRlcigpO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgY3JlYXRlSW5pdGlhbFNwcml0ZShcbiAgICB0eXBlOiBCdWxsZXRUeXBlLFxuICAgIHBvaW50OiBQb2ludCxcbiAgICBzcGVlZDogU3BlZWRcbiAgKSB7XG4gICAgcmV0dXJuIG5ldyBHYW1lT2JqZWN0KFxuICAgICAgcG9pbnQuY2xvbmUoKSxcbiAgICAgIEJVTExFVF9TSVpFLmNsb25lKCksXG4gICAgICBgdXJsKCR7dHlwZSA9PT0gJ2VuZW15JyA/IGVuZW15QnVsbGV0UG5nIDogcGxheWVyQnVsbGV0UG5nfSlgLFxuICAgICAgekluZGV4LmJ1bGxldFN0YXRlLFxuICAgICAgc3BlZWQuY2xvbmUoKVxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIHByb2Nlc3NNb3ZlbWVudCgpIHtcbiAgICB0aGlzLmdhbWVPYmplY3QubW92ZSgpO1xuICB9XG4gIHByaXZhdGUgYWRkVG9OZXh0UmVuZGVyKCkge1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMuZ2FtZU9iamVjdCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEtleWJvYXJkIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEtleWJvYXJkO1xuICBwcml2YXRlIGtleXM6IFNldDxzdHJpbmc+O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghS2V5Ym9hcmQuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMua2V5cyA9IG5ldyBTZXQoKTtcbiAgICAgIEtleWJvYXJkLmluc3RhbmNlID0gdGhpcztcblxuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldnQpID0+IHtcbiAgICAgICAgdGhpcy5rZXlzLmFkZChldnQua2V5LnRvVXBwZXJDYXNlKCkpO1xuICAgICAgfSk7XG5cbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGV2dCkgPT4ge1xuICAgICAgICB0aGlzLmtleXMuZGVsZXRlKGV2dC5rZXkudG9VcHBlckNhc2UoKSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gS2V5Ym9hcmQuaW5zdGFuY2U7XG4gIH1cblxuICBwdWJsaWMgaXNBY3RpdmVLZXkoa2V5OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5rZXlzLmhhcyhrZXkpO1xuICB9XG59XG4iLCJpbXBvcnQgQnVsbGV0IGZyb20gJ34vY29tcG9uZW50cy9CdWxsZXQnO1xuaW1wb3J0IHsgR0FNRV9XSU5ET1dfSEVJR0hULCBHQU1FX1dJTkRPV19XSURUSCB9IGZyb20gJ34vY29uc3RzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0c1N0b3JlIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEJ1bGxldHNTdG9yZTtcbiAgcHJpdmF0ZSBpbm5lckJ1bGxldHM6IEJ1bGxldFtdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghQnVsbGV0c1N0b3JlLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLmlubmVyQnVsbGV0cyA9IFtdO1xuICAgICAgQnVsbGV0c1N0b3JlLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gQnVsbGV0c1N0b3JlLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZUJ1bGxldHNPdXRzaWRlU2NyZWVuKCk6IHZvaWQge1xuICAgIHRoaXMuaW5uZXJCdWxsZXRzID0gdGhpcy5pbm5lckJ1bGxldHMuZmlsdGVyKChidWxsZXQpID0+IHtcbiAgICAgIGlmIChidWxsZXQucG9pbnQueCArIGJ1bGxldC5zaXplLndpZHRoIDwgMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoYnVsbGV0LnBvaW50LnggPiBHQU1FX1dJTkRPV19XSURUSCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoYnVsbGV0LnBvaW50LnkgKyBidWxsZXQuc2l6ZS5oZWlnaHQgPCAwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGlmIChidWxsZXQucG9pbnQueSA+IEdBTUVfV0lORE9XX0hFSUdIVCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGFkZEVsZW1lbnQoYnVsbGV0OiBCdWxsZXQpOiB2b2lkIHtcbiAgICB0aGlzLmlubmVyQnVsbGV0cy5wdXNoKGJ1bGxldCk7XG4gIH1cbiAgcHVibGljIHJlbW92ZUVsZW1lbnQoYnVsbGV0OiBCdWxsZXQpOiB2b2lkIHtcbiAgICB0aGlzLmlubmVyQnVsbGV0cyA9IHRoaXMuaW5uZXJCdWxsZXRzLmZpbHRlcihcbiAgICAgIChpbm5lckJ1bGxldCkgPT4gaW5uZXJCdWxsZXQuaWQgIT09IGJ1bGxldC5pZFxuICAgICk7XG4gIH1cblxuICBnZXQgYnVsbGV0cygpOiBSZWFkb25seTxCdWxsZXRbXT4ge1xuICAgIHJldHVybiB0aGlzLmlubmVyQnVsbGV0cztcbiAgfVxufVxuIiwiaW1wb3J0IHsgQnVsbGV0VHlwZSB9IGZyb20gJ34vY29tcG9uZW50cy9CdWxsZXQvdHlwZXMnO1xuaW1wb3J0IEJ1bGxldHNTdG9yZSBmcm9tICd+L3N0b3Jlcy9CdWxsZXRzU3RvcmUnO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgKiBhcyBIZWxwZXIgZnJvbSAnLi9oZWxwZXInO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRzQ29sbGlkZXIge1xuICBwcml2YXRlIGJ1bGxldHNTdG9yZTogQnVsbGV0c1N0b3JlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdGFyZ2V0OiBHYW1lT2JqZWN0LCBwcml2YXRlIGJ1bGxldFR5cGU6IEJ1bGxldFR5cGUpIHtcbiAgICB0aGlzLmJ1bGxldHNTdG9yZSA9IG5ldyBCdWxsZXRzU3RvcmUoKTtcbiAgfVxuXG4gIHB1YmxpYyB0cnlUb0NvbGxpZGUoYWN0aW9uV2hlbkNvbGxpZGU6ICgpID0+IHZvaWQpIHtcbiAgICB0aGlzLmJ1bGxldHNTdG9yZS5idWxsZXRzLmZvckVhY2goKGJ1bGxldCkgPT4ge1xuICAgICAgaWYgKHRoaXMuYnVsbGV0VHlwZSAhPT0gYnVsbGV0LnR5cGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoSGVscGVyLmhhc0NvbGx1c2lvbihidWxsZXQsIHRoaXMudGFyZ2V0KSkge1xuICAgICAgICBhY3Rpb25XaGVuQ29sbGlkZSgpO1xuICAgICAgICB0aGlzLmJ1bGxldHNTdG9yZS5yZW1vdmVFbGVtZW50KGJ1bGxldCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IEdhbWVPYmplY3RTdHJ1Y3QgfSBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdC90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBoYXNDb2xsdXNpb24gPSAoXG4gIG9iajE6IFBpY2s8R2FtZU9iamVjdFN0cnVjdCwgJ3BvaW50JyB8ICdzaXplJz4sXG4gIG9iajI6IFBpY2s8R2FtZU9iamVjdFN0cnVjdCwgJ3BvaW50JyB8ICdzaXplJz5cbikgPT4ge1xuICBjb25zdCBsZWZ0MSA9IG9iajEucG9pbnQueDtcbiAgY29uc3QgcmlnaHQxID0gb2JqMS5wb2ludC54ICsgb2JqMS5zaXplLndpZHRoO1xuXG4gIGNvbnN0IGxlZnQyID0gb2JqMi5wb2ludC54O1xuICBjb25zdCByaWdodDIgPSBvYmoyLnBvaW50LnggKyBvYmoyLnNpemUud2lkdGg7XG5cbiAgaWYgKFxuICAgIChsZWZ0MSA+PSBsZWZ0MiAmJiBsZWZ0MSA8PSByaWdodDIpIHx8XG4gICAgKHJpZ2h0MSA+PSBsZWZ0MiAmJiByaWdodDEgPD0gcmlnaHQyKVxuICApIHtcbiAgICBjb25zdCB0b3AxID0gb2JqMS5wb2ludC55O1xuICAgIGNvbnN0IGJvdHRvbTEgPSBvYmoxLnBvaW50LnkgKyBvYmoxLnNpemUuaGVpZ2h0O1xuXG4gICAgY29uc3QgdG9wMiA9IG9iajIucG9pbnQueTtcbiAgICBjb25zdCBib3R0b20yID0gb2JqMi5wb2ludC55ICsgb2JqMi5zaXplLmhlaWdodDtcblxuICAgIGlmIChcbiAgICAgICh0b3AxID49IHRvcDIgJiYgdG9wMSA8PSBib3R0b20yKSB8fFxuICAgICAgKGJvdHRvbTEgPj0gdG9wMiAmJiBib3R0b20xIDw9IGJvdHRvbTIpXG4gICAgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59O1xuIiwiaW1wb3J0IHsgUExBWUVSX0FUVEFDS19ERUxBWSwgS0VZX0FUVEFDSyB9IGZyb20gJ34vY29uc3RzJztcbmltcG9ydCBWaXJ0dWFsRE9NIGZyb20gJ34vVmlydHVhbERPTSc7XG5pbXBvcnQgQnVsbGV0IGZyb20gJ34vY29tcG9uZW50cy9CdWxsZXQnO1xuaW1wb3J0IEtleWJvYXJkIGZyb20gJ34vY29udHJvbGxlcnMvS2V5Ym9hcmQnO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IEJ1bGxldHNDb2xsaWRlciBmcm9tICd+L2NvbGxpZGVycy9CdWxsZXRzQ29sbGlkZXInO1xuaW1wb3J0IEJ1bGxldHNTdG9yZSBmcm9tICd+L3N0b3Jlcy9CdWxsZXRzU3RvcmUnO1xuaW1wb3J0IFNwZWVkIGZyb20gJ34vc3RydWN0cy9TcGVlZCc7XG5cbmltcG9ydCAqIGFzIEhlbHBlciBmcm9tICcuL2hlbHBlcic7XG5pbXBvcnQgeyBQbGF5ZXJTdGF0ZU5hbWUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgUGxheWVyU3RhdGUge1xuICBwcm90ZWN0ZWQga2V5Ym9hcmRDb250cm9sbGVyOiBLZXlib2FyZDtcbiAgcHJvdGVjdGVkIGdhbWVPYmplY3Q6IEdhbWVPYmplY3Q7XG4gIHByb3RlY3RlZCB2aXJ0dWFsRE9NOiBWaXJ0dWFsRE9NO1xuICBwcm90ZWN0ZWQgYnVsbGV0c0NvbGxpZGVyOiBCdWxsZXRzQ29sbGlkZXI7XG4gIHByb3RlY3RlZCBidWxsZXRzU3RvcmU6IEJ1bGxldHNTdG9yZTtcbiAgcHJvdGVjdGVkIGxhc3RBdHRhY2tUaW1lOiBudW1iZXI7XG5cbiAgcHVibGljIGhlYWx0aDogbnVtYmVyO1xuICBwdWJsaWMgc3RhdGVOYW1lOiBQbGF5ZXJTdGF0ZU5hbWU7XG5cbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICB0aGlzLmtleWJvYXJkQ29udHJvbGxlciA9IG5ldyBLZXlib2FyZCgpO1xuICAgIHRoaXMuZ2FtZU9iamVjdCA9IGdhbWVPYmplY3Q7XG4gICAgdGhpcy52aXJ0dWFsRE9NID0gbmV3IFZpcnR1YWxET00oKTtcbiAgICB0aGlzLmJ1bGxldHNDb2xsaWRlciA9IG5ldyBCdWxsZXRzQ29sbGlkZXIodGhpcy5nYW1lT2JqZWN0LCAnZW5lbXknKTtcbiAgICB0aGlzLmJ1bGxldHNTdG9yZSA9IG5ldyBCdWxsZXRzU3RvcmUoKTtcbiAgICB0aGlzLmxhc3RBdHRhY2tUaW1lID0gRGF0ZS5ub3coKSAtIFBMQVlFUl9BVFRBQ0tfREVMQVk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAnYmVmb3JlLXBsYXlpbmcnO1xuICAgIHRoaXMuaGVhbHRoID0gaGVhbHRoO1xuICB9XG5cbiAgcHVibGljIHByb2Nlc3NNb3ZlbWVudCgpIHtcbiAgICB0aGlzLmdhbWVPYmplY3Quc3BlZWQgPSBIZWxwZXIuZ2V0U3BlZWRCeUtleWJvYXJkc0tleXMoXG4gICAgICB0aGlzLmdhbWVPYmplY3QsXG4gICAgICB0aGlzLmtleWJvYXJkQ29udHJvbGxlclxuICAgICk7XG4gICAgdGhpcy5nYW1lT2JqZWN0Lm1vdmUoKTtcbiAgfVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMuZ2FtZU9iamVjdCk7XG4gIH1cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge1xuICAgIHRoaXMuYnVsbGV0c0NvbGxpZGVyLnRyeVRvQ29sbGlkZSgoKSA9PiB7XG4gICAgICB0aGlzLmhlYWx0aCAtPSAxO1xuXG4gICAgICBpZiAodGhpcy5oZWFsdGgpIHtcbiAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZy1hZnRlci1kYW1hZ2UnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAnYmVmb3JlLWRlYWQnO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHB1YmxpYyBhdHRhY2soKSB7XG4gICAgY29uc3QgY3VycmVudFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IHJlYWR5VG9BdHRhY2sgPVxuICAgICAgY3VycmVudFRpbWUgPiB0aGlzLmxhc3RBdHRhY2tUaW1lICsgUExBWUVSX0FUVEFDS19ERUxBWTtcblxuICAgIGlmIChyZWFkeVRvQXR0YWNrICYmIHRoaXMua2V5Ym9hcmRDb250cm9sbGVyLmlzQWN0aXZlS2V5KEtFWV9BVFRBQ0spKSB7XG4gICAgICB0aGlzLmxhc3RBdHRhY2tUaW1lID0gY3VycmVudFRpbWU7XG4gICAgICB0aGlzLmJ1bGxldHNTdG9yZS5hZGRFbGVtZW50KFxuICAgICAgICBuZXcgQnVsbGV0KCdwbGF5ZXInLCB0aGlzLmdhbWVPYmplY3QucG9pbnQuY2xvbmUoKSwgbmV3IFNwZWVkKDAsIC00KSlcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBQbGF5ZXJTdGF0ZSBmcm9tICcuL1BsYXllclN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmVmb3JlUGxheWluZ1N0YXRlIGV4dGVuZHMgUGxheWVyU3RhdGUge1xuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAnYmVmb3JlLXBsYXlpbmcnO1xuICB9XG5cbiAgcHVibGljIHByb2Nlc3NNb3ZlbWVudCgpIHt9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7fVxuICBwdWJsaWMgcmVnaXN0ZXJEYW1hZ2UoKSB7fVxuICBwdWJsaWMgYXR0YWNrKCkge31cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcblxuaW1wb3J0IFBsYXllclN0YXRlIGZyb20gJy4vUGxheWVyU3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5aW5nU3RhdGUgZXh0ZW5kcyBQbGF5ZXJTdGF0ZSB7XG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QsIGhlYWx0aDogbnVtYmVyKSB7XG4gICAgc3VwZXIoZ2FtZU9iamVjdCwgaGVhbHRoKTtcbiAgICB0aGlzLnN0YXRlTmFtZSA9ICdwbGF5aW5nJztcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7XG4gICAgc3VwZXIucHJvY2Vzc01vdmVtZW50KCk7XG4gIH1cbiAgcHVibGljIGFkZFRvTmV4dFJlbmRlcigpIHtcbiAgICBzdXBlci5hZGRUb05leHRSZW5kZXIoKTtcbiAgfVxuICBwdWJsaWMgcmVnaXN0ZXJEYW1hZ2UoKSB7XG4gICAgc3VwZXIucmVnaXN0ZXJEYW1hZ2UoKTtcbiAgfVxuICBwdWJsaWMgYXR0YWNrKCkge1xuICAgIHN1cGVyLmF0dGFjaygpO1xuICB9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBQbGF5ZXJTdGF0ZSBmcm9tICcuL1BsYXllclN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUgZXh0ZW5kcyBQbGF5ZXJTdGF0ZSB7XG4gIHByaXZhdGUgc3RhdGljIE1BWF9GUkFNRVNfQkVGT1JFX1RPR0dMRV9JU19JTlZJU0lCTEVfUExBWUVSID0gNTtcbiAgcHJpdmF0ZSBmcmFtZXNDb3VudDogbnVtYmVyO1xuICBwcml2YXRlIGlzSW52aXNpYmxlUGxheWVyOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QsIGhlYWx0aDogbnVtYmVyKSB7XG4gICAgc3VwZXIoZ2FtZU9iamVjdCwgaGVhbHRoKTtcbiAgICB0aGlzLnN0YXRlTmFtZSA9ICdwbGF5aW5nLWFmdGVyLWRhbWFnZSc7XG4gICAgdGhpcy5mcmFtZXNDb3VudCA9IDA7XG4gICAgdGhpcy5pc0ludmlzaWJsZVBsYXllciA9IHRydWU7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge1xuICAgIHN1cGVyLnByb2Nlc3NNb3ZlbWVudCgpO1xuICB9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7XG4gICAgaWYgKCF0aGlzLmlzSW52aXNpYmxlUGxheWVyKSB7XG4gICAgICBzdXBlci5hZGRUb05leHRSZW5kZXIoKTtcbiAgICB9XG5cbiAgICB0aGlzLmZyYW1lc0NvdW50Kys7XG5cbiAgICBpZiAoXG4gICAgICB0aGlzLmZyYW1lc0NvdW50ID49XG4gICAgICBQbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZS5NQVhfRlJBTUVTX0JFRk9SRV9UT0dHTEVfSVNfSU5WSVNJQkxFX1BMQVlFUlxuICAgICkge1xuICAgICAgdGhpcy5pc0ludmlzaWJsZVBsYXllciA9ICF0aGlzLmlzSW52aXNpYmxlUGxheWVyO1xuICAgICAgdGhpcy5mcmFtZXNDb3VudCA9IDA7XG4gICAgfVxuICB9XG4gIHB1YmxpYyByZWdpc3RlckRhbWFnZSgpIHt9XG4gIHB1YmxpYyBhdHRhY2soKSB7fVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgUGxheWVyU3RhdGUgZnJvbSAnLi9QbGF5ZXJTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJlZm9yZURlYWRTdGF0ZSBleHRlbmRzIFBsYXllclN0YXRlIHtcbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcihnYW1lT2JqZWN0LCBoZWFsdGgpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1kZWFkJztcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7fVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge31cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge31cbiAgcHVibGljIGF0dGFjaygpIHt9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBQbGF5ZXJTdGF0ZSBmcm9tICcuL1BsYXllclN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGVhZFN0YXRlIGV4dGVuZHMgUGxheWVyU3RhdGUge1xuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAnZGVhZCc7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge31cbiAgcHVibGljIGFkZFRvTmV4dFJlbmRlcigpIHt9XG4gIHB1YmxpYyByZWdpc3RlckRhbWFnZSgpIHt9XG4gIHB1YmxpYyBhdHRhY2soKSB7fVxufVxuIiwiaW1wb3J0IHsgUExBWUVSX0FGVEVSX0RBTUFHRV9EVVJBVElPTiwgUExBWUVSX01BWF9IRUFMVEggfSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCB7IFBsYXllclN0YXRlTmFtZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0ICogYXMgSGVscGVyIGZyb20gJy4vaGVscGVyJztcbmltcG9ydCBQbGF5ZXJTdGF0ZSBmcm9tICcuL1BsYXllclN0YXRlJztcbmltcG9ydCBCZWZvcmVQbGF5aW5nU3RhdGUgZnJvbSAnLi9CZWZvcmVQbGF5aW5nU3RhdGUnO1xuaW1wb3J0IFBsYXlpbmdTdGF0ZSBmcm9tICcuL1BsYXlpbmdTdGF0ZSc7XG5pbXBvcnQgUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUgZnJvbSAnLi9QbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZSc7XG5pbXBvcnQgQmVmb3JlRGVhZFN0YXRlIGZyb20gJy4vQmVmb3JlRGVhZFN0YXRlJztcbmltcG9ydCBEZWFkU3RhdGUgZnJvbSAnLi9EZWFkU3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXIge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogUGxheWVyO1xuICBwcml2YXRlIHRpbWVyOiBOb2RlSlMuVGltZW91dDtcbiAgcHJpdmF0ZSBzdGF0ZTogUGxheWVyU3RhdGU7XG4gIHByaXZhdGUgZ2FtZU9iamVjdDogR2FtZU9iamVjdDtcbiAgcHJpdmF0ZSBzdGF0ZU5hbWVCZWZvcmU6IFBsYXllclN0YXRlTmFtZTtcbiAgcHJpdmF0ZSBpbm5lckhlYWx0aDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghUGxheWVyLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLnRpbWVyID0gbnVsbDtcbiAgICAgIHRoaXMuaW5uZXJIZWFsdGggPSBQTEFZRVJfTUFYX0hFQUxUSDtcbiAgICAgIHRoaXMuZ2FtZU9iamVjdCA9IEhlbHBlci5jcmVhdGVJbml0aWFsR2FtZU9iamVjdCgpO1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSAnYmVmb3JlLXBsYXlpbmcnO1xuICAgICAgUGxheWVyLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gUGxheWVyLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGluaXQoKSB7XG4gICAgdGhpcy5pbm5lckhlYWx0aCA9IFBMQVlFUl9NQVhfSEVBTFRIO1xuICAgIHRoaXMuZ2FtZU9iamVjdCA9IEhlbHBlci5jcmVhdGVJbml0aWFsR2FtZU9iamVjdCgpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ3BsYXlpbmcnO1xuICB9XG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5zdGF0ZS5wcm9jZXNzTW92ZW1lbnQoKTtcbiAgICB0aGlzLnN0YXRlLmFkZFRvTmV4dFJlbmRlcigpO1xuICAgIHRoaXMuc3RhdGUucmVnaXN0ZXJEYW1hZ2UoKTtcbiAgICB0aGlzLnN0YXRlLmF0dGFjaygpO1xuICAgIHRoaXMuYXBwbHlOZXdIZWFsdGgoKTtcbiAgICB0aGlzLmFwcGx5TmV3U3RhdGUoKTtcbiAgfVxuXG4gIHByaXZhdGUgYXBwbHlOZXdTdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5zdGF0ZU5hbWUgIT09IHRoaXMuc3RhdGVOYW1lQmVmb3JlKSB7XG4gICAgICB0aGlzLnN0YXRlTmFtZUJlZm9yZSA9IHRoaXMuc3RhdGUuc3RhdGVOYW1lO1xuICAgICAgdGhpcy5zdGF0ZU5hbWUgPSB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcbiAgICB9XG4gIH1cbiAgcHJpdmF0ZSBhcHBseU5ld0hlYWx0aCgpIHtcbiAgICB0aGlzLmlubmVySGVhbHRoID0gdGhpcy5zdGF0ZS5oZWFsdGg7XG4gIH1cblxuICBnZXQgaGVhbHRoKCkge1xuICAgIHJldHVybiB0aGlzLmlubmVySGVhbHRoO1xuICB9XG4gIHByaXZhdGUgZ2V0IHN0YXRlTmFtZSgpOiBQbGF5ZXJTdGF0ZU5hbWUge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnN0YXRlTmFtZSA/PyAnYmVmb3JlLXBsYXlpbmcnO1xuICB9XG4gIHByaXZhdGUgc2V0IHN0YXRlTmFtZShuZXdTdGF0ZTogUGxheWVyU3RhdGVOYW1lKSB7XG4gICAgc3dpdGNoIChuZXdTdGF0ZSkge1xuICAgICAgY2FzZSAnYmVmb3JlLXBsYXlpbmcnOiB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgQmVmb3JlUGxheWluZ1N0YXRlKHRoaXMuZ2FtZU9iamVjdCwgdGhpcy5pbm5lckhlYWx0aCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAncGxheWluZyc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBQbGF5aW5nU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdwbGF5aW5nLWFmdGVyLWRhbWFnZSc6IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZyc7XG4gICAgICAgIH0sIFBMQVlFUl9BRlRFUl9EQU1BR0VfRFVSQVRJT04pO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdiZWZvcmUtZGVhZCc6IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAnZGVhZCc7XG4gICAgICAgIH0sIDApO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgQmVmb3JlRGVhZFN0YXRlKHRoaXMuZ2FtZU9iamVjdCwgdGhpcy5pbm5lckhlYWx0aCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnZGVhZCc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBEZWFkU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgQnVsbGV0IGZyb20gJ34vY29tcG9uZW50cy9CdWxsZXQnO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IFNwZWVkIGZyb20gJ34vc3RydWN0cy9TcGVlZCc7XG5pbXBvcnQgUG9pbnQgZnJvbSAnfi9zdHJ1Y3RzL1BvaW50JztcbmltcG9ydCBTaXplIGZyb20gJ34vc3RydWN0cy9TaXplJztcbmltcG9ydCBlbmVteVBuZyBmcm9tICd+L2Fzc2V0cy9pbWcvc3BpZGVyLnBuZyc7XG5pbXBvcnQge1xuICBFTkVNWV9JTklUSUFMX1BPSU5ULFxuICBFTkVNWV9JTklUSUFMX1NJWkUsXG4gIEVORU1ZX0lOSVRJQUxfU1BFRUQsXG4gIEVORU1ZX0xFRlRfQk9SREVSLFxuICBFTkVNWV9SSUdIVF9CT1JERVIsXG4gIEdBTUVfV0lORE9XX1dJRFRILFxufSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgekluZGV4IGZyb20gJ34vekluZGV4JztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUJ1bGxldCA9IChlbmVteVBvaW50OiBQb2ludCwgZW5lbXlTaXplOiBTaXplKSA9PiB7XG4gIGNvbnN0IHBvaW50ID0gbmV3IFBvaW50KGVuZW15UG9pbnQueCArIGVuZW15U2l6ZS53aWR0aCAvIDIsIGVuZW15UG9pbnQueSArIGVuZW15U2l6ZS5oZWlnaHQpO1xuXG4gIGNvbnN0IHNwZWVkID0gbmV3IFNwZWVkKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSAtIDUsIDMpO1xuXG4gIHJldHVybiBuZXcgQnVsbGV0KCdlbmVteScsIHBvaW50LCBzcGVlZCk7XG59O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlSW5pdGlhbEdhbWVPYmplY3QgPSAoKSA9PiB7XG4gIHJldHVybiBuZXcgR2FtZU9iamVjdChcbiAgICBFTkVNWV9JTklUSUFMX1BPSU5ULmNsb25lKCksXG4gICAgRU5FTVlfSU5JVElBTF9TSVpFLmNsb25lKCksXG4gICAgYHVybCgke2VuZW15UG5nfSlgLFxuICAgIHpJbmRleC5lbmVteVN0YXRlLFxuICAgIEVORU1ZX0lOSVRJQUxfU1BFRUQuY2xvbmUoKVxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFNwZWVkID0gKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QpID0+IHtcbiAgY29uc3QgbmVlZFByZXZlbnRMZWZ0ID0gZ2FtZU9iamVjdC5wb2ludC54IDw9IEVORU1ZX0xFRlRfQk9SREVSO1xuXG4gIGxldCBzcGVlZFggPSBnYW1lT2JqZWN0LnNwZWVkLng7XG5cbiAgaWYgKG5lZWRQcmV2ZW50TGVmdCkge1xuICAgIHNwZWVkWCA9IE1hdGguYWJzKHNwZWVkWCk7XG4gICAgcmV0dXJuIG5ldyBTcGVlZChzcGVlZFgsIGdhbWVPYmplY3Quc3BlZWQueSk7XG4gIH1cblxuICBjb25zdCBuZWVkUHJldmVudFJpZ2h0ID0gZ2FtZU9iamVjdC5wb2ludC54ID49IEdBTUVfV0lORE9XX1dJRFRIIC0gRU5FTVlfUklHSFRfQk9SREVSIC0gZ2FtZU9iamVjdC5zaXplLndpZHRoO1xuXG4gIGlmIChuZWVkUHJldmVudFJpZ2h0KSB7XG4gICAgc3BlZWRYID0gLU1hdGguYWJzKHNwZWVkWCk7XG4gICAgcmV0dXJuIG5ldyBTcGVlZChzcGVlZFgsIGdhbWVPYmplY3Quc3BlZWQueSk7XG4gIH1cblxuICByZXR1cm4gZ2FtZU9iamVjdC5zcGVlZDtcbn07XG4iLCJpbXBvcnQgeyBFTkVNWV9BVFRBQ0tfREVMQVksIEVORU1ZX1JFQ0VJVklOR19EQU1BR0UgfSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5pbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IEJ1bGxldHNDb2xsaWRlciBmcm9tICd+L2NvbGxpZGVycy9CdWxsZXRzQ29sbGlkZXInO1xuaW1wb3J0IEJ1bGxldHNTdG9yZSBmcm9tICd+L3N0b3Jlcy9CdWxsZXRzU3RvcmUnO1xuXG5pbXBvcnQgKiBhcyBIZWxwZXIgZnJvbSAnLi9oZWxwZXInO1xuaW1wb3J0IHsgRW5lbXlTdGF0ZU5hbWUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgRW5lbXlTdGF0ZSB7XG4gIHByb3RlY3RlZCBnYW1lT2JqZWN0OiBHYW1lT2JqZWN0O1xuICBwcm90ZWN0ZWQgdmlydHVhbERPTTogVmlydHVhbERPTTtcbiAgcHJvdGVjdGVkIGJ1bGxldHNDb2xsaWRlcjogQnVsbGV0c0NvbGxpZGVyO1xuICBwcm90ZWN0ZWQgYnVsbGV0c1N0b3JlOiBCdWxsZXRzU3RvcmU7XG4gIHByb3RlY3RlZCBsYXN0QXR0YWNrVGltZTogbnVtYmVyO1xuXG4gIHB1YmxpYyBoZWFsdGg6IG51bWJlcjtcbiAgcHVibGljIHN0YXRlTmFtZTogRW5lbXlTdGF0ZU5hbWU7XG5cbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICB0aGlzLmdhbWVPYmplY3QgPSBnYW1lT2JqZWN0O1xuICAgIHRoaXMudmlydHVhbERPTSA9IG5ldyBWaXJ0dWFsRE9NKCk7XG4gICAgdGhpcy5idWxsZXRzQ29sbGlkZXIgPSBuZXcgQnVsbGV0c0NvbGxpZGVyKHRoaXMuZ2FtZU9iamVjdCwgJ3BsYXllcicpO1xuICAgIHRoaXMuYnVsbGV0c1N0b3JlID0gbmV3IEJ1bGxldHNTdG9yZSgpO1xuICAgIHRoaXMubGFzdEF0dGFja1RpbWUgPSBEYXRlLm5vdygpIC0gRU5FTVlfQVRUQUNLX0RFTEFZO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1wbGF5aW5nJztcbiAgICB0aGlzLmhlYWx0aCA9IGhlYWx0aDtcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7XG4gICAgdGhpcy5nYW1lT2JqZWN0LnNwZWVkID0gSGVscGVyLmdldFNwZWVkKHRoaXMuZ2FtZU9iamVjdCk7XG4gICAgdGhpcy5nYW1lT2JqZWN0Lm1vdmUoKTtcbiAgfVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMuZ2FtZU9iamVjdCk7XG4gIH1cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge1xuICAgIHRoaXMuYnVsbGV0c0NvbGxpZGVyLnRyeVRvQ29sbGlkZSgoKSA9PiB7XG4gICAgICB0aGlzLmhlYWx0aCAtPSBFTkVNWV9SRUNFSVZJTkdfREFNQUdFO1xuXG4gICAgICBpZiAodGhpcy5oZWFsdGgpIHtcbiAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZy1hZnRlci1kYW1hZ2UnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAnYmVmb3JlLWRlYWQnO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHB1YmxpYyBhdHRhY2soKSB7XG4gICAgY29uc3QgY3VycmVudFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IHJlYWR5VG9BdHRhY2sgPVxuICAgICAgY3VycmVudFRpbWUgPiB0aGlzLmxhc3RBdHRhY2tUaW1lICsgRU5FTVlfQVRUQUNLX0RFTEFZO1xuXG4gICAgaWYgKHJlYWR5VG9BdHRhY2spIHtcbiAgICAgIHRoaXMubGFzdEF0dGFja1RpbWUgPSBjdXJyZW50VGltZTtcbiAgICAgIHRoaXMuYnVsbGV0c1N0b3JlLmFkZEVsZW1lbnQoXG4gICAgICAgIEhlbHBlci5jcmVhdGVCdWxsZXQodGhpcy5nYW1lT2JqZWN0LnBvaW50LCB0aGlzLmdhbWVPYmplY3Quc2l6ZSlcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBFbmVteVN0YXRlIGZyb20gJy4vRW5lbXlTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJlZm9yZVBsYXlpbmdTdGF0ZSBleHRlbmRzIEVuZW15U3RhdGUge1xuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAnYmVmb3JlLXBsYXlpbmcnO1xuICB9XG5cbiAgcHVibGljIHByb2Nlc3NNb3ZlbWVudCgpIHt9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7fVxuICBwdWJsaWMgcmVnaXN0ZXJEYW1hZ2UoKSB7fVxuICBwdWJsaWMgYXR0YWNrKCkge31cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcblxuaW1wb3J0IEVuZW15U3RhdGUgZnJvbSAnLi9FbmVteVN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWluZ1N0YXRlIGV4dGVuZHMgRW5lbXlTdGF0ZSB7XG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QsIGhlYWx0aDogbnVtYmVyKSB7XG4gICAgc3VwZXIoZ2FtZU9iamVjdCwgaGVhbHRoKTtcbiAgICB0aGlzLnN0YXRlTmFtZSA9ICdwbGF5aW5nJztcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7XG4gICAgc3VwZXIucHJvY2Vzc01vdmVtZW50KCk7XG4gIH1cbiAgcHVibGljIGFkZFRvTmV4dFJlbmRlcigpIHtcbiAgICBzdXBlci5hZGRUb05leHRSZW5kZXIoKTtcbiAgfVxuICBwdWJsaWMgcmVnaXN0ZXJEYW1hZ2UoKSB7XG4gICAgc3VwZXIucmVnaXN0ZXJEYW1hZ2UoKTtcbiAgfVxuICBwdWJsaWMgYXR0YWNrKCkge1xuICAgIHN1cGVyLmF0dGFjaygpO1xuICB9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBFbmVteVN0YXRlIGZyb20gJy4vRW5lbXlTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXlpbmdBZnRlckRhbWFnZVN0YXRlIGV4dGVuZHMgRW5lbXlTdGF0ZSB7XG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QsIGhlYWx0aDogbnVtYmVyKSB7XG4gICAgc3VwZXIoZ2FtZU9iamVjdCwgaGVhbHRoKTtcbiAgICB0aGlzLnN0YXRlTmFtZSA9ICdwbGF5aW5nLWFmdGVyLWRhbWFnZSc7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge1xuICAgIHN1cGVyLnByb2Nlc3NNb3ZlbWVudCgpO1xuICB9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7XG4gICAgc3VwZXIuYWRkVG9OZXh0UmVuZGVyKCk7XG4gIH1cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge1xuICAgIHN1cGVyLnJlZ2lzdGVyRGFtYWdlKCk7XG4gIH1cbiAgcHVibGljIGF0dGFjaygpIHtcbiAgICBzdXBlci5hdHRhY2soKTtcbiAgfVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgRW5lbXlTdGF0ZSBmcm9tICcuL0VuZW15U3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCZWZvcmVEZWFkU3RhdGUgZXh0ZW5kcyBFbmVteVN0YXRlIHtcbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcihnYW1lT2JqZWN0LCBoZWFsdGgpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1kZWFkJztcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7fVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge31cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge31cbiAgcHVibGljIGF0dGFjaygpIHt9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBFbmVteVN0YXRlIGZyb20gJy4vRW5lbXlTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlYWRTdGF0ZSBleHRlbmRzIEVuZW15U3RhdGUge1xuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAnZGVhZCc7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge31cbiAgcHVibGljIGFkZFRvTmV4dFJlbmRlcigpIHt9XG4gIHB1YmxpYyByZWdpc3RlckRhbWFnZSgpIHt9XG4gIHB1YmxpYyBhdHRhY2soKSB7fVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IHsgRU5FTVlfQUZURVJfREFNQUdFX0RVUkFUSU9OLCBFTkVNWV9NQVhfSEVBTFRIIH0gZnJvbSAnfi9jb25zdHMnO1xuXG5pbXBvcnQgKiBhcyBIZWxwZXIgZnJvbSAnLi9oZWxwZXInO1xuaW1wb3J0IHsgRW5lbXlTdGF0ZU5hbWUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBFbmVteVN0YXRlIGZyb20gJy4vRW5lbXlTdGF0ZSc7XG5pbXBvcnQgQmVmb3JlUGxheWluZ1N0YXRlIGZyb20gJy4vQmVmb3JlUGxheWluZ1N0YXRlJztcbmltcG9ydCBQbGF5aW5nU3RhdGUgZnJvbSAnLi9QbGF5aW5nU3RhdGUnO1xuaW1wb3J0IFBsYXlpbmdBZnRlckRhbWFnZVN0YXRlIGZyb20gJy4vUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUnO1xuaW1wb3J0IEJlZm9yZURlYWRTdGF0ZSBmcm9tICcuL0JlZm9yZURlYWRTdGF0ZSc7XG5pbXBvcnQgRGVhZFN0YXRlIGZyb20gJy4vRGVhZFN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW5lbXkge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogRW5lbXk7XG4gIHByaXZhdGUgZ2FtZU9iamVjdDogR2FtZU9iamVjdDtcbiAgcHJpdmF0ZSB0aW1lcjogTm9kZUpTLlRpbWVvdXQ7XG4gIHByaXZhdGUgc3RhdGU6IEVuZW15U3RhdGU7XG4gIHByaXZhdGUgc3RhdGVOYW1lQmVmb3JlOiBFbmVteVN0YXRlTmFtZTtcbiAgcHJpdmF0ZSBpbm5lckhlYWx0aDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghRW5lbXkuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMuZ2FtZU9iamVjdCA9IEhlbHBlci5jcmVhdGVJbml0aWFsR2FtZU9iamVjdCgpO1xuICAgICAgdGhpcy5pbm5lckhlYWx0aCA9IEVORU1ZX01BWF9IRUFMVEg7XG4gICAgICB0aGlzLnN0YXRlID0gbmV3IEJlZm9yZVBsYXlpbmdTdGF0ZSh0aGlzLmdhbWVPYmplY3QsIHRoaXMuaW5uZXJIZWFsdGgpO1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcbiAgICAgIHRoaXMudGltZXIgPSBudWxsO1xuXG4gICAgICBFbmVteS5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIEVuZW15Lmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGluaXQoKSB7XG4gICAgdGhpcy5pbm5lckhlYWx0aCA9IEVORU1ZX01BWF9IRUFMVEg7XG4gICAgdGhpcy5nYW1lT2JqZWN0ID0gSGVscGVyLmNyZWF0ZUluaXRpYWxHYW1lT2JqZWN0KCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZyc7XG4gIH1cbiAgcHVibGljIGRvRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLnN0YXRlLnByb2Nlc3NNb3ZlbWVudCgpO1xuICAgIHRoaXMuc3RhdGUuYWRkVG9OZXh0UmVuZGVyKCk7XG4gICAgdGhpcy5zdGF0ZS5yZWdpc3RlckRhbWFnZSgpO1xuICAgIHRoaXMuc3RhdGUuYXR0YWNrKCk7XG4gICAgdGhpcy5hcHBseU5ld0hlYWx0aCgpO1xuICAgIHRoaXMuYXBwbHlOZXdTdGF0ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhcHBseU5ld1N0YXRlKCkge1xuICAgIGlmICh0aGlzLnN0YXRlTmFtZSAhPT0gdGhpcy5zdGF0ZU5hbWVCZWZvcmUpIHtcbiAgICAgIHRoaXMuc3RhdGVOYW1lQmVmb3JlID0gdGhpcy5zdGF0ZS5zdGF0ZU5hbWU7XG4gICAgICB0aGlzLnN0YXRlTmFtZSA9IHRoaXMuc3RhdGUuc3RhdGVOYW1lO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYXBwbHlOZXdIZWFsdGgoKSB7XG4gICAgdGhpcy5pbm5lckhlYWx0aCA9IHRoaXMuc3RhdGUuaGVhbHRoO1xuICB9XG5cbiAgZ2V0IGhlYWx0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lckhlYWx0aDtcbiAgfVxuICBwcml2YXRlIGdldCBzdGF0ZU5hbWUoKTogRW5lbXlTdGF0ZU5hbWUge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcbiAgfVxuICBwcml2YXRlIHNldCBzdGF0ZU5hbWUobmV3U3RhdGU6IEVuZW15U3RhdGVOYW1lKSB7XG4gICAgc3dpdGNoIChuZXdTdGF0ZSkge1xuICAgICAgY2FzZSAnYmVmb3JlLXBsYXlpbmcnOiB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAncGxheWluZyc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBQbGF5aW5nU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdwbGF5aW5nLWFmdGVyLWRhbWFnZSc6IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ3NvbWUgYWN0aW9uIGFmdGVyIGRhbWFnZScpO1xuICAgICAgICAgIHRoaXMuc3RhdGVOYW1lID0gJ3BsYXlpbmcnO1xuICAgICAgICB9LCBFTkVNWV9BRlRFUl9EQU1BR0VfRFVSQVRJT04pO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdiZWZvcmUtZGVhZCc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBCZWZvcmVEZWFkU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAnZGVhZCc7XG4gICAgICAgIH0sIEVORU1ZX0FGVEVSX0RBTUFHRV9EVVJBVElPTik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnZGVhZCc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBEZWFkU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5pbXBvcnQgRW5lbXkgZnJvbSAnfi9jb21wb25lbnRzL0VuZW15JztcbmltcG9ydCBQbGF5ZXIgZnJvbSAnfi9jb21wb25lbnRzL1BsYXllcic7XG5pbXBvcnQgUG9pbnQgZnJvbSAnfi9zdHJ1Y3RzL1BvaW50JztcbmltcG9ydCBTaXplIGZyb20gJ34vc3RydWN0cy9TaXplJztcbmltcG9ydCBWaXJ0dWFsRE9NIGZyb20gJ34vVmlydHVhbERPTSc7XG5pbXBvcnQge1xuICBHQU1FX1dJTkRPV19XSURUSCxcbiAgUExBWUVSX01BWF9IRUFMVEgsXG4gIEVORU1ZX01BWF9IRUFMVEgsXG4gIFBMQVlFUl9IRUFMVEhfSUNPTl9TSVpFLFxuICBMSUZFQkFSX0hFSUdIVCxcbiAgTElGRUJBUl9DT0xPUixcbiAgTElGRUJBUl9FTkVNWV9FTVBUWV9IRUFMVEhfQ09MT1IsXG4gIExJRkVCQVJfRU5FTVlfRlVMTF9IRUFMVEhfQ09MT1IsXG59IGZyb20gJ34vY29uc3RzJztcbmltcG9ydCB6SW5kZXggZnJvbSAnfi96SW5kZXgnO1xuaW1wb3J0IGxpZmVJY29uIGZyb20gJ34vYXNzZXRzL2ltZy9saWZlLnBuZyc7XG5pbXBvcnQgbm9MaWZlSWNvbiBmcm9tICd+L2Fzc2V0cy9pbWcvbm9saWZlLnBuZyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpZmViYXIge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogTGlmZWJhcjtcbiAgcHJpdmF0ZSByZWFkb25seSBlbXB0eUJhcjogR2FtZU9iamVjdDtcbiAgcHJpdmF0ZSByZWFkb25seSBlbmVteUVtcHR5SGVhbHRoOiBHYW1lT2JqZWN0O1xuICBwcml2YXRlIHJlYWRvbmx5IGVuZW15SGVhbHRoOiBHYW1lT2JqZWN0O1xuICBwcml2YXRlIGhlYWx0aHM6IEdhbWVPYmplY3RbXTtcbiAgcHJpdmF0ZSBlbmVteTogRW5lbXk7XG4gIHByaXZhdGUgcGxheWVyOiBQbGF5ZXI7XG4gIHByaXZhdGUgdmlydHVhbERPTTogVmlydHVhbERPTTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIUxpZmViYXIuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMuZW5lbXkgPSBuZXcgRW5lbXkoKTtcbiAgICAgIHRoaXMucGxheWVyID0gbmV3IFBsYXllcigpO1xuICAgICAgdGhpcy52aXJ0dWFsRE9NID0gbmV3IFZpcnR1YWxET00oKTtcbiAgICAgIHRoaXMuZW1wdHlCYXIgPSBuZXcgR2FtZU9iamVjdChcbiAgICAgICAgbmV3IFBvaW50KDAsIDApLFxuICAgICAgICBuZXcgU2l6ZShHQU1FX1dJTkRPV19XSURUSCwgTElGRUJBUl9IRUlHSFQpLFxuICAgICAgICBMSUZFQkFSX0NPTE9SLFxuICAgICAgICB6SW5kZXgubGlmZWJhci5lbXB0eUxpZmViYXJcbiAgICAgICk7XG4gICAgICB0aGlzLmVuZW15RW1wdHlIZWFsdGggPSBuZXcgR2FtZU9iamVjdChcbiAgICAgICAgbmV3IFBvaW50KDAsIDApLFxuICAgICAgICBuZXcgU2l6ZShFTkVNWV9NQVhfSEVBTFRILCBMSUZFQkFSX0hFSUdIVCksXG4gICAgICAgIExJRkVCQVJfRU5FTVlfRU1QVFlfSEVBTFRIX0NPTE9SLFxuICAgICAgICB6SW5kZXgubGlmZWJhci5lbmVteUVtcHR5SGVhbHRoXG4gICAgICApO1xuICAgICAgdGhpcy5lbmVteUhlYWx0aCA9IG5ldyBHYW1lT2JqZWN0KFxuICAgICAgICBuZXcgUG9pbnQoMCwgMCksXG4gICAgICAgIG5ldyBTaXplKHRoaXMuZW5lbXkuaGVhbHRoLCBMSUZFQkFSX0hFSUdIVCksXG4gICAgICAgIExJRkVCQVJfRU5FTVlfRlVMTF9IRUFMVEhfQ09MT1IsXG4gICAgICAgIHpJbmRleC5saWZlYmFyLmVuZW15SGVhbHRoXG4gICAgICApO1xuXG4gICAgICBjb25zdCBPRkZTRVQgPSB7IHg6IDEsIHk6IDEgfTtcbiAgICAgIHRoaXMuaGVhbHRocyA9IFtdO1xuXG4gICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBQTEFZRVJfTUFYX0hFQUxUSDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGlzTGlmZSA9IHRoaXMucGxheWVyLmhlYWx0aCA+PSBpO1xuICAgICAgICBjb25zdCBwb2ludCA9IG5ldyBQb2ludChcbiAgICAgICAgICBHQU1FX1dJTkRPV19XSURUSCAtIChPRkZTRVQueCArIFBMQVlFUl9IRUFMVEhfSUNPTl9TSVpFLndpZHRoKSAqIGksXG4gICAgICAgICAgT0ZGU0VULnlcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLmhlYWx0aHMucHVzaChcbiAgICAgICAgICBuZXcgR2FtZU9iamVjdChcbiAgICAgICAgICAgIHBvaW50LFxuICAgICAgICAgICAgUExBWUVSX0hFQUxUSF9JQ09OX1NJWkUsXG4gICAgICAgICAgICBgdXJsKCR7aXNMaWZlID8gbGlmZUljb24gOiBub0xpZmVJY29ufSlgLFxuICAgICAgICAgICAgekluZGV4LmxpZmViYXIucGxheWVySGVhbHRoXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICBMaWZlYmFyLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gTGlmZWJhci5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5hZGRUb1JlbmRlckVtcHR5QmFyKCk7XG4gICAgdGhpcy5hZGRUb1JlbmRlckVuZW15RW1wdHlIZWFsdGgoKTtcbiAgICB0aGlzLmFkZFRvUmVuZGVyRW5lbXlIZWFsdGgoKTtcbiAgICB0aGlzLmFkZFRvUmVuZGVyUGxheWVySGVhbHRoKCk7XG4gIH1cblxuICBwcml2YXRlIGFkZFRvUmVuZGVyRW1wdHlCYXIoKSB7XG4gICAgdGhpcy52aXJ0dWFsRE9NLmFkZEVsZW1lbnQodGhpcy5lbXB0eUJhcik7XG4gIH1cblxuICBwcml2YXRlIGFkZFRvUmVuZGVyRW5lbXlFbXB0eUhlYWx0aCgpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudCh0aGlzLmVuZW15RW1wdHlIZWFsdGgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhZGRUb1JlbmRlckVuZW15SGVhbHRoKCkge1xuICAgIHRoaXMuZW5lbXlIZWFsdGguc2l6ZSA9IG5ldyBTaXplKHRoaXMuZW5lbXkuaGVhbHRoLCBMSUZFQkFSX0hFSUdIVCk7XG5cbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudCh0aGlzLmVuZW15SGVhbHRoKTtcbiAgfVxuXG4gIHByaXZhdGUgYWRkVG9SZW5kZXJQbGF5ZXJIZWFsdGgoKSB7XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gUExBWUVSX01BWF9IRUFMVEg7IGkrKykge1xuICAgICAgY29uc3QgaXNMaWZlID0gdGhpcy5wbGF5ZXIuaGVhbHRoID49IGk7XG5cbiAgICAgIHRoaXMuaGVhbHRoc1tpIC0gMV0uYmFja2dyb3VuZCA9IGB1cmwoJHtpc0xpZmUgPyBsaWZlSWNvbiA6IG5vTGlmZUljb259KWA7XG4gICAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudCh0aGlzLmhlYWx0aHNbaSAtIDFdKTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBSZW5kZXJBUEkgZnJvbSAnfi9SZW5kZXJBUEknO1xuaW1wb3J0IGdldFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSS9nZXRSZW5kZXJBUEknO1xuaW1wb3J0IFZpcnR1YWxET00gZnJvbSAnfi9WaXJ0dWFsRE9NJztcblxuaW1wb3J0IHsgQXBwU3RhdGVOYW1lIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIEFwcFN0YXRlIHtcbiAgcHJpdmF0ZSByZW5kZXJBUEk6IFJlbmRlckFQSTtcbiAgcHJpdmF0ZSB2aXJ0dWFsRE9NOiBWaXJ0dWFsRE9NO1xuXG4gIHB1YmxpYyBzdGF0ZU5hbWU6IEFwcFN0YXRlTmFtZTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnJlbmRlckFQSSA9IGdldFJlbmRlckFQSSgpO1xuICAgIHRoaXMudmlydHVhbERPTSA9IG5ldyBWaXJ0dWFsRE9NKCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAnbWVudSc7XG4gIH1cblxuICBwdWJsaWMgYWJzdHJhY3QgZG9GcmFtZUJlaGF2aW9yKCk6IHZvaWQ7XG5cbiAgcHJvdGVjdGVkIHJlbmRlcigpIHtcbiAgICB0aGlzLnJlbmRlckFQSS5yZW5kZXIodGhpcy52aXJ0dWFsRE9NLmdldENoYW5nZXMoKSk7XG4gICAgdGhpcy52aXJ0dWFsRE9NLnByZXBhcmVGb3JOZXdGcmFtZSgpO1xuICB9XG59XG4iLCJpbXBvcnQgUGxheWVyIGZyb20gJ34vY29tcG9uZW50cy9QbGF5ZXInO1xuaW1wb3J0IEVuZW15IGZyb20gJ34vY29tcG9uZW50cy9FbmVteSc7XG5pbXBvcnQgTGlmZWJhciBmcm9tICd+L2NvbXBvbmVudHMvTGlmZWJhcic7XG5pbXBvcnQgS2V5Ym9hcmQgZnJvbSAnfi9jb250cm9sbGVycy9LZXlib2FyZCc7XG5pbXBvcnQgQnVsbGV0c1N0b3JlIGZyb20gJ34vc3RvcmVzL0J1bGxldHNTdG9yZSc7XG5pbXBvcnQgeyBLRVlfUEFVU0UsIERFRkFVTFRfREVCT1VOQ0UgfSBmcm9tICd+L2NvbnN0cyc7XG5cbmltcG9ydCBBcHBTdGF0ZSBmcm9tICcuJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWluZ1N0YXRlIGV4dGVuZHMgQXBwU3RhdGUge1xuICBwcml2YXRlIHBsYXllcjogUGxheWVyO1xuICBwcml2YXRlIGVuZW15OiBFbmVteTtcbiAgcHJpdmF0ZSBidWxsZXRzU3RvcmU6IEJ1bGxldHNTdG9yZTtcbiAgcHJpdmF0ZSBsaWZlYmFyOiBMaWZlYmFyO1xuICBwcml2YXRlIGtleWJvYXJkOiBLZXlib2FyZDtcblxuICBwcml2YXRlIGlzUGF1c2U6IGJvb2xlYW47XG4gIHByaXZhdGUgaXNSZWFkeVRvQ2hhbmdlSXNQYXVzZTogYm9vbGVhbjtcbiAgcHJpdmF0ZSB0aW1lck9mSXNQYXVzZTogTm9kZUpTLlRpbWVvdXQ7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnBsYXllciA9IG5ldyBQbGF5ZXIoKTtcbiAgICB0aGlzLmVuZW15ID0gbmV3IEVuZW15KCk7XG4gICAgdGhpcy5idWxsZXRzU3RvcmUgPSBuZXcgQnVsbGV0c1N0b3JlKCk7XG4gICAgdGhpcy5saWZlYmFyID0gbmV3IExpZmViYXIoKTtcblxuICAgIHRoaXMua2V5Ym9hcmQgPSBuZXcgS2V5Ym9hcmQoKTtcbiAgICB0aGlzLmlzUGF1c2UgPSBmYWxzZTtcbiAgICB0aGlzLmlzUmVhZHlUb0NoYW5nZUlzUGF1c2UgPSB0cnVlO1xuICAgIHRoaXMudGltZXJPZklzUGF1c2UgPSBudWxsO1xuXG4gICAgdGhpcy5wbGF5ZXIuaW5pdCgpO1xuICAgIHRoaXMuZW5lbXkuaW5pdCgpO1xuICB9XG5cbiAgcHVibGljIGRvRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLnByb2Nlc3NQYXVzZUNvbnRyb2xsZXIoKTtcblxuICAgIGlmICh0aGlzLmlzUGF1c2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmRvQnVsbGV0c0ZyYW1lQmVoYXZpb3IoKTtcbiAgICB0aGlzLnBsYXllci5kb0ZyYW1lQmVoYXZpb3IoKTtcbiAgICB0aGlzLmVuZW15LmRvRnJhbWVCZWhhdmlvcigpO1xuICAgIHRoaXMubGlmZWJhci5kb0ZyYW1lQmVoYXZpb3IoKTtcblxuICAgIHN1cGVyLnJlbmRlcigpO1xuICB9XG5cbiAgcHJpdmF0ZSBwcm9jZXNzUGF1c2VDb250cm9sbGVyKCkge1xuICAgIGlmICh0aGlzLmtleWJvYXJkLmlzQWN0aXZlS2V5KEtFWV9QQVVTRSkpIHtcbiAgICAgIGlmICh0aGlzLmlzUmVhZHlUb0NoYW5nZUlzUGF1c2UpIHtcbiAgICAgICAgdGhpcy5pc1BhdXNlID0gIXRoaXMuaXNQYXVzZTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pc1JlYWR5VG9DaGFuZ2VJc1BhdXNlID0gZmFsc2U7XG5cbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyT2ZJc1BhdXNlKTtcbiAgICAgIHRoaXMudGltZXJPZklzUGF1c2UgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5pc1JlYWR5VG9DaGFuZ2VJc1BhdXNlID0gdHJ1ZTtcbiAgICAgIH0sIERFRkFVTFRfREVCT1VOQ0UpO1xuICAgIH1cbiAgfVxuICBwcml2YXRlIGRvQnVsbGV0c0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5idWxsZXRzU3RvcmUucmVtb3ZlQnVsbGV0c091dHNpZGVTY3JlZW4oKTtcbiAgICB0aGlzLmJ1bGxldHNTdG9yZS5idWxsZXRzLmZvckVhY2goKGJ1bGxldCkgPT4ge1xuICAgICAgYnVsbGV0LmRvRnJhbWVCZWhhdmlvcigpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgQXBwU3RhdGUgZnJvbSAnLic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lbnVTdGF0ZSBleHRlbmRzIEFwcFN0YXRlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgc3VwZXIucmVuZGVyKCk7XG4gIH1cbn1cbiIsImltcG9ydCBBcHBTdGF0ZSBmcm9tICcuJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2V0dGluZ3NTdGF0ZSBleHRlbmRzIEFwcFN0YXRlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgc3VwZXIucmVuZGVyKCk7XG4gIH1cbn1cbiIsImltcG9ydCAnfi9pbmRleC5jc3MnO1xuaW1wb3J0ICd+L2Fzc2V0cy9mb250cy9zdHlsZXNoZWV0LmNzcyc7XG5pbXBvcnQgQXBwIGZyb20gJ34vQXBwJztcblxuY29uc3QgYXBwID0gbmV3IEFwcCgpO1xuXG5hcHAuc3RhcnQoKTtcbiIsImltcG9ydCBSZW5kZXJBUEkgZnJvbSAnfi9SZW5kZXJBUEknO1xuaW1wb3J0IGdldFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSS9nZXRSZW5kZXJBUEknO1xuXG5pbXBvcnQgR2FtZUxvb3AgZnJvbSAnLi9HYW1lTG9vcCc7XG5pbXBvcnQgR2FtZVdpbmRvdyBmcm9tICcuL0dhbWVXaW5kb3cnO1xuaW1wb3J0IEFwcFN0YXRlIGZyb20gJy4vQXBwU3RhdGUnO1xuaW1wb3J0IHsgQXBwU3RhdGVOYW1lIH0gZnJvbSAnLi9BcHBTdGF0ZS90eXBlcyc7XG5pbXBvcnQgUGxheWluZ1N0YXRlIGZyb20gJy4vQXBwU3RhdGUvUGxheWluZ1N0YXRlJztcbmltcG9ydCBNZW51U3RhdGUgZnJvbSAnLi9BcHBTdGF0ZS9NZW51U3RhdGUnO1xuaW1wb3J0IFNldHRpbmdzU3RhdGUgZnJvbSAnLi9BcHBTdGF0ZS9TZXR0aW5nc1N0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEFwcDtcbiAgcHJpdmF0ZSByZW5kZXJBUEk6IFJlbmRlckFQSTtcbiAgcHJpdmF0ZSBnYW1lTG9vcDogR2FtZUxvb3A7XG5cbiAgcHJpdmF0ZSBzdGF0ZTogQXBwU3RhdGU7XG4gIHByaXZhdGUgc3RhdGVOYW1lQmVmb3JlOiBBcHBTdGF0ZU5hbWU7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFBcHAuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMucmVuZGVyQVBJID0gZ2V0UmVuZGVyQVBJKCk7XG4gICAgICB0aGlzLmdhbWVMb29wID0gbmV3IEdhbWVMb29wKCk7XG5cbiAgICAgIHRoaXMuc3RhdGVOYW1lID0gJ3BsYXlpbmcnO1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcblxuICAgICAgQXBwLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gQXBwLmluc3RhbmNlO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXQgc3RhdGVOYW1lKCk6IEFwcFN0YXRlTmFtZSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUuc3RhdGVOYW1lO1xuICB9XG4gIHByaXZhdGUgc2V0IHN0YXRlTmFtZShuZXdTdGF0ZTogQXBwU3RhdGVOYW1lKSB7XG4gICAgc3dpdGNoIChuZXdTdGF0ZSkge1xuICAgICAgY2FzZSAncGxheWluZyc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBQbGF5aW5nU3RhdGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdzZXR0aW5ncyc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBNZW51U3RhdGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdtZW51Jzoge1xuICAgICAgICB0aGlzLnN0YXRlID0gbmV3IFNldHRpbmdzU3RhdGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXJ0KCkge1xuICAgIGNvbnN0IGdhbWVXaW5kb3cgPSBuZXcgR2FtZVdpbmRvdyh0aGlzLnJlbmRlckFQSSk7XG5cbiAgICBnYW1lV2luZG93LnJlbmRlcigpO1xuXG4gICAgdGhpcy5nYW1lTG9vcC5zdGFydCgoKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlLmRvRnJhbWVCZWhhdmlvcigpO1xuICAgICAgdGhpcy5hcHBseU5ld1N0YXRlKCk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGFwcGx5TmV3U3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGVOYW1lICE9PSB0aGlzLnN0YXRlTmFtZUJlZm9yZSkge1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcbiAgICAgIHRoaXMuc3RhdGVOYW1lID0gdGhpcy5zdGF0ZS5zdGF0ZU5hbWU7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF81X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF84X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMThfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDdfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiaGFzaCIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF82X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF85X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yM19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yNl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yOV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zOF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80MV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80N19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81M19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81Nl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNThfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81OV9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0IiwidGFnTmFtZSIsInRvVXBwZXJDYXNlIiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJuYyIsImxvY2FscyIsIlJPT1RfSUQiLCJHQU1FX1dJTkRPV19JRCIsIlJlbmRlckFQSSIsImluc3RhbmNlIiwieCIsInkiLCJjbG9uZSIsIlBvaW50IiwidmFsdWVPZiIsIndpZHRoIiwiaGVpZ2h0IiwiU2l6ZSIsIlNwZWVkIiwiR0FNRV9XSU5ET1dfV0lEVEgiLCJQTEFZRVJfSU5JVElBTF9QT0lOVCIsIlBMQVlFUl9JTklUSUFMX1NJWkUiLCJQTEFZRVJfSU5JVElBTF9TUEVFRCIsIkVORU1ZX0lOSVRJQUxfUE9JTlQiLCJFTkVNWV9JTklUSUFMX1NJWkUiLCJFTkVNWV9JTklUSUFMX1NQRUVEIiwiUExBWUVSX0hFQUxUSF9JQ09OX1NJWkUiLCJCVUxMRVRfU0laRSIsIktFWV9UT1AiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiS0VZX0xFRlQiLCJLRVlfQk9UVE9NIiwiS0VZX1JJR0hUIiwiS0VZX0FUVEFDSyIsIktFWV9QQVVTRSIsImNvbnNvbGUiLCJsb2ciLCJyb290Q1NTIiwid2luZG93Q1NTIiwiYWRkSWQiLCJJU19URVNUX01PREUiLCJkYXRhc2V0IiwidGVzdGlkIiwiY3JlYXRlV2luZG93Iiwicm9vdCIsImdldEVsZW1lbnRCeUlkIiwibmFtZSIsImdhbWVPYmplY3QiLCJpbm5lckVsZW1lbnQiLCJzZXRFbGVtZW50IiwiaHRtbCIsImFwcGx5QWN0dWFsQ2hhbmdlIiwicG9pbnQiLCJzaXplIiwiYmFja2dyb3VuZCIsInpJbmRleCIsImVsZW1lbnRzTWFwIiwid2luZG93Tm9kZSIsInJlbmRlckdhbWVXaW5kb3ciLCJib2R5IiwiY2xlYXJBbGwiLCJpbm5lckhUTUwiLCJyZW5kZXIiLCJjaGFuZ2VzIiwiZm9yRWFjaCIsImNoYW5nZSIsImFjdGlvbiIsIm1vdW50IiwidW5tb3VudCIsInZpZXciLCJuZXdWaWV3Iiwib2xkVmlldyIsImdldFJlbmRlckFQSSIsInR5cGUiLCJSRU5ERVJfQVBJIiwiZnJhbWVEdXJhdGlvbiIsIkdhbWVMb29wIiwibGFzdEZyYW1lVGltZSIsIkRhdGUiLCJub3ciLCJzdGFydCIsImZuIiwibG9vcCIsImN1cnJlbnRUaW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicmVuZGVyQVBJIiwiR2FtZVdpbmRvdyIsImRlc3Ryb3kiLCJoYW5kbGVFcnJvcnNGb3JEZXN0cm95IiwibGFzdFVuaXF1ZUlkIiwiYW1vdW50R2l2ZW5TYW1lSWQiLCJzcGVlZCIsIm1vdmUiLCJHYW1lT2JqZWN0IiwiY3JlYXRlSW5pdGlhbEdhbWVPYmplY3QiLCJWaXJ0dWFsRE9NIiwicHJldkVsZW1lbnRzIiwibmV4dEVsZW1lbnRzIiwiYWRkRWxlbWVudCIsInByZXBhcmVGb3JOZXdGcmFtZSIsImNsb25lTmV4dEVsZW1lbnRzSW50b1ByZXZFbGVtZW50cyIsImdldENoYW5nZXMiLCJhbGxJZHMiLCJnZXRBbGxJZHNGcm9tTWFwcyIsImdldENoYW5nZUZvckVsZW1lbnRCeUlkIiwiYWxsSWRzU2V0IiwiU2V0IiwiYWRkIiwicHJldkVsZW1lbnQiLCJuZXh0RWxlbWVudCIsImlzRWxlbWVudFVwZGF0ZWQiLCJwcm9wS2V5IiwidmlydHVhbERPTSIsIkJ1bGxldCIsImNyZWF0ZUluaXRpYWxTcHJpdGUiLCJkb0ZyYW1lQmVoYXZpb3IiLCJwcm9jZXNzTW92ZW1lbnQiLCJhZGRUb05leHRSZW5kZXIiLCJLZXlib2FyZCIsImtleXMiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiZGVsZXRlIiwiaXNBY3RpdmVLZXkiLCJoYXMiLCJCdWxsZXRzU3RvcmUiLCJpbm5lckJ1bGxldHMiLCJyZW1vdmVCdWxsZXRzT3V0c2lkZVNjcmVlbiIsImZpbHRlciIsImJ1bGxldCIsInJlbW92ZUVsZW1lbnQiLCJpbm5lckJ1bGxldCIsImJ1bGxldFR5cGUiLCJidWxsZXRzU3RvcmUiLCJ0cnlUb0NvbGxpZGUiLCJhY3Rpb25XaGVuQ29sbGlkZSIsImJ1bGxldHMiLCJvYmoxIiwib2JqMiIsImxlZnQxIiwicmlnaHQxIiwibGVmdDIiLCJyaWdodDIiLCJ0b3AxIiwiYm90dG9tMSIsInRvcDIiLCJib3R0b20yIiwiaGVhbHRoIiwia2V5Ym9hcmRDb250cm9sbGVyIiwiYnVsbGV0c0NvbGxpZGVyIiwibGFzdEF0dGFja1RpbWUiLCJzdGF0ZU5hbWUiLCJrZXlib2FyZCIsIm5lZWRQcmV2ZW50VG9wIiwibmVlZFByZXZlbnRMZWZ0IiwibmVlZFByZXZlbnRCb3R0b20iLCJuZWVkUHJldmVudFJpZ2h0Iiwic3BlZWRYIiwic3BlZWRZIiwicmVnaXN0ZXJEYW1hZ2UiLCJhdHRhY2siLCJmcmFtZXNDb3VudCIsImlzSW52aXNpYmxlUGxheWVyIiwiUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUiLCJNQVhfRlJBTUVTX0JFRk9SRV9UT0dHTEVfSVNfSU5WSVNJQkxFX1BMQVlFUiIsIlBsYXllciIsInRpbWVyIiwiaW5uZXJIZWFsdGgiLCJzdGF0ZU5hbWVCZWZvcmUiLCJpbml0Iiwic3RhdGUiLCJhcHBseU5ld0hlYWx0aCIsImFwcGx5TmV3U3RhdGUiLCJuZXdTdGF0ZSIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJNYXRoIiwiYWJzIiwiZW5lbXlQb2ludCIsImVuZW15U2l6ZSIsImZsb29yIiwicmFuZG9tIiwiRW5lbXkiLCJMaWZlYmFyIiwiZW5lbXkiLCJwbGF5ZXIiLCJlbXB0eUJhciIsImVuZW15RW1wdHlIZWFsdGgiLCJlbmVteUhlYWx0aCIsIk9GRlNFVCIsImhlYWx0aHMiLCJpc0xpZmUiLCJhZGRUb1JlbmRlckVtcHR5QmFyIiwiYWRkVG9SZW5kZXJFbmVteUVtcHR5SGVhbHRoIiwiYWRkVG9SZW5kZXJFbmVteUhlYWx0aCIsImFkZFRvUmVuZGVyUGxheWVySGVhbHRoIiwibGlmZWJhciIsImlzUGF1c2UiLCJpc1JlYWR5VG9DaGFuZ2VJc1BhdXNlIiwidGltZXJPZklzUGF1c2UiLCJwcm9jZXNzUGF1c2VDb250cm9sbGVyIiwiZG9CdWxsZXRzRnJhbWVCZWhhdmlvciIsIkFwcCIsImdhbWVMb29wIl0sInNvdXJjZVJvb3QiOiIifQ==
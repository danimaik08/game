(()=>{"use strict";var e={5124:(e,t,n)=>{n.d(t,{A:()=>lt});var o=n(1354),r=n.n(o),i=n(6314),s=n.n(i),a=n(4417),c=n.n(a),p=new URL(n(1960),n.b),l=new URL(n(4436),n.b),u=new URL(n(6434),n.b),f=new URL(n(6402),n.b),d=new URL(n(8298),n.b),h=new URL(n(7038),n.b),m=new URL(n(8516),n.b),y=new URL(n(5844),n.b),b=new URL(n(6170),n.b),g=new URL(n(7294),n.b),w=new URL(n(4388),n.b),_=new URL(n(5972),n.b),A=new URL(n(3689),n.b),v=new URL(n(3265),n.b),R=new URL(n(5361),n.b),E=new URL(n(643),n.b),O=new URL(n(1889),n.b),T=new URL(n(2985),n.b),C=new URL(n(6681),n.b),I=new URL(n(6747),n.b),x=new URL(n(8698),n.b),B=new URL(n(7486),n.b),S=new URL(n(9012),n.b),k=new URL(n(1380),n.b),M=new URL(n(8796),n.b),N=new URL(n(6576),n.b),P=new URL(n(7830),n.b),U=new URL(n(8262),n.b),j=new URL(n(4498),n.b),D=new URL(n(374),n.b),L=new URL(n(5516),n.b),F=new URL(n(4604),n.b),K=new URL(n(6490),n.b),H=new URL(n(910),n.b),G=new URL(n(6980),n.b),z=new URL(n(740),n.b),$=new URL(n(8833),n.b),V=new URL(n(7081),n.b),q=new URL(n(7385),n.b),W=new URL(n(3691),n.b),X=new URL(n(4759),n.b),Z=new URL(n(1919),n.b),Y=new URL(n(255),n.b),J=new URL(n(2553),n.b),Q=new URL(n(8146),n.b),ee=new URL(n(1302),n.b),te=new URL(n(8332),n.b),ne=new URL(n(9964),n.b),oe=s()(r()),re=c()(p),ie=c()(p,{hash:"?#iefix"}),se=c()(l),ae=c()(u),ce=c()(f),pe=c()(d),le=c()(d,{hash:"?#iefix"}),ue=c()(h),fe=c()(m),de=c()(y),he=c()(b),me=c()(b,{hash:"?#iefix"}),ye=c()(g),be=c()(w),ge=c()(_),we=c()(A),_e=c()(A,{hash:"?#iefix"}),Ae=c()(v),ve=c()(R),Re=c()(E),Ee=c()(O),Oe=c()(O,{hash:"?#iefix"}),Te=c()(T),Ce=c()(C),Ie=c()(I),xe=c()(x),Be=c()(x,{hash:"?#iefix"}),Se=c()(B),ke=c()(S),Me=c()(k),Ne=c()(M),Pe=c()(M,{hash:"?#iefix"}),Ue=c()(N),je=c()(P),De=c()(U),Le=c()(j),Fe=c()(j,{hash:"?#iefix"}),Ke=c()(D),He=c()(L),Ge=c()(F),ze=c()(K),$e=c()(K,{hash:"?#iefix"}),Ve=c()(H),qe=c()(G),We=c()(z),Xe=c()($),Ze=c()($,{hash:"?#iefix"}),Ye=c()(V),Je=c()(q),Qe=c()(W),et=c()(X),tt=c()(X,{hash:"?#iefix"}),nt=c()(Z),ot=c()(Y),rt=c()(J),it=c()(Q),st=c()(Q,{hash:"?#iefix"}),at=c()(ee),ct=c()(te),pt=c()(ne);oe.push([e.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${re});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${ie}) format('embedded-opentype'),\n        url(${se}) format('woff2'),\n        url(${ae}) format('woff'),\n        url(${ce}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${pe});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${le}) format('embedded-opentype'),\n        url(${ue}) format('woff2'),\n        url(${fe}) format('woff'),\n        url(${de}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${he});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${me}) format('embedded-opentype'),\n        url(${ye}) format('woff2'),\n        url(${be}) format('woff'),\n        url(${ge}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${we});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${_e}) format('embedded-opentype'),\n        url(${Ae}) format('woff2'),\n        url(${ve}) format('woff'),\n        url(${Re}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ee});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${Oe}) format('embedded-opentype'),\n        url(${Te}) format('woff2'),\n        url(${Ce}) format('woff'),\n        url(${Ie}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${xe});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Be}) format('embedded-opentype'),\n        url(${Se}) format('woff2'),\n        url(${ke}) format('woff'),\n        url(${Me}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ne});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${Pe}) format('embedded-opentype'),\n        url(${Ue}) format('woff2'),\n        url(${je}) format('woff'),\n        url(${De}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Le});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${Fe}) format('embedded-opentype'),\n        url(${Ke}) format('woff2'),\n        url(${He}) format('woff'),\n        url(${Ge}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ze});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${$e}) format('embedded-opentype'),\n        url(${Ve}) format('woff2'),\n        url(${qe}) format('woff'),\n        url(${We}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Xe});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Ze}) format('embedded-opentype'),\n        url(${Ye}) format('woff2'),\n        url(${Je}) format('woff'),\n        url(${Qe}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${et});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${tt}) format('embedded-opentype'),\n        url(${nt}) format('woff2'),\n        url(${ot}) format('woff'),\n        url(${rt}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${it});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${st}) format('embedded-opentype'),\n        url(${at}) format('woff2'),\n        url(${ct}) format('woff'),\n        url(${pt}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/assets/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const lt=oe},6523:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(1354),r=n.n(o),i=n(6314),s=n.n(i)()(r());s.push([e.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const a=s},6314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var p=0;p<e.length;p++){var l=[].concat(e[p]);o&&s[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},4417:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},1354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},5072:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},s=[],a=0;a<e.length;a++){var c=e[a],p=o.base?c[0]+o.base:c[0],l=i[p]||0,u="".concat(p," ").concat(l);i[p]=l+1;var f=n(u),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)t[f].references++,t[f].updater(d);else{var h=r(d,o);o.byIndex=a,t.splice(a,0,{identifier:u,updater:h,references:1})}s.push(u)}return s}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var a=n(i[s]);t[a].references--}for(var c=o(e,r),p=0;p<i.length;p++){var l=n(i[p]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},7659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},5056:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},1113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},8796:(e,t,n)=>{e.exports=n.p+"d747b63eb41cdc64e3dd.eot"},8262:(e,t,n)=>{e.exports=n.p+"8e5479279b074720e15f.ttf"},7830:(e,t,n)=>{e.exports=n.p+"88d7f1b3ca9a9494d8e3.woff"},6576:(e,t,n)=>{e.exports=n.p+"ae0c1d409f7d45d81c29.woff2"},1960:(e,t,n)=>{e.exports=n.p+"32f9679ea3ede2ca14de.eot"},6402:(e,t,n)=>{e.exports=n.p+"508cb30d2090ab879d2f.ttf"},6434:(e,t,n)=>{e.exports=n.p+"3123587706218b4d8187.woff"},4436:(e,t,n)=>{e.exports=n.p+"71b2b84d5d1a55271b57.woff2"},8298:(e,t,n)=>{e.exports=n.p+"6490694b37b0ee09bd91.eot"},5844:(e,t,n)=>{e.exports=n.p+"5e9f6556d3c0bf6230f0.ttf"},8516:(e,t,n)=>{e.exports=n.p+"3f2cbde6b72e8d05669f.woff"},7038:(e,t,n)=>{e.exports=n.p+"6cd35edfbc0d7a417131.woff2"},6170:(e,t,n)=>{e.exports=n.p+"e5f75ce1f7e72a64d436.eot"},5972:(e,t,n)=>{e.exports=n.p+"1e46c5294501ef46e23b.ttf"},4388:(e,t,n)=>{e.exports=n.p+"997a1e8970d2b7e50fff.woff"},7294:(e,t,n)=>{e.exports=n.p+"74126ecd07ad0d25d3f6.woff2"},4759:(e,t,n)=>{e.exports=n.p+"7588d6373c3525bc74cd.eot"},2553:(e,t,n)=>{e.exports=n.p+"4302c2e2c9e789c4c7ea.ttf"},255:(e,t,n)=>{e.exports=n.p+"0d0bf30e7eeb4f6e7fd5.woff"},1919:(e,t,n)=>{e.exports=n.p+"007ccbd3e8708c6afef8.woff2"},8833:(e,t,n)=>{e.exports=n.p+"d592a653abb7a57fedd8.eot"},3691:(e,t,n)=>{e.exports=n.p+"13d61ef8e609b548d9b5.ttf"},7385:(e,t,n)=>{e.exports=n.p+"df0f59d80526acc6d0cd.woff"},7081:(e,t,n)=>{e.exports=n.p+"d537674e9e217fa53a13.woff2"},3689:(e,t,n)=>{e.exports=n.p+"0ad9ca04101ace1b39d1.eot"},643:(e,t,n)=>{e.exports=n.p+"ca7144f68f54653d3728.ttf"},5361:(e,t,n)=>{e.exports=n.p+"3c494714cdd1de859813.woff"},3265:(e,t,n)=>{e.exports=n.p+"6006fa5b67e554e06562.woff2"},8146:(e,t,n)=>{e.exports=n.p+"f9f0c87146a33023da7e.eot"},9964:(e,t,n)=>{e.exports=n.p+"ef677e217f2009c16854.ttf"},8332:(e,t,n)=>{e.exports=n.p+"b14ca2d2b289afceb0b0.woff"},1302:(e,t,n)=>{e.exports=n.p+"fc0337b9cf1cce2e6e1e.woff2"},4498:(e,t,n)=>{e.exports=n.p+"c000f0984de5d20c8eab.eot"},4604:(e,t,n)=>{e.exports=n.p+"ff1379d2f5bd26261cb2.ttf"},5516:(e,t,n)=>{e.exports=n.p+"9a91a0398c5cb21f0199.woff"},374:(e,t,n)=>{e.exports=n.p+"ace58ae211415a1f378b.woff2"},1889:(e,t,n)=>{e.exports=n.p+"30b57652c88c5dbd65de.eot"},6747:(e,t,n)=>{e.exports=n.p+"25e40da956314b12d333.ttf"},6681:(e,t,n)=>{e.exports=n.p+"31012f9b3e3da44f87e8.woff"},2985:(e,t,n)=>{e.exports=n.p+"a25806274237d06e00a6.woff2"},6490:(e,t,n)=>{e.exports=n.p+"ae807ad4142f3eae2e0c.eot"},740:(e,t,n)=>{e.exports=n.p+"7d12c80b1925091e4fec.ttf"},6980:(e,t,n)=>{e.exports=n.p+"674b1d2bd9d781457c17.woff"},910:(e,t,n)=>{e.exports=n.p+"0b33782009e32497dba2.woff2"},8698:(e,t,n)=>{e.exports=n.p+"bc4d192a93ba33f68109.eot"},1380:(e,t,n)=>{e.exports=n.p+"491dd1cc3dfda2b79d09.ttf"},9012:(e,t,n)=>{e.exports=n.p+"d5937d18c46d7ae260b6.woff"},7486:(e,t,n)=>{e.exports=n.p+"3669a8fac8736f85a7f1.woff2"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0;var o=n(5072),r=n.n(o),i=n(7825),s=n.n(i),a=n(7659),c=n.n(a),p=n(5056),l=n.n(p),u=n(540),f=n.n(u),d=n(1113),h=n.n(d),m=n(6523),y={};y.styleTagTransform=h(),y.setAttributes=l(),y.insert=c().bind(null,"head"),y.domAPI=s(),y.insertStyleElement=f(),r()(m.A,y),m.A&&m.A.locals&&m.A.locals;var b=n(5124),g={};g.styleTagTransform=h(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=f(),r()(b.A,g),b.A&&b.A.locals&&b.A.locals;var w="root",_="game-window";const A=function(){},v=function(){function e(e,t){this.x=e,this.y=t}return e.prototype.clone=function(){return new e(this.x,this.y)},e.prototype.valueOf=function(){return this.x+" "+this.y},e}(),R=function(){function e(e,t){this.width=e,this.height=t}return e.prototype.clone=function(){return new e(this.width,this.height)},e.prototype.valueOf=function(){return this.width+" "+this.height},e}(),E=function(){function e(e,t){this.x=e,this.y=t}return e.prototype.clone=function(){return new e(this.x,this.y)},e.prototype.valueOf=function(){return this.x+" "+this.y},e}();var O=800,T=new v(380,500),C=new R(34,47),I=new E(0,0),x=new v(350,50),B=new R(100,100),S=new E(4,0),k=new R(30,27),M=new R(14,14),N="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),P="\n  width: ".concat(O,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n  cursor: default;\n");function U(e,t){e.id=t,{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(e.dataset.testid=t)}function j(){var e=document.getElementById(w);if(!e)throw new Error('BrowserAPI Error: method "'.concat(j.name,'" - root not found'));var t=document.createElement("div");U(t,_),t.setAttribute("style",P),e.appendChild(t)}const D=function(){function e(e){this.gameObject=e,this.innerElement=null}return Object.defineProperty(e.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),e.prototype.createElement=function(){this.innerElement=document.createElement("div")},e.prototype.setElement=function(e){this.innerElement=e},e.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css),this.element.innerHTML=this.gameObject.text},Object.defineProperty(e.prototype,"css",{get:function(){var e=this.gameObject,t=e.point,n=e.size,o=e.background,r=e.textColor,i=e.zIndex;return"\n    position: absolute;\n    top: ".concat(t.y,"px;\n    left: ").concat(t.x,"px;\n    z-index: ").concat(i,";\n    width: ").concat(n.width,"px;\n    height: ").concat(n.height,"px;\n    background: ").concat(o,";\n    color: ").concat(r,";\n    ")},enumerable:!1,configurable:!0}),e}();var L,F=(L=function(e,t){return L=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},L(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}L(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});const K=function(e){function t(){var n=e.call(this)||this;return n.elementsMap={},t.instance||(t.instance=n),t.instance}return F(t,e),Object.defineProperty(t.prototype,"window",{get:function(){var e=document.getElementById(_);if(!e)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return e},enumerable:!1,configurable:!0}),t.prototype.renderGameWindow=function(){var e,t;e=document.querySelector("body"),U(t=document.createElement("div"),w),t.setAttribute("style",N),e.appendChild(t),j()},t.prototype.clearAll=function(){document.body.innerHTML=""},t.prototype.render=function(e){var t=this;e.forEach((function(e){switch(e.action){case"mount":t.mount(e.gameObject);break;case"unmount":t.unmount(e.gameObject);break;case"update":t.update(e.gameObject)}}))},t.prototype.mount=function(e){var t=new D(e);t.createElement(),t.applyActualChange(),this.window.appendChild(t.element),this.elementsMap[t.id]=t},t.prototype.update=function(e){var t=new D(e),n=this.elementsMap[e.id];t.setElement(n.element),t.applyActualChange(),this.window.appendChild(t.element),this.elementsMap[e.id]=t},t.prototype.unmount=function(e){this.elementsMap[e.id].element.remove(),delete this.elementsMap[e.id]},t.instance=null,t}(A);var H=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const G=function(e){function t(){return e.call(this)||this}return H(t,e),t.prototype.renderGameWindow=function(){console.log("renderGameWindow")},t.prototype.clearAll=function(){console.log("clearAll")},t.prototype.render=function(e){console.log("render")},t}(A);function z(){var e,t=null!==(e={TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==e?e:"browser";switch(t){case"browser":return new K;case"fake":return new G;default:throw new Error("Invalid env RENDER_API: ".concat(t))}}const $=function(){function e(t){return void 0===t&&(t=33),e.instance||(this.lastFrameTime=Date.now(),this.frameDuration=t,e.instance=this),e.instance}return e.prototype.start=function(e){var t=this,n=function(){var o=Date.now();t.lastFrameTime+t.frameDuration<=o&&(t.lastFrameTime=o,e()),requestAnimationFrame(n)};n()},e}(),V=function(){function e(t){return this.renderAPI=null,e.instance||(this.renderAPI=t,e.instance=this),e.instance}return e.prototype.render=function(){this.renderAPI.renderGameWindow()},e.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,e.instance=null},e.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},e.instance=null,e}();var q,W;const X=(q="",W=0,function(){var e=Date.now()+"";return q===e?(W++,q+" "+W):(q=e,e)}),Z=function(){function e(e){var t,n,o,r,i,s,a,c;this.id=null!==(t=null==e?void 0:e.id)&&void 0!==t?t:X(),this.point=null!==(n=null==e?void 0:e.point)&&void 0!==n?n:new v(0,0),this.size=null!==(o=null==e?void 0:e.size)&&void 0!==o?o:new R(1,1),this.speed=null!==(r=null==e?void 0:e.speed)&&void 0!==r?r:new E(0,0),this.zIndex=null!==(i=null==e?void 0:e.zIndex)&&void 0!==i?i:1,this.text=null!==(s=null==e?void 0:e.text)&&void 0!==s?s:"",this.textColor=null!==(a=null==e?void 0:e.textColor)&&void 0!==a?a:"#000",this.background=null!==(c=null==e?void 0:e.background)&&void 0!==c?c:"transparent"}return e.prototype.move=function(){this.point=new v(this.point.x+this.speed.x,this.point.y+this.speed.y)},e.prototype.clone=function(){return new e(this)},e}(),Y=n.p+"98ce5afade1e5dcf76f2.png",J=2,Q=2,ee=3,te={emptyLifebar:4,enemyEmptyHealth:5,enemyHealth:6,playerHealth:7},ne=4,oe=function(){function e(){return e.instance||(this.prevElements={},this.nextElements={},e.instance=this),e.instance}return e.prototype.addElement=function(e){this.nextElements[e.id]=e},e.prototype.prepareForNewFrame=function(){this.prevElements={},this.cloneNextElementsIntoPrevElements(),this.nextElements={}},e.prototype.getChanges=function(){var e=this,t=this.getAllIdsFromMaps(),n=[];return t.forEach((function(t){n.push(e.getChangeForElementById(t))})),n},e.prototype.destroy=function(){this.handleErrorsForDestroy(),this.prevElements=null,this.nextElements=null,e.instance=null},e.prototype.cloneNextElementsIntoPrevElements=function(){for(var e in this.nextElements)this.prevElements[e]=this.nextElements[e].clone()},e.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('VirtualDOM Error: called method "destroy" (which for tests only!) not in tests')},e.prototype.getAllIdsFromMaps=function(){var e=new Set;for(var t in this.prevElements)e.add(t);for(var t in this.nextElements)e.add(t);return e},e.prototype.getChangeForElementById=function(e){var t,n,o=null!==(t=this.prevElements[e])&&void 0!==t?t:null,r=null!==(n=this.nextElements[e])&&void 0!==n?n:null;return o?r?{gameObject:r,action:this.isElementUpdated(e)?"update":"not-a-change"}:{gameObject:o,action:"unmount"}:{gameObject:r,action:"mount"}},e.prototype.isElementUpdated=function(e){var t=this.prevElements[e],n=this.nextElements[e];for(var o in t){var r=o;if(t[r].valueOf()!==n[r].valueOf())return!0}return!1},e}(),re=n.p+"f6daa77bf4e4dd5f7f9f.png",ie=n.p+"51183ae04093a5b578b5.png",se=function(){function e(t,n,o){this.type=t,this.virtualDOM=new oe,this.gameObject=e.createInitialSprite(this.type,n,o)}return Object.defineProperty(e.prototype,"point",{get:function(){return this.gameObject.point},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"size",{get:function(){return this.gameObject.size},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),e.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},e.createInitialSprite=function(e,t,n){return new Z({point:t.clone(),size:M.clone(),speed:n.clone(),zIndex:ee,background:"url(".concat("enemy"===e?re:ie,")")})},e.prototype.processMovement=function(){this.gameObject.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},e}(),ae=function(){function e(){return e.instance||(this.innerBullets=[],e.instance=this),e.instance}return e.prototype.init=function(){this.innerBullets=[]},e.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(e){return!(e.point.x+e.size.width<0||e.point.x>O||e.point.y+e.size.height<0||e.point.y>600)}))},e.prototype.addElement=function(e){this.innerBullets.push(e)},e.prototype.removeElement=function(e){this.innerBullets=this.innerBullets.filter((function(t){return t.id!==e.id}))},Object.defineProperty(e.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),e}(),ce=function(){function e(e,t){this.target=e,this.bulletType=t,this.bulletsStore=new ae}return e.prototype.tryToCollide=function(e){var t=this;this.bulletsStore.bullets.forEach((function(n){t.bulletType===n.type&&function(e,t){var n=e.point.x,o=e.point.x+e.size.width,r=t.point.x,i=t.point.x+t.size.width;if(n>=r&&n<=i||o>=r&&o<=i){var s=e.point.y,a=e.point.y+e.size.height,c=t.point.y,p=t.point.y+t.size.height;if(s>=c&&s<=p||a>=c&&a<=p)return!0}return!1}(n,t.target)&&(e(),t.bulletsStore.removeElement(n))}))},e}(),pe=function(){function e(t){var n,o=this;return e.instance||(this.keys=new Set,this.keysConverter=null!==(n=null==t?void 0:t.keysConverter)&&void 0!==n?n:e.DEFAULT_KEYS_CONVERTER,e.instance=this,document.addEventListener("keydown",(function(e){var t=o.keysConverter(e.key);o.keys.add(t),o.innerLastKey=t})),document.addEventListener("keyup",(function(e){o.keys.delete(o.keysConverter(e.key))}))),e.instance}return e.prototype.isActiveKey=function(e){return this.keys.has(this.keysConverter(e))},Object.defineProperty(e.prototype,"lastKey",{get:function(){return this.innerLastKey},enumerable:!1,configurable:!0}),e.DEFAULT_KEYS_CONVERTER=function(e){return e},e}();var le=new Set(["ENTER","ESCAPE","ARROWUP","ARROWDOWN"]),ue={TOP:"W",LEFT:"A",BOTTOM:"S",RIGHT:"D",ATTACK:"K",PAUSE:"P"},fe="KeysStore_b3b5190a-3564-4911-b2e8-16c78102a4b0_";const de=function(){function e(){return e.instance||(e.instance=this),e.instance}return e.prototype.getKey=function(e){return le.has(e)?e:localStorage.getItem(fe+e)||ue[e]},e.prototype.setKey=function(e,t){localStorage.setItem(fe+e,t)},e}(),he=function(){function e(){}return e.prototype.convertKeyToEngFromSameButton=function(t){var n;return null!==(n=e.RUS_TO_ENG_KEYS_MAP[t])&&void 0!==n?n:t},e.RUS_TO_ENG_KEYS_MAP={Й:"Q",Ц:"W",У:"E",К:"R",Е:"T",Н:"Y",Г:"U",Ш:"I",Щ:"O",З:"P",Ф:"A",Ы:"S",В:"D",А:"F",П:"G",Р:"H",О:"J",Л:"K",Д:"L",Я:"Z",Ч:"X",С:"C",М:"V",И:"B",Т:"N",Ь:"M"},e}(),me=function(){function e(){if(!e.instance){var t=new he;this.keyboard=new pe({keysConverter:function(e){return t.convertKeyToEngFromSameButton(e.toUpperCase())}}),this.keysStore=new de,e.instance=this}return e.instance}return Object.defineProperty(e.prototype,"lastKey",{get:function(){return this.keyboard.lastKey},enumerable:!1,configurable:!0}),e.prototype.isActiveKey=function(e){return this.keyboard.isActiveKey(this.getKey(e))},e.prototype.getKey=function(e){return this.keysStore.getKey(e)},e.prototype.setKey=function(e,t){this.keysStore.setKey(e,t)},e}(),ye=function(){function e(e,t){this.keyboard=new me,this.gameObject=e,this.virtualDOM=new oe,this.bulletsCollider=new ce(this.gameObject,"enemy"),this.bulletsStore=new ae,this.lastAttackTime=Date.now()-500,this.stateName="before-playing",this.health=t}return e.prototype.processMovement=function(){this.gameObject.speed=function(e,t){var n=e.point.y<=350,o=e.point.x<=0,r=e.point.y>=600-e.size.height,i=e.point.x>=O-e.size.width,s=0,a=0;return t.isActiveKey("TOP")&&!n&&(a=-4),t.isActiveKey("LEFT")&&!o&&(s=-4),t.isActiveKey("BOTTOM")&&!r&&(a=4),t.isActiveKey("RIGHT")&&!i&&(s=4),new E(s,a)}(this.gameObject,this.keyboard),this.gameObject.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},e.prototype.registerDamage=function(){var e=this;this.bulletsCollider.tryToCollide((function(){e.health-=1,e.health?e.stateName="playing-after-damage":e.stateName="before-dead"}))},e.prototype.attack=function(){var e=Date.now();e>this.lastAttackTime+500&&this.keyboard.isActiveKey("ATTACK")&&(this.lastAttackTime=e,this.bulletsStore.addElement(new se("player",this.gameObject.point.clone(),new E(0,-4))))},e}();var be=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const ge=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="before-playing",o}return be(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(ye);var we=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const _e=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing",o}return we(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){e.prototype.addToNextRender.call(this)},t.prototype.registerDamage=function(){e.prototype.registerDamage.call(this)},t.prototype.attack=function(){e.prototype.attack.call(this)},t}(ye);var Ae=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const ve=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing-after-damage",o.framesCount=0,o.isInvisiblePlayer=!0,o}return Ae(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){this.isInvisiblePlayer||e.prototype.addToNextRender.call(this),this.framesCount++,this.framesCount>=t.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER&&(this.isInvisiblePlayer=!this.isInvisiblePlayer,this.framesCount=0)},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER=5,t}(ye);var Re=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Ee=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="before-dead",o}return Re(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(ye);var Oe=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Te=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="dead",o}return Oe(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(ye),Ce=function(){function e(){return e.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",e.instance=this),e.instance}return e.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=3,this.gameObject=new Z({point:T.clone(),size:C.clone(),speed:I.clone(),background:"url(".concat(Y,")"),zIndex:J}),this.stateName="playing"},e.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},e.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},e.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(e.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"stateName",{get:function(){var e;return null!==(e=this.state.stateName)&&void 0!==e?e:"before-playing"},set:function(e){var t=this;switch(clearTimeout(this.timer),e){case"before-playing":this.state=new ge(this.gameObject,this.innerHealth);break;case"playing":this.state=new _e(this.gameObject,this.innerHealth);break;case"playing-after-damage":this.timer=setTimeout((function(){t.stateName="playing"}),3e3),this.state=new ve(this.gameObject,this.innerHealth);break;case"before-dead":this.timer=setTimeout((function(){t.stateName="dead"}),0),this.state=new Ee(this.gameObject,this.innerHealth);break;case"dead":this.state=new Te(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),e}(),Ie=n.p+"49dc2035dd05181f3af7.png",xe=function(){function e(e,t){this.gameObject=e,this.virtualDOM=new oe,this.bulletsCollider=new ce(this.gameObject,"player"),this.bulletsStore=new ae,this.lastAttackTime=Date.now()-180,this.stateName="before-playing",this.health=t}return e.prototype.processMovement=function(){var e,t,n;this.gameObject.speed=(t=(e=this.gameObject).point.x<=50,n=e.speed.x,t?(n=Math.abs(n),new E(n,e.speed.y)):e.point.x>=750-e.size.width?(n=-Math.abs(n),new E(n,e.speed.y)):e.speed),this.gameObject.move()},e.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},e.prototype.registerDamage=function(){var e=this;this.bulletsCollider.tryToCollide((function(){e.health-=10,e.health?e.stateName="playing-after-damage":e.stateName="before-dead"}))},e.prototype.attack=function(){var e,t,n,o,r=Date.now();r>this.lastAttackTime+180&&(this.lastAttackTime=r,this.bulletsStore.addElement((e=this.gameObject.point,t=this.gameObject.size,n=new v(e.x+t.width/2,e.y+t.height),o=new E(Math.floor(10*Math.random())-5,3),new se("enemy",n,o))))},e}();var Be=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Se=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="before-playing",o}return Be(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(xe);var ke=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Me=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing",o}return ke(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){e.prototype.addToNextRender.call(this)},t.prototype.registerDamage=function(){e.prototype.registerDamage.call(this)},t.prototype.attack=function(){e.prototype.attack.call(this)},t}(xe);var Ne=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Pe=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="playing-after-damage",o}return Ne(t,e),t.prototype.processMovement=function(){e.prototype.processMovement.call(this)},t.prototype.addToNextRender=function(){e.prototype.addToNextRender.call(this)},t.prototype.registerDamage=function(){e.prototype.registerDamage.call(this)},t.prototype.attack=function(){e.prototype.attack.call(this)},t}(xe);var Ue=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const je=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="before-dead",o}return Ue(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(xe);var De=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Le=function(e){function t(t,n){var o=e.call(this,t,n)||this;return o.stateName="dead",o}return De(t,e),t.prototype.processMovement=function(){},t.prototype.addToNextRender=function(){},t.prototype.registerDamage=function(){},t.prototype.attack=function(){},t}(xe),Fe=function(){function e(){return e.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",e.instance=this),e.instance}return e.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=400,this.gameObject=new Z({point:x.clone(),size:B.clone(),speed:S.clone(),zIndex:Q,background:"url(".concat(Ie,")")}),this.stateName="playing"},e.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},e.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},e.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(e.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"stateName",{get:function(){return this.state.stateName},set:function(e){var t=this;switch(clearTimeout(this.timer),e){case"before-playing":this.state=new Se(this.gameObject,this.innerHealth);break;case"playing":this.state=new Me(this.gameObject,this.innerHealth);break;case"playing-after-damage":this.timer=setTimeout((function(){console.log("some action after damage"),t.stateName="playing"}),500),this.state=new Pe(this.gameObject,this.innerHealth);break;case"before-dead":this.state=new je(this.gameObject,this.innerHealth),this.timer=setTimeout((function(){t.stateName="dead"}),500);break;case"dead":this.state=new Le(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),e}(),Ke=n.p+"7467a9e3d648bcc674d6.png",He=n.p+"3d38fa44a32629a1f955.png",Ge=function(){function e(){if(!e.instance){this.enemy=new Fe,this.player=new Ce,this.virtualDOM=new oe,this.emptyBar=new Z({point:new v(0,0),size:new R(O,29),background:"#009",zIndex:te.emptyLifebar}),this.enemyEmptyHealth=new Z({point:new v(0,0),size:new R(400,29),background:"#000",zIndex:te.enemyEmptyHealth}),this.enemyHealth=new Z({point:new v(0,0),size:new R(this.enemy.health,29),background:"#f00",zIndex:te.enemyHealth});var t={x:1,y:1};this.healths=[];for(var n=1;n<=3;n++){var o=this.player.health>=n,r=new v(O-(t.x+k.width)*n,t.y);this.healths.push(new Z({point:r,size:k.clone(),background:"url(".concat(o?Ke:He,")"),zIndex:te.playerHealth}))}e.instance=this}return e.instance}return e.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},e.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(this.emptyBar)},e.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(this.enemyEmptyHealth)},e.prototype.addToRenderEnemyHealth=function(){this.enemyHealth.size=new R(this.enemy.health,29),this.virtualDOM.addElement(this.enemyHealth)},e.prototype.addToRenderPlayerHealth=function(){for(var e=1;e<=3;e++){var t=this.player.health>=e;this.healths[e-1].background="url(".concat(t?Ke:He,")"),this.virtualDOM.addElement(this.healths[e-1])}},e}(),ze=function(){function e(){this.renderAPI=z(),this.virtualDOM=new oe,this.keyboard=new me}return e.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},e}();var $e=new v(20,560),Ve=new R(400,30),qe=new Z({point:$e.clone(),size:Ve.clone(),zIndex:ne}),We=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Xe=function(e){function t(){var t=e.call(this)||this;return t.stateName="playing",t.player=new Ce,t.enemy=new Fe,t.bulletsStore=new ae,t.lifebar=new Ge,t.isPause=!1,t.isPauseHintRendered=!1,t.isReadyToChangeIsPause=!0,t.timerOfIsPause=null,t.player.init(),t.enemy.init(),t.bulletsStore.init(),t.pauseHint=qe.clone(),t.pauseHint.text="Игра на паузе. Нажмите ".concat(t.keyboard.getKey("PAUSE"),", чтобы продолжить"),t}return We(t,e),t.prototype.doFrameBehavior=function(){this.processPauseController(),this.processExitToMenuController(),this.isPausePreventsRender()||(this.doBulletsFrameBehavior(),this.player.doFrameBehavior(),this.enemy.doFrameBehavior(),this.lifebar.doFrameBehavior(),this.doPauseHintFrameBehavior(),e.prototype.render.call(this))},t.prototype.processPauseController=function(){var e=this;this.keyboard.isActiveKey("PAUSE")&&(this.isReadyToChangeIsPause&&(this.isPause=!this.isPause,this.isPauseHintRendered=!1),this.isReadyToChangeIsPause=!1,clearTimeout(this.timerOfIsPause),this.timerOfIsPause=setTimeout((function(){e&&(e.isReadyToChangeIsPause=!0)}),50))},t.prototype.processExitToMenuController=function(){this.keyboard.isActiveKey("ESCAPE")&&(this.stateName="menu")},t.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(e){e.doFrameBehavior()}))},t.prototype.doPauseHintFrameBehavior=function(){this.isPause&&(this.addToRenderPauseHint(),this.isPauseHintRendered=!0)},t.prototype.addToRenderPauseHint=function(){this.virtualDOM.addElement(this.pauseHint)},t.prototype.isPausePreventsRender=function(){return this.isPause&&this.isPauseHintRendered},t}(ze);var Ze=["new-game","settings"],Ye="#f00",Je="#000",Qe=new Z({text:"Нажмите Enter, чтобы продолжить",point:$e.clone(),size:Ve.clone()}),et=new Z({text:"Главное меню",point:new v(330,260),size:new R(150,30)}),tt=new Z({text:"Новая игра",point:new v(340,300),size:new R(100,30)}),nt=new Z({text:"Настройки",point:new v(340,330),size:new R(100,30)}),ot=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const rt=function(e){function t(){var t=e.call(this)||this;return t.stateName="menu",t.chosenOptionIdx=0,t.newGameButton=tt.clone(),t.settingsButton=nt.clone(),t}return ot(t,e),Object.defineProperty(t.prototype,"chosenOption",{get:function(){return Ze[this.chosenOptionIdx]},enumerable:!1,configurable:!0}),t.prototype.doFrameBehavior=function(){this.processKeyboard(),this.changeColorOfButtonsByChosenOption(),this.addToRenderElements(),e.prototype.render.call(this)},t.prototype.addToRenderElements=function(){this.virtualDOM.addElement(Qe),this.virtualDOM.addElement(et),this.virtualDOM.addElement(this.newGameButton),this.virtualDOM.addElement(this.settingsButton)},t.prototype.processKeyboard=function(){this.processPressingEnter(),this.processKeysForChoiceOfOption()},t.prototype.processPressingEnter=function(){this.keyboard.isActiveKey("ENTER")&&("new-game"===this.chosenOption&&(this.stateName="playing"),"settings"===this.chosenOption&&(this.stateName="settings"))},t.prototype.processKeysForChoiceOfOption=function(){this.processKeysForMovementToTop(),this.processKeysForMovementToBottom()},t.prototype.processKeysForMovementToTop=function(){(this.keyboard.isActiveKey("ARROWUP")||this.keyboard.isActiveKey("TOP"))&&(this.chosenOptionIdx=this.chosenOptionIdx<=0?0:this.chosenOptionIdx-1)},t.prototype.processKeysForMovementToBottom=function(){if(this.keyboard.isActiveKey("ARROWDOWN")||this.keyboard.isActiveKey("BOTTOM")){var e=Ze.length-1;this.chosenOptionIdx=this.chosenOptionIdx>=e?e:this.chosenOptionIdx+1}},t.prototype.changeColorOfButtonsByChosenOption=function(){this.newGameButton.textColor="new-game"===this.chosenOption?Ye:Je,this.settingsButton.textColor="settings"===this.chosenOption?Ye:Je},t}(ze);var it=new Z({text:"Нажмите Escape, чтобы выйти назад в меню",point:$e.clone(),size:Ve.clone()}),st=new Z({text:"Настройки",point:new v(10,10),size:new R(100,30)}),at=new Z({text:"Чтобы отредактировать выбранную клавишу, нажмите Enter",point:new v(400,10),size:new R(390,60)}),ct=new Z({text:"Нажмите клавишу, на которую хотите назначить это действие",point:new v(400,10),size:new R(390,60)}),pt=["TOP","LEFT","BOTTOM","RIGHT","PAUSE","ATTACK"];const lt=function(e,t,n){this.type=e,this.caption=t,this.place=n},ut=function(){function e(){this.virtualDOM=new oe,this.keyboard=new me,this.keysViewArray=pt.map((function(e){return function(e){switch(e){case"TOP":return new lt(e,new Z({text:"Вперёд",point:new v(20,50),size:new R(50,30)}),new Z({point:new v(120,50),size:new R(50,30)}));case"LEFT":return new lt(e,new Z({text:"Влево",point:new v(20,80),size:new R(50,30)}),new Z({point:new v(120,80),size:new R(50,30)}));case"BOTTOM":return new lt(e,new Z({text:"Назад",point:new v(20,110),size:new R(50,30)}),new Z({point:new v(120,110),size:new R(50,30)}));case"RIGHT":return new lt(e,new Z({text:"Вправо",point:new v(20,140),size:new R(50,30)}),new Z({point:new v(120,140),size:new R(50,30)}));case"ATTACK":return new lt(e,new Z({text:"Атака",point:new v(20,220),size:new R(50,30)}),new Z({point:new v(120,220),size:new R(50,30)}));case"PAUSE":return new lt(e,new Z({text:"Пауза",point:new v(20,180),size:new R(50,30)}),new Z({point:new v(120,180),size:new R(50,30)}))}}(e)})),this.changeKeysInPlaces(),this.changeColorOfKeysByChosenOption(),this.chosenOptionIdx=0,this.stateName="initial"}return e.prototype.addToRenderElements=function(){this.addToRenderHeader(),this.addToRenderKeysViewArray()},e.prototype.addToRenderHeader=function(){this.virtualDOM.addElement(st)},e.prototype.addToRenderKeysViewArray=function(){var e=this;this.keysViewArray.forEach((function(t){e.addToRenderKeysView(t)}))},e.prototype.addToRenderKeysView=function(e){this.virtualDOM.addElement(e.caption),this.virtualDOM.addElement(e.place)},e.prototype.changeKeysInPlaces=function(){var e=this;this.keysViewArray.forEach((function(t){t.place.text=e.keyboard.getKey(t.type)}))},e.prototype.changeColorOfKeysByChosenOption=function(){var e=this;this.keysViewArray.forEach((function(t,n){var o=e.chosenOptionIdx===n?"#00f":"#000";t.caption.textColor=o,t.place.textColor=o}))},e}();var ft=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const dt=function(e){function t(){var t=e.call(this)||this;return t.stateName="initial",t}return ft(t,e),t.prototype.processKeyboard=function(){},t.prototype.addToRenderElements=function(){e.prototype.addToRenderElements.call(this)},t}(ut);var ht=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const mt=function(e){function t(){var t=e.call(this)||this;return t.stateName="ready-to-edit",t.ableToChooseOptions=!0,t}return ht(t,e),t.prototype.processKeyboard=function(){this.processKeysForMovement(),this.processEnterForSwitchOnEditingState()},t.prototype.addToRenderElements=function(){this.virtualDOM.addElement(at),e.prototype.changeKeysInPlaces.call(this),e.prototype.changeColorOfKeysByChosenOption.call(this),e.prototype.addToRenderElements.call(this)},t.prototype.processEnterForSwitchOnEditingState=function(){this.keyboard.isActiveKey("ENTER")&&(this.stateName="editing")},t.prototype.processKeysForMovement=function(){this.ableToChooseOptions&&(this.processKeysForMovementToTop(),this.processKeysForMovementToBottom())},t.prototype.processKeysForMovementToTop=function(){(this.keyboard.isActiveKey("ARROWUP")||this.keyboard.isActiveKey("TOP"))&&(this.chosenOptionIdx=this.chosenOptionIdx<=0?0:this.chosenOptionIdx-1,this.lockKeysForMovement(),this.unlockKeysForMovementByTimeout())},t.prototype.processKeysForMovementToBottom=function(){if(this.keyboard.isActiveKey("ARROWDOWN")||this.keyboard.isActiveKey("BOTTOM")){var e=pt.length-1;this.chosenOptionIdx=this.chosenOptionIdx>=e?e:this.chosenOptionIdx+1,this.lockKeysForMovement(),this.unlockKeysForMovementByTimeout()}},t.prototype.lockKeysForMovement=function(){this.ableToChooseOptions=!1},t.prototype.unlockKeysForMovementByTimeout=function(){var e=this;setTimeout((function(){e&&(e.ableToChooseOptions=!0)}),300)},t}(ut),yt=function(){function e(e){this.calls=0,this.initialIsMaking=e.isMaking,this.initialCallsBeforeToggleIsMaking=e.callsBeforeToggleIsMaking,this.isMaking=this.initialIsMaking,this.callsBeforeToggleIsMaking=this.initialCallsBeforeToggleIsMaking}return e.prototype.tryToMake=function(e){this.calls++,this.calls>this.callsBeforeToggleIsMaking&&(this.calls=0,this.isMaking=!this.isMaking),this.isMaking&&e()},e.prototype.reset=function(){this.calls=0,this.isMaking=this.initialIsMaking,this.callsBeforeToggleIsMaking=this.initialCallsBeforeToggleIsMaking},e}();var bt=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const gt=function(e){function t(){var n=e.call(this)||this;return n.stateName="editing",n.partTimeMaker=new yt(t.PART_TIME_MAKER_SETTINGS),n}return bt(t,e),t.prototype.processKeyboard=function(){this.applyNewKey()},t.prototype.addToRenderElements=function(){e.prototype.changeColorOfKeysByChosenOption.call(this),this.virtualDOM.addElement(ct),e.prototype.addToRenderElements.call(this)},t.prototype.addToRenderKeysViewArray=function(){var e=this;this.keysViewArray.forEach((function(t,n){e.chosenOptionIdx===n?e.partTimeMaker.tryToMake((function(){e.addToRenderKeysView(t)})):e.addToRenderKeysView(t)}))},t.prototype.applyNewKey=function(){if(!["ESCAPE","ENTER"].includes(this.keyboard.lastKey)){var e=this.keysViewArray[this.chosenOptionIdx].type;this.keyboard.setKey(e,this.keyboard.lastKey),this.stateName="ready-to-edit"}},t.PART_TIME_MAKER_SETTINGS={callsBeforeToggleIsMaking:25,isMaking:!1},t}(ut),wt=function(){function e(){return e.instance||(this.stateNameBefore="initial",this.stateName="initial",e.instance=this),e.instance}return e.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.stateName="initial",this.stateNameBefore="initial"},e.prototype.doFrameBehavior=function(){this.state.processKeyboard(),this.state.addToRenderElements(),this.applyNewState()},e.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},Object.defineProperty(e.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){var n=this;switch(clearTimeout(this.timer),t){case"initial":this.state=new dt,this.timer=setTimeout((function(){n&&(n.stateName="ready-to-edit")}),e.INITIAL_STATE_TIME);break;case"ready-to-edit":this.state=new mt;break;case"editing":this.state=new gt}},enumerable:!1,configurable:!0}),e.INITIAL_STATE_TIME=200,e}();var _t=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const At=function(e){function t(){var t=e.call(this)||this;return t.stateName="settings",t.settingsPage=new wt,t.settingsPage.init(),t}return _t(t,e),t.prototype.doFrameBehavior=function(){this.processKeyboard(),this.settingsPage.doFrameBehavior(),this.virtualDOM.addElement(it),e.prototype.render.call(this)},t.prototype.processKeyboard=function(){this.processEscapeForExit()},t.prototype.processEscapeForExit=function(){this.keyboard.isActiveKey("ESCAPE")&&(this.stateName="menu")},t}(ze);(new(function(){function e(){return e.instance||(this.renderAPI=z(),this.gameLoop=new $,this.stateName="menu",this.stateNameBefore=this.state.stateName,e.instance=this),e.instance}return Object.defineProperty(e.prototype,"stateName",{get:function(){return this.state.stateName},set:function(e){switch(e){case"playing":this.state=new Xe;break;case"settings":this.state=new At;break;case"menu":this.state=new rt}},enumerable:!1,configurable:!0}),e.prototype.start=function(){var e=this;new V(this.renderAPI).render(),this.gameLoop.start((function(){e.state.doFrameBehavior(),e.applyNewState()}))},e.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},e}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
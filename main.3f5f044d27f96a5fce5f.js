(()=>{"use strict";var t={5124:(t,e,o)=>{o.d(e,{A:()=>pe});var n=o(1354),r=o.n(n),i=o(6314),a=o.n(i),s=o(4417),c=o.n(s),l=new URL(o(1960),o.b),p=new URL(o(4436),o.b),f=new URL(o(6434),o.b),u=new URL(o(6402),o.b),d=new URL(o(8298),o.b),m=new URL(o(7038),o.b),h=new URL(o(8516),o.b),b=new URL(o(5844),o.b),y=new URL(o(6170),o.b),g=new URL(o(7294),o.b),_=new URL(o(4388),o.b),w=new URL(o(5972),o.b),A=new URL(o(3689),o.b),v=new URL(o(3265),o.b),R=new URL(o(5361),o.b),C=new URL(o(643),o.b),E=new URL(o(1889),o.b),I=new URL(o(2985),o.b),O=new URL(o(6681),o.b),x=new URL(o(6747),o.b),B=new URL(o(8698),o.b),T=new URL(o(7486),o.b),S=new URL(o(9012),o.b),N=new URL(o(1380),o.b),U=new URL(o(8796),o.b),k=new URL(o(6576),o.b),M=new URL(o(7830),o.b),P=new URL(o(8262),o.b),j=new URL(o(4498),o.b),L=new URL(o(374),o.b),D=new URL(o(5516),o.b),F=new URL(o(4604),o.b),H=new URL(o(6490),o.b),G=new URL(o(910),o.b),$=new URL(o(6980),o.b),V=new URL(o(740),o.b),K=new URL(o(8833),o.b),z=new URL(o(7081),o.b),q=new URL(o(7385),o.b),X=new URL(o(3691),o.b),W=new URL(o(4759),o.b),Y=new URL(o(1919),o.b),Z=new URL(o(255),o.b),J=new URL(o(2553),o.b),Q=new URL(o(8146),o.b),tt=new URL(o(1302),o.b),et=new URL(o(8332),o.b),ot=new URL(o(9964),o.b),nt=a()(r()),rt=c()(l),it=c()(l,{hash:"?#iefix"}),at=c()(p),st=c()(f),ct=c()(u),lt=c()(d),pt=c()(d,{hash:"?#iefix"}),ft=c()(m),ut=c()(h),dt=c()(b),mt=c()(y),ht=c()(y,{hash:"?#iefix"}),bt=c()(g),yt=c()(_),gt=c()(w),_t=c()(A),wt=c()(A,{hash:"?#iefix"}),At=c()(v),vt=c()(R),Rt=c()(C),Ct=c()(E),Et=c()(E,{hash:"?#iefix"}),It=c()(I),Ot=c()(O),xt=c()(x),Bt=c()(B),Tt=c()(B,{hash:"?#iefix"}),St=c()(T),Nt=c()(S),Ut=c()(N),kt=c()(U),Mt=c()(U,{hash:"?#iefix"}),Pt=c()(k),jt=c()(M),Lt=c()(P),Dt=c()(j),Ft=c()(j,{hash:"?#iefix"}),Ht=c()(L),Gt=c()(D),$t=c()(F),Vt=c()(H),Kt=c()(H,{hash:"?#iefix"}),zt=c()(G),qt=c()($),Xt=c()(V),Wt=c()(K),Yt=c()(K,{hash:"?#iefix"}),Zt=c()(z),Jt=c()(q),Qt=c()(X),te=c()(W),ee=c()(W,{hash:"?#iefix"}),oe=c()(Y),ne=c()(Z),re=c()(J),ie=c()(Q),ae=c()(Q,{hash:"?#iefix"}),se=c()(tt),ce=c()(et),le=c()(ot);nt.push([t.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${rt});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${it}) format('embedded-opentype'),\n        url(${at}) format('woff2'),\n        url(${st}) format('woff'),\n        url(${ct}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${lt});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${pt}) format('embedded-opentype'),\n        url(${ft}) format('woff2'),\n        url(${ut}) format('woff'),\n        url(${dt}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${mt});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${ht}) format('embedded-opentype'),\n        url(${bt}) format('woff2'),\n        url(${yt}) format('woff'),\n        url(${gt}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${_t});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${wt}) format('embedded-opentype'),\n        url(${At}) format('woff2'),\n        url(${vt}) format('woff'),\n        url(${Rt}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ct});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${Et}) format('embedded-opentype'),\n        url(${It}) format('woff2'),\n        url(${Ot}) format('woff'),\n        url(${xt}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Bt});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Tt}) format('embedded-opentype'),\n        url(${St}) format('woff2'),\n        url(${Nt}) format('woff'),\n        url(${Ut}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${kt});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${Mt}) format('embedded-opentype'),\n        url(${Pt}) format('woff2'),\n        url(${jt}) format('woff'),\n        url(${Lt}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Dt});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${Ft}) format('embedded-opentype'),\n        url(${Ht}) format('woff2'),\n        url(${Gt}) format('woff'),\n        url(${$t}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Vt});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${Kt}) format('embedded-opentype'),\n        url(${zt}) format('woff2'),\n        url(${qt}) format('woff'),\n        url(${Xt}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Wt});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Yt}) format('embedded-opentype'),\n        url(${Zt}) format('woff2'),\n        url(${Jt}) format('woff'),\n        url(${Qt}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${te});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${ee}) format('embedded-opentype'),\n        url(${oe}) format('woff2'),\n        url(${ne}) format('woff'),\n        url(${re}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ie});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${ae}) format('embedded-opentype'),\n        url(${se}) format('woff2'),\n        url(${ce}) format('woff'),\n        url(${le}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/assets/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const pe=nt},6523:(t,e,o)=>{o.d(e,{A:()=>s});var n=o(1354),r=o.n(n),i=o(6314),a=o.n(i)()(r());a.push([t.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const s=a},6314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var o="",n=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),n&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=t(e),n&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(t,o,n,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<t.length;l++){var p=[].concat(t[l]);n&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),o&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=o):p[2]=o),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},4417:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},1354:t=>{t.exports=function(t){var e=t[1],o=t[3];if(!o)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},5072:t=>{var e=[];function o(t){for(var o=-1,n=0;n<e.length;n++)if(e[n].identifier===t){o=n;break}return o}function n(t,n){for(var i={},a=[],s=0;s<t.length;s++){var c=t[s],l=n.base?c[0]+n.base:c[0],p=i[l]||0,f="".concat(l," ").concat(p);i[l]=p+1;var u=o(f),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(d);else{var m=r(d,n);n.byIndex=s,e.splice(s,0,{identifier:f,updater:m,references:1})}a.push(f)}return a}function r(t,e){var o=e.domAPI(e);return o.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;o.update(t=e)}else o.remove()}}t.exports=function(t,r){var i=n(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=o(i[a]);e[s].references--}for(var c=n(t,r),l=0;l<i.length;l++){var p=o(i[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}i=c}}},7659:t=>{var e={};t.exports=function(t,o){var n=function(t){if(void 0===e[t]){var o=document.querySelector(t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}e[t]=o}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(o)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},5056:(t,e,o)=>{t.exports=function(t){var e=o.nc;e&&t.setAttribute("nonce",e)}},7825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(o){!function(t,e,o){var n="";o.supports&&(n+="@supports (".concat(o.supports,") {")),o.media&&(n+="@media ".concat(o.media," {"));var r=void 0!==o.layer;r&&(n+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),n+=o.css,r&&(n+="}"),o.media&&(n+="}"),o.supports&&(n+="}");var i=o.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,o)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},1113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},8796:(t,e,o)=>{t.exports=o.p+"d747b63eb41cdc64e3dd.eot"},8262:(t,e,o)=>{t.exports=o.p+"8e5479279b074720e15f.ttf"},7830:(t,e,o)=>{t.exports=o.p+"88d7f1b3ca9a9494d8e3.woff"},6576:(t,e,o)=>{t.exports=o.p+"ae0c1d409f7d45d81c29.woff2"},1960:(t,e,o)=>{t.exports=o.p+"32f9679ea3ede2ca14de.eot"},6402:(t,e,o)=>{t.exports=o.p+"508cb30d2090ab879d2f.ttf"},6434:(t,e,o)=>{t.exports=o.p+"3123587706218b4d8187.woff"},4436:(t,e,o)=>{t.exports=o.p+"71b2b84d5d1a55271b57.woff2"},8298:(t,e,o)=>{t.exports=o.p+"6490694b37b0ee09bd91.eot"},5844:(t,e,o)=>{t.exports=o.p+"5e9f6556d3c0bf6230f0.ttf"},8516:(t,e,o)=>{t.exports=o.p+"3f2cbde6b72e8d05669f.woff"},7038:(t,e,o)=>{t.exports=o.p+"6cd35edfbc0d7a417131.woff2"},6170:(t,e,o)=>{t.exports=o.p+"e5f75ce1f7e72a64d436.eot"},5972:(t,e,o)=>{t.exports=o.p+"1e46c5294501ef46e23b.ttf"},4388:(t,e,o)=>{t.exports=o.p+"997a1e8970d2b7e50fff.woff"},7294:(t,e,o)=>{t.exports=o.p+"74126ecd07ad0d25d3f6.woff2"},4759:(t,e,o)=>{t.exports=o.p+"7588d6373c3525bc74cd.eot"},2553:(t,e,o)=>{t.exports=o.p+"4302c2e2c9e789c4c7ea.ttf"},255:(t,e,o)=>{t.exports=o.p+"0d0bf30e7eeb4f6e7fd5.woff"},1919:(t,e,o)=>{t.exports=o.p+"007ccbd3e8708c6afef8.woff2"},8833:(t,e,o)=>{t.exports=o.p+"d592a653abb7a57fedd8.eot"},3691:(t,e,o)=>{t.exports=o.p+"13d61ef8e609b548d9b5.ttf"},7385:(t,e,o)=>{t.exports=o.p+"df0f59d80526acc6d0cd.woff"},7081:(t,e,o)=>{t.exports=o.p+"d537674e9e217fa53a13.woff2"},3689:(t,e,o)=>{t.exports=o.p+"0ad9ca04101ace1b39d1.eot"},643:(t,e,o)=>{t.exports=o.p+"ca7144f68f54653d3728.ttf"},5361:(t,e,o)=>{t.exports=o.p+"3c494714cdd1de859813.woff"},3265:(t,e,o)=>{t.exports=o.p+"6006fa5b67e554e06562.woff2"},8146:(t,e,o)=>{t.exports=o.p+"f9f0c87146a33023da7e.eot"},9964:(t,e,o)=>{t.exports=o.p+"ef677e217f2009c16854.ttf"},8332:(t,e,o)=>{t.exports=o.p+"b14ca2d2b289afceb0b0.woff"},1302:(t,e,o)=>{t.exports=o.p+"fc0337b9cf1cce2e6e1e.woff2"},4498:(t,e,o)=>{t.exports=o.p+"c000f0984de5d20c8eab.eot"},4604:(t,e,o)=>{t.exports=o.p+"ff1379d2f5bd26261cb2.ttf"},5516:(t,e,o)=>{t.exports=o.p+"9a91a0398c5cb21f0199.woff"},374:(t,e,o)=>{t.exports=o.p+"ace58ae211415a1f378b.woff2"},1889:(t,e,o)=>{t.exports=o.p+"30b57652c88c5dbd65de.eot"},6747:(t,e,o)=>{t.exports=o.p+"25e40da956314b12d333.ttf"},6681:(t,e,o)=>{t.exports=o.p+"31012f9b3e3da44f87e8.woff"},2985:(t,e,o)=>{t.exports=o.p+"a25806274237d06e00a6.woff2"},6490:(t,e,o)=>{t.exports=o.p+"ae807ad4142f3eae2e0c.eot"},740:(t,e,o)=>{t.exports=o.p+"7d12c80b1925091e4fec.ttf"},6980:(t,e,o)=>{t.exports=o.p+"674b1d2bd9d781457c17.woff"},910:(t,e,o)=>{t.exports=o.p+"0b33782009e32497dba2.woff2"},8698:(t,e,o)=>{t.exports=o.p+"bc4d192a93ba33f68109.eot"},1380:(t,e,o)=>{t.exports=o.p+"491dd1cc3dfda2b79d09.ttf"},9012:(t,e,o)=>{t.exports=o.p+"d5937d18c46d7ae260b6.woff"},7486:(t,e,o)=>{t.exports=o.p+"3669a8fac8736f85a7f1.woff2"}},e={};function o(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,o),i.exports}o.m=t,o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;o.g.importScripts&&(t=o.g.location+"");var e=o.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=n[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=t})(),o.b=document.baseURI||self.location.href,o.nc=void 0;var n=o(5072),r=o.n(n),i=o(7825),a=o.n(i),s=o(7659),c=o.n(s),l=o(5056),p=o.n(l),f=o(540),u=o.n(f),d=o(1113),m=o.n(d),h=o(6523),b={};b.styleTagTransform=m(),b.setAttributes=p(),b.insert=c().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u(),r()(h.A,b),h.A&&h.A.locals&&h.A.locals;var y=o(5124),g={};g.styleTagTransform=m(),g.setAttributes=p(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),r()(y.A,g),y.A&&y.A.locals&&y.A.locals;var _="root",w="game-window";const A=function(){function t(){return t.instance||(t.instance=this),t.instance}return t.instance=null,t}(),v=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}(),R=function(){function t(t,e){this.width=t,this.height=e}return t.prototype.clone=function(){return new t(this.width,this.height)},t.prototype.valueOf=function(){return this.width+" "+this.height},t}(),C=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}();var E,I,O,x,B,T,S=800,N=new v(380,500),U=new R(34,47),k=new C(0,0),M=new v(350,50),P=new R(100,100),j=new C(4,0),L=new R(30,27),D=new R(14,14),F=null!==(E=localStorage.getItem("KEY_TOP"))&&void 0!==E?E:"W",H=null!==(I=localStorage.getItem("KEY_LEFT"))&&void 0!==I?I:"A",G=null!==(O=localStorage.getItem("KEY_BOTTOM"))&&void 0!==O?O:"S",$=null!==(x=localStorage.getItem("KEY_RIGHT"))&&void 0!==x?x:"D",V=null!==(B=localStorage.getItem("KEY_ATTACK"))&&void 0!==B?B:"K",K=null!==(T=localStorage.getItem("KEY_PAUSE"))&&void 0!==T?T:"P";console.log("keys",F,H,G,$,V,K);var z="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),q="\n  width: ".concat(S,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n");function X(t,e){t.id=e,{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(t.dataset.testid=e)}function W(){var t=document.getElementById(_);if(!t)throw new Error('BrowserAPI Error: method "'.concat(W.name,'" - root not found'));var e=document.createElement("div");X(e,w),e.setAttribute("style",q),t.appendChild(e)}var Y=function(){function t(t){this.gameObject=t,this.innerElement=null}return Object.defineProperty(t.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.createElement=function(){this.innerElement=document.createElement("div")},t.prototype.setElement=function(t){this.innerElement=t},t.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css)},Object.defineProperty(t.prototype,"css",{get:function(){var t=this.gameObject,e=t.point,o=t.size,n=t.background,r=t.zIndex;return"\n    position: absolute;\n    top: ".concat(e.y,"px;\n    left: ").concat(e.x,"px;\n    z-index: ").concat(r,";\n    width: ").concat(o.width,"px;\n    height: ").concat(o.height,"px;\n    background: ").concat(n,";\n    ")},enumerable:!1,configurable:!0}),t}();const Z=Y;var J,Q=(J=function(t,e){return J=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},J(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}J(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});const tt=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.elementsMap={},e}return Q(e,t),Object.defineProperty(e.prototype,"window",{get:function(){var t=document.getElementById(w);if(!t)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return t},enumerable:!1,configurable:!0}),e.prototype.renderGameWindow=function(){var t,e;t=document.querySelector("body"),X(e=document.createElement("div"),_),e.setAttribute("style",z),t.appendChild(e),W()},e.prototype.clearAll=function(){document.body.innerHTML=""},e.prototype.render=function(t){var e=this;t.forEach((function(t){switch(t.action){case"mount":e.mount(t.gameObject);break;case"unmount":e.unmount(t.gameObject);break;case"update":e.update(t.gameObject)}}))},e.prototype.mount=function(t){var e=new Z(t);e.createElement(),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[e.id]=e},e.prototype.update=function(t){var e=new Z(t),o=this.elementsMap[t.id];e.setElement(o.element),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[t.id]=e},e.prototype.unmount=function(t){this.elementsMap[t.id].element.remove(),delete this.elementsMap[t.id]},e}(A);var et=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const ot=function(t){function e(){return t.call(this)||this}return et(e,t),e.prototype.renderGameWindow=function(){console.log("renderGameWindow")},e.prototype.clearAll=function(){console.log("clearAll")},e.prototype.render=function(t){console.log("render")},e}(A);function nt(){var t,e=null!==(t={TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==t?t:"browser";switch(e){case"browser":return new tt;case"fake":return new ot;default:throw new Error("Invalid env RENDER_API: ".concat(e))}}const rt=function(){function t(e){return void 0===e&&(e=33),t.instance||(this.lastFrameTime=Date.now(),this.frameDuration=e,t.instance=this),t.instance}return t.prototype.start=function(t){var e=this,o=function(){var n=Date.now();e.lastFrameTime+e.frameDuration<=n&&(e.lastFrameTime=n,t()),requestAnimationFrame(o)};o()},t}(),it=function(){function t(e){return this.renderAPI=null,t.instance||(this.renderAPI=e,t.instance=this),t.instance}return t.prototype.render=function(){this.renderAPI.renderGameWindow()},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,t.instance=null},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},t.instance=null,t}();var at,st;const ct=(at="",st=0,function(){var t=Date.now()+"";return at===t?(st++,at+" "+st):(at=t,t)});const lt=function(){function t(t,e,o,n,r,i){void 0===o&&(o=""),void 0===n&&(n=1),void 0===r&&(r=new C(0,0)),void 0===i&&(i=ct()),this.point=t,this.size=e,this.background=o,this.zIndex=n,this.speed=r,this.id=i}return t.prototype.move=function(){this.point=new v(this.point.x+this.speed.x,this.point.y+this.speed.y)},t.prototype.clone=function(){return new t(this.point,this.size,this.background,this.zIndex,this.speed,this.id)},t}(),pt=o.p+"98ce5afade1e5dcf76f2.png",ft=4,ut=5,dt=6,mt=7;var ht=function(){return new lt(N.clone(),U.clone(),"url(".concat(pt,")"),2,k.clone())},bt=function(){function t(){return t.instance||(this.prevElements={},this.nextElements={},t.instance=this),t.instance}return t.prototype.addElement=function(t){this.nextElements[t.id]=t},t.prototype.prepareForNewFrame=function(){this.prevElements={},this.cloneNextElementsIntoPrevElements(),this.nextElements={}},t.prototype.getChanges=function(){var t=this,e=this.getAllIdsFromMaps(),o=[];return e.forEach((function(e){o.push(t.getChangeForElementById(e))})),o},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.prevElements=null,this.nextElements=null,t.instance=null},t.prototype.cloneNextElementsIntoPrevElements=function(){for(var t in this.nextElements)this.prevElements[t]=this.nextElements[t].clone()},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('VirtualDOM Error: called method "destroy" (which for tests only!) not in tests')},t.prototype.getAllIdsFromMaps=function(){var t=new Set;for(var e in this.prevElements)t.add(e);for(var e in this.nextElements)t.add(e);return t},t.prototype.getChangeForElementById=function(t){var e,o,n=null!==(e=this.prevElements[t])&&void 0!==e?e:null,r=null!==(o=this.nextElements[t])&&void 0!==o?o:null;return n?r?{gameObject:r,action:this.isElementUpdated(t)?"update":"not-a-change"}:{gameObject:n,action:"unmount"}:{gameObject:r,action:"mount"}},t.prototype.isElementUpdated=function(t){var e=this.prevElements[t],o=this.nextElements[t];for(var n in e){var r=n;if(e[r].valueOf()!==o[r].valueOf())return!0}return!1},t}();const yt=bt,gt=o.p+"f6daa77bf4e4dd5f7f9f.png",_t=o.p+"51183ae04093a5b578b5.png",wt=function(){function t(e,o,n){this.type=e,this.virtualDOM=new yt,this.gameObject=t.createInitialSprite(this.type,o,n)}return Object.defineProperty(t.prototype,"point",{get:function(){return this.gameObject.point},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.gameObject.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},t.createInitialSprite=function(t,e,o){return new lt(e.clone(),D.clone(),"url(".concat("enemy"===t?gt:_t,")"),3,o.clone())},t.prototype.processMovement=function(){this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t}(),At=function(){function t(){var e=this;return t.instance||(this.keys=new Set,t.instance=this,document.addEventListener("keydown",(function(t){e.keys.add(t.key.toUpperCase())})),document.addEventListener("keyup",(function(t){e.keys.delete(t.key.toUpperCase())}))),t.instance}return t.prototype.isActiveKey=function(t){return this.keys.has(t)},t}(),vt=function(){function t(){return t.instance||(this.innerBullets=[],t.instance=this),t.instance}return t.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(t){return!(t.point.x+t.size.width<0||t.point.x>S||t.point.y+t.size.height<0||t.point.y>600)}))},t.prototype.addElement=function(t){this.innerBullets.push(t)},t.prototype.removeElement=function(t){this.innerBullets=this.innerBullets.filter((function(e){return e.id!==t.id}))},Object.defineProperty(t.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),t}(),Rt=function(){function t(t,e){this.target=t,this.bulletType=e,this.bulletsStore=new vt}return t.prototype.tryToCollide=function(t){var e=this;this.bulletsStore.bullets.forEach((function(o){e.bulletType===o.type&&function(t,e){var o=t.point.x,n=t.point.x+t.size.width,r=e.point.x,i=e.point.x+e.size.width;if(o>=r&&o<=i||n>=r&&n<=i){var a=t.point.y,s=t.point.y+t.size.height,c=e.point.y,l=e.point.y+e.size.height;if(a>=c&&a<=l||s>=c&&s<=l)return!0}return!1}(o,e.target)&&(t(),e.bulletsStore.removeElement(o))}))},t}(),Ct=function(){function t(t,e){this.keyboardController=new At,this.gameObject=t,this.virtualDOM=new yt,this.bulletsCollider=new Rt(this.gameObject,"enemy"),this.bulletsStore=new vt,this.lastAttackTime=Date.now()-500,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,o,n,r,i,a,s;this.gameObject.speed=(t=this.gameObject,e=this.keyboardController,o=t.point.y<=350,n=t.point.x<=0,r=t.point.y>=600-t.size.height,i=t.point.x>=S-t.size.width,a=0,s=0,e.isActiveKey(F)&&!o&&(s=-4),e.isActiveKey(H)&&!n&&(a=-4),e.isActiveKey(G)&&!r&&(s=4),e.isActiveKey($)&&!i&&(a=4),new C(a,s)),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=1,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t=Date.now();t>this.lastAttackTime+500&&this.keyboardController.isActiveKey(V)&&(this.lastAttackTime=t,this.bulletsStore.addElement(new wt("player",this.gameObject.point.clone(),new C(0,-4))))},t}();var Et=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const It=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-playing",n}return Et(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var Ot=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const xt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing",n}return Ot(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Ct);var Bt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Tt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing-after-damage",n.framesCount=0,n.isInvisiblePlayer=!0,n}return Bt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){this.isInvisiblePlayer||t.prototype.addToNextRender.call(this),this.framesCount++,this.framesCount>=e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER&&(this.isInvisiblePlayer=!this.isInvisiblePlayer,this.framesCount=0)},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER=5,e}(Ct);var St=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Nt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-dead",n}return St(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var Ut=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const kt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="dead",n}return Ut(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var Mt=function(){function t(){return t.instance||(this.timer=null,this.innerHealth=3,this.gameObject=ht(),this.stateNameBefore="before-playing",t.instance=this),t.instance}return t.prototype.init=function(){this.innerHealth=3,this.gameObject=ht(),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){var t;return null!==(t=this.state.stateName)&&void 0!==t?t:"before-playing"},set:function(t){var e=this;switch(t){case"before-playing":this.state=new It(this.gameObject,this.innerHealth);break;case"playing":this.state=new xt(this.gameObject,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="playing"}),3e3),this.state=new Tt(this.gameObject,this.innerHealth);break;case"before-dead":clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="dead"}),0),this.state=new Nt(this.gameObject,this.innerHealth);break;case"dead":this.state=new kt(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}();const Pt=Mt,jt=o.p+"49dc2035dd05181f3af7.png";var Lt=function(){return new lt(M.clone(),P.clone(),"url(".concat(jt,")"),2,j.clone())};const Dt=function(){function t(t,e){this.gameObject=t,this.virtualDOM=new yt,this.bulletsCollider=new Rt(this.gameObject,"player"),this.bulletsStore=new vt,this.lastAttackTime=Date.now()-200,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,o;this.gameObject.speed=(e=(t=this.gameObject).point.x<=50,o=t.speed.x,e?(o=Math.abs(o),new C(o,t.speed.y)):t.point.x>=750-t.size.width?(o=-Math.abs(o),new C(o,t.speed.y)):t.speed),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=10,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t,e,o,n,r=Date.now();r>this.lastAttackTime+200&&(this.lastAttackTime=r,this.bulletsStore.addElement((t=this.gameObject.point,e=this.gameObject.size,o=new v(t.x+e.width/2,t.y+e.height),n=new C(Math.floor(10*Math.random())-5,3),new wt("enemy",o,n))))},t}();var Ft=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Ht=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-playing",n}return Ft(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt);var Gt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const $t=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing",n}return Gt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Dt);var Vt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Kt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing-after-damage",n}return Vt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Dt);var zt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const qt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-dead",n}return zt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt);var Xt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Wt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="dead",n}return Xt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt),Yt=function(){function t(){return t.instance||(this.gameObject=Lt(),this.innerHealth=400,this.state=new Ht(this.gameObject,this.innerHealth),this.stateNameBefore=this.state.stateName,this.timer=null,t.instance=this),t.instance}return t.prototype.init=function(){this.innerHealth=400,this.gameObject=Lt(),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){var e=this;switch(t){case"before-playing":break;case"playing":this.state=new $t(this.gameObject,this.innerHealth);break;case"playing-after-damage":clearTimeout(this.timer),this.timer=setTimeout((function(){console.log("some action after damage"),e.stateName="playing"}),500),this.state=new Kt(this.gameObject,this.innerHealth);break;case"before-dead":this.state=new qt(this.gameObject,this.innerHealth),clearTimeout(this.timer),this.timer=setTimeout((function(){e.stateName="dead"}),500);break;case"dead":this.state=new Wt(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}(),Zt=o.p+"7467a9e3d648bcc674d6.png",Jt=o.p+"3d38fa44a32629a1f955.png",Qt=function(){function t(){if(!t.instance){this.enemy=new Yt,this.player=new Pt,this.virtualDOM=new yt,this.emptyBar=new lt(new v(0,0),new R(S,29),"#009",ft),this.enemyEmptyHealth=new lt(new v(0,0),new R(400,29),"#000",ut),this.enemyHealth=new lt(new v(0,0),new R(this.enemy.health,29),"#f00",dt);var e={x:1,y:1};this.healths=[];for(var o=1;o<=3;o++){var n=this.player.health>=o,r=new v(S-(e.x+L.width)*o,e.y);this.healths.push(new lt(r,L,"url(".concat(n?Zt:Jt,")"),mt))}t.instance=this}return t.instance}return t.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},t.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(this.emptyBar)},t.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(this.enemyEmptyHealth)},t.prototype.addToRenderEnemyHealth=function(){this.enemyHealth.size=new R(this.enemy.health,29),this.virtualDOM.addElement(this.enemyHealth)},t.prototype.addToRenderPlayerHealth=function(){for(var t=1;t<=3;t++){var e=this.player.health>=t;this.healths[t-1].background="url(".concat(e?Zt:Jt,")"),this.virtualDOM.addElement(this.healths[t-1])}},t}(),te=function(){function t(){this.renderAPI=nt(),this.virtualDOM=new yt,this.stateName="menu"}return t.prototype.doFrameBehavior=function(){this.render()},t.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},t}();var ee=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const oe=function(t){function e(){var e=t.call(this)||this;return e.player=new Pt,e.enemy=new Yt,e.bulletsStore=new vt,e.lifebar=new Qt,e.keyboard=new At,e.isPause=!1,e.player.init(),e.enemy.init(),e}return ee(e,t),e.prototype.doFrameBehavior=function(){this.keyboard.isActiveKey(K)&&(this.isPause=!this.isPause),this.isPause||(this.doBulletsFrameBehavior(),this.player.doFrameBehavior(),this.enemy.doFrameBehavior(),this.lifebar.doFrameBehavior(),t.prototype.render.call(this))},e.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(t){t.doFrameBehavior()}))},e}(te);var ne=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const re=function(t){function e(){return t.call(this)||this}return ne(e,t),e.prototype.doFrameBehavior=function(){t.prototype.render.call(this)},e}(te);var ie=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const ae=function(t){function e(){return t.call(this)||this}return ie(e,t),e.prototype.doFrameBehavior=function(){t.prototype.render.call(this)},e}(te);(new(function(){function t(){return t.instance||(this.renderAPI=nt(),this.gameLoop=new rt,this.stateName="playing",this.stateNameBefore=this.state.stateName,t.instance=this),t.instance}return Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){switch(t){case"playing":this.state=new oe;break;case"settings":this.state=new re;break;case"menu":this.state=new ae}},enumerable:!1,configurable:!0}),t.prototype.start=function(){var t=this;new it(this.renderAPI).render(),this.gameLoop.start((function(){t.state.doFrameBehavior(),t.applyNewState()}))},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
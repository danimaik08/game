(()=>{"use strict";var t={5124:(t,e,n)=>{n.d(e,{A:()=>le});var o=n(1354),r=n.n(o),i=n(6314),s=n.n(i),a=n(4417),c=n.n(a),p=new URL(n(1960),n.b),l=new URL(n(4436),n.b),u=new URL(n(6434),n.b),f=new URL(n(6402),n.b),d=new URL(n(8298),n.b),h=new URL(n(7038),n.b),m=new URL(n(8516),n.b),y=new URL(n(5844),n.b),b=new URL(n(6170),n.b),g=new URL(n(7294),n.b),w=new URL(n(4388),n.b),_=new URL(n(5972),n.b),A=new URL(n(3689),n.b),v=new URL(n(3265),n.b),R=new URL(n(5361),n.b),E=new URL(n(643),n.b),O=new URL(n(1889),n.b),T=new URL(n(2985),n.b),C=new URL(n(6681),n.b),I=new URL(n(6747),n.b),x=new URL(n(8698),n.b),B=new URL(n(7486),n.b),S=new URL(n(9012),n.b),k=new URL(n(1380),n.b),M=new URL(n(8796),n.b),P=new URL(n(6576),n.b),N=new URL(n(7830),n.b),U=new URL(n(8262),n.b),j=new URL(n(4498),n.b),D=new URL(n(374),n.b),L=new URL(n(5516),n.b),F=new URL(n(4604),n.b),K=new URL(n(6490),n.b),H=new URL(n(910),n.b),G=new URL(n(6980),n.b),z=new URL(n(740),n.b),$=new URL(n(8833),n.b),V=new URL(n(7081),n.b),q=new URL(n(7385),n.b),W=new URL(n(3691),n.b),X=new URL(n(4759),n.b),Z=new URL(n(1919),n.b),J=new URL(n(255),n.b),Y=new URL(n(2553),n.b),Q=new URL(n(8146),n.b),tt=new URL(n(1302),n.b),et=new URL(n(8332),n.b),nt=new URL(n(9964),n.b),ot=s()(r()),rt=c()(p),it=c()(p,{hash:"?#iefix"}),st=c()(l),at=c()(u),ct=c()(f),pt=c()(d),lt=c()(d,{hash:"?#iefix"}),ut=c()(h),ft=c()(m),dt=c()(y),ht=c()(b),mt=c()(b,{hash:"?#iefix"}),yt=c()(g),bt=c()(w),gt=c()(_),wt=c()(A),_t=c()(A,{hash:"?#iefix"}),At=c()(v),vt=c()(R),Rt=c()(E),Et=c()(O),Ot=c()(O,{hash:"?#iefix"}),Tt=c()(T),Ct=c()(C),It=c()(I),xt=c()(x),Bt=c()(x,{hash:"?#iefix"}),St=c()(B),kt=c()(S),Mt=c()(k),Pt=c()(M),Nt=c()(M,{hash:"?#iefix"}),Ut=c()(P),jt=c()(N),Dt=c()(U),Lt=c()(j),Ft=c()(j,{hash:"?#iefix"}),Kt=c()(D),Ht=c()(L),Gt=c()(F),zt=c()(K),$t=c()(K,{hash:"?#iefix"}),Vt=c()(H),qt=c()(G),Wt=c()(z),Xt=c()($),Zt=c()($,{hash:"?#iefix"}),Jt=c()(V),Yt=c()(q),Qt=c()(W),te=c()(X),ee=c()(X,{hash:"?#iefix"}),ne=c()(Z),oe=c()(J),re=c()(Y),ie=c()(Q),se=c()(Q,{hash:"?#iefix"}),ae=c()(tt),ce=c()(et),pe=c()(nt);ot.push([t.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${rt});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${it}) format('embedded-opentype'),\n        url(${st}) format('woff2'),\n        url(${at}) format('woff'),\n        url(${ct}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${pt});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${lt}) format('embedded-opentype'),\n        url(${ut}) format('woff2'),\n        url(${ft}) format('woff'),\n        url(${dt}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ht});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${mt}) format('embedded-opentype'),\n        url(${yt}) format('woff2'),\n        url(${bt}) format('woff'),\n        url(${gt}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${wt});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${_t}) format('embedded-opentype'),\n        url(${At}) format('woff2'),\n        url(${vt}) format('woff'),\n        url(${Rt}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Et});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${Ot}) format('embedded-opentype'),\n        url(${Tt}) format('woff2'),\n        url(${Ct}) format('woff'),\n        url(${It}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${xt});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Bt}) format('embedded-opentype'),\n        url(${St}) format('woff2'),\n        url(${kt}) format('woff'),\n        url(${Mt}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Pt});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${Nt}) format('embedded-opentype'),\n        url(${Ut}) format('woff2'),\n        url(${jt}) format('woff'),\n        url(${Dt}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Lt});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${Ft}) format('embedded-opentype'),\n        url(${Kt}) format('woff2'),\n        url(${Ht}) format('woff'),\n        url(${Gt}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${zt});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${$t}) format('embedded-opentype'),\n        url(${Vt}) format('woff2'),\n        url(${qt}) format('woff'),\n        url(${Wt}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Xt});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Zt}) format('embedded-opentype'),\n        url(${Jt}) format('woff2'),\n        url(${Yt}) format('woff'),\n        url(${Qt}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${te});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${ee}) format('embedded-opentype'),\n        url(${ne}) format('woff2'),\n        url(${oe}) format('woff'),\n        url(${re}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ie});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${se}) format('embedded-opentype'),\n        url(${ae}) format('woff2'),\n        url(${ce}) format('woff'),\n        url(${pe}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/assets/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const le=ot},6523:(t,e,n)=>{n.d(e,{A:()=>a});var o=n(1354),r=n.n(o),i=n(6314),s=n.n(i)()(r());s.push([t.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const a=s},6314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var p=0;p<t.length;p++){var l=[].concat(t[p]);o&&s[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},4417:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},1354:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},5072:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},s=[],a=0;a<t.length;a++){var c=t[a],p=o.base?c[0]+o.base:c[0],l=i[p]||0,u="".concat(p," ").concat(l);i[p]=l+1;var f=n(u),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)e[f].references++,e[f].updater(d);else{var h=r(d,o);o.byIndex=a,e.splice(a,0,{identifier:u,updater:h,references:1})}s.push(u)}return s}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<i.length;s++){var a=n(i[s]);e[a].references--}for(var c=o(t,r),p=0;p<i.length;p++){var l=n(i[p]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},7659:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},5056:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},7825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},1113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},8796:(t,e,n)=>{t.exports=n.p+"d747b63eb41cdc64e3dd.eot"},8262:(t,e,n)=>{t.exports=n.p+"8e5479279b074720e15f.ttf"},7830:(t,e,n)=>{t.exports=n.p+"88d7f1b3ca9a9494d8e3.woff"},6576:(t,e,n)=>{t.exports=n.p+"ae0c1d409f7d45d81c29.woff2"},1960:(t,e,n)=>{t.exports=n.p+"32f9679ea3ede2ca14de.eot"},6402:(t,e,n)=>{t.exports=n.p+"508cb30d2090ab879d2f.ttf"},6434:(t,e,n)=>{t.exports=n.p+"3123587706218b4d8187.woff"},4436:(t,e,n)=>{t.exports=n.p+"71b2b84d5d1a55271b57.woff2"},8298:(t,e,n)=>{t.exports=n.p+"6490694b37b0ee09bd91.eot"},5844:(t,e,n)=>{t.exports=n.p+"5e9f6556d3c0bf6230f0.ttf"},8516:(t,e,n)=>{t.exports=n.p+"3f2cbde6b72e8d05669f.woff"},7038:(t,e,n)=>{t.exports=n.p+"6cd35edfbc0d7a417131.woff2"},6170:(t,e,n)=>{t.exports=n.p+"e5f75ce1f7e72a64d436.eot"},5972:(t,e,n)=>{t.exports=n.p+"1e46c5294501ef46e23b.ttf"},4388:(t,e,n)=>{t.exports=n.p+"997a1e8970d2b7e50fff.woff"},7294:(t,e,n)=>{t.exports=n.p+"74126ecd07ad0d25d3f6.woff2"},4759:(t,e,n)=>{t.exports=n.p+"7588d6373c3525bc74cd.eot"},2553:(t,e,n)=>{t.exports=n.p+"4302c2e2c9e789c4c7ea.ttf"},255:(t,e,n)=>{t.exports=n.p+"0d0bf30e7eeb4f6e7fd5.woff"},1919:(t,e,n)=>{t.exports=n.p+"007ccbd3e8708c6afef8.woff2"},8833:(t,e,n)=>{t.exports=n.p+"d592a653abb7a57fedd8.eot"},3691:(t,e,n)=>{t.exports=n.p+"13d61ef8e609b548d9b5.ttf"},7385:(t,e,n)=>{t.exports=n.p+"df0f59d80526acc6d0cd.woff"},7081:(t,e,n)=>{t.exports=n.p+"d537674e9e217fa53a13.woff2"},3689:(t,e,n)=>{t.exports=n.p+"0ad9ca04101ace1b39d1.eot"},643:(t,e,n)=>{t.exports=n.p+"ca7144f68f54653d3728.ttf"},5361:(t,e,n)=>{t.exports=n.p+"3c494714cdd1de859813.woff"},3265:(t,e,n)=>{t.exports=n.p+"6006fa5b67e554e06562.woff2"},8146:(t,e,n)=>{t.exports=n.p+"f9f0c87146a33023da7e.eot"},9964:(t,e,n)=>{t.exports=n.p+"ef677e217f2009c16854.ttf"},8332:(t,e,n)=>{t.exports=n.p+"b14ca2d2b289afceb0b0.woff"},1302:(t,e,n)=>{t.exports=n.p+"fc0337b9cf1cce2e6e1e.woff2"},4498:(t,e,n)=>{t.exports=n.p+"c000f0984de5d20c8eab.eot"},4604:(t,e,n)=>{t.exports=n.p+"ff1379d2f5bd26261cb2.ttf"},5516:(t,e,n)=>{t.exports=n.p+"9a91a0398c5cb21f0199.woff"},374:(t,e,n)=>{t.exports=n.p+"ace58ae211415a1f378b.woff2"},1889:(t,e,n)=>{t.exports=n.p+"30b57652c88c5dbd65de.eot"},6747:(t,e,n)=>{t.exports=n.p+"25e40da956314b12d333.ttf"},6681:(t,e,n)=>{t.exports=n.p+"31012f9b3e3da44f87e8.woff"},2985:(t,e,n)=>{t.exports=n.p+"a25806274237d06e00a6.woff2"},6490:(t,e,n)=>{t.exports=n.p+"ae807ad4142f3eae2e0c.eot"},740:(t,e,n)=>{t.exports=n.p+"7d12c80b1925091e4fec.ttf"},6980:(t,e,n)=>{t.exports=n.p+"674b1d2bd9d781457c17.woff"},910:(t,e,n)=>{t.exports=n.p+"0b33782009e32497dba2.woff2"},8698:(t,e,n)=>{t.exports=n.p+"bc4d192a93ba33f68109.eot"},1380:(t,e,n)=>{t.exports=n.p+"491dd1cc3dfda2b79d09.ttf"},9012:(t,e,n)=>{t.exports=n.p+"d5937d18c46d7ae260b6.woff"},7486:(t,e,n)=>{t.exports=n.p+"3669a8fac8736f85a7f1.woff2"}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=o[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0;var o=n(5072),r=n.n(o),i=n(7825),s=n.n(i),a=n(7659),c=n.n(a),p=n(5056),l=n.n(p),u=n(540),f=n.n(u),d=n(1113),h=n.n(d),m=n(6523),y={};y.styleTagTransform=h(),y.setAttributes=l(),y.insert=c().bind(null,"head"),y.domAPI=s(),y.insertStyleElement=f(),r()(m.A,y),m.A&&m.A.locals&&m.A.locals;var b=n(5124),g={};g.styleTagTransform=h(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=f(),r()(b.A,g),b.A&&b.A.locals&&b.A.locals;var w="root",_="game-window";const A=function(){},v=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}(),R=function(){function t(t,e){this.width=t,this.height=e}return t.prototype.clone=function(){return new t(this.width,this.height)},t.prototype.valueOf=function(){return this.width+" "+this.height},t}(),E=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}();var O=800,T=new v(380,500),C=new R(34,47),I=new E(0,0),x=new v(350,50),B=new R(100,100),S=new E(4,0),k=new R(30,27),M=new R(14,14),P="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),N="\n  width: ".concat(O,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n  cursor: default;\n");function U(t,e){t.id=e,{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(t.dataset.testid=e)}function j(){var t=document.getElementById(w);if(!t)throw new Error('BrowserAPI Error: method "'.concat(j.name,'" - root not found'));var e=document.createElement("div");U(e,_),e.setAttribute("style",N),t.appendChild(e)}const D=function(){function t(t){this.gameObject=t,this.innerElement=null}return Object.defineProperty(t.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.createElement=function(){this.innerElement=document.createElement("div")},t.prototype.setElement=function(t){this.innerElement=t},t.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css),this.element.innerHTML=this.gameObject.text},Object.defineProperty(t.prototype,"css",{get:function(){var t=this.gameObject,e=t.point,n=t.size,o=t.background,r=t.textColor,i=t.zIndex;return"\n    position: absolute;\n    top: ".concat(e.y,"px;\n    left: ").concat(e.x,"px;\n    z-index: ").concat(i,";\n    width: ").concat(n.width,"px;\n    height: ").concat(n.height,"px;\n    background: ").concat(o,";\n    color: ").concat(r,";\n    ")},enumerable:!1,configurable:!0}),t}();var L,F=(L=function(t,e){return L=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},L(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}L(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});const K=function(t){function e(){var n=t.call(this)||this;return n.elementsMap={},e.instance||(e.instance=n),e.instance}return F(e,t),Object.defineProperty(e.prototype,"window",{get:function(){var t=document.getElementById(_);if(!t)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return t},enumerable:!1,configurable:!0}),e.prototype.renderGameWindow=function(){var t,e;t=document.querySelector("body"),U(e=document.createElement("div"),w),e.setAttribute("style",P),t.appendChild(e),j()},e.prototype.clearAll=function(){document.body.innerHTML=""},e.prototype.render=function(t){var e=this;t.forEach((function(t){switch(t.action){case"mount":e.mount(t.gameObject);break;case"unmount":e.unmount(t.gameObject);break;case"update":e.update(t.gameObject)}}))},e.prototype.mount=function(t){var e=new D(t);e.createElement(),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[e.id]=e},e.prototype.update=function(t){var e=new D(t),n=this.elementsMap[t.id];e.setElement(n.element),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[t.id]=e},e.prototype.unmount=function(t){this.elementsMap[t.id].element.remove(),delete this.elementsMap[t.id]},e.instance=null,e}(A);var H=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const G=function(t){function e(){return t.call(this)||this}return H(e,t),e.prototype.renderGameWindow=function(){console.log("renderGameWindow")},e.prototype.clearAll=function(){console.log("clearAll")},e.prototype.render=function(t){console.log("render")},e}(A);function z(){var t,e=null!==(t={TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==t?t:"browser";switch(e){case"browser":return new K;case"fake":return new G;default:throw new Error("Invalid env RENDER_API: ".concat(e))}}const $=function(){function t(e){return void 0===e&&(e=33),t.instance||(this.lastFrameTime=Date.now(),this.frameDuration=e,t.instance=this),t.instance}return t.prototype.start=function(t){var e=this,n=function(){var o=Date.now();e.lastFrameTime+e.frameDuration<=o&&(e.lastFrameTime=o,t()),requestAnimationFrame(n)};n()},t}(),V=function(){function t(e){return this.renderAPI=null,t.instance||(this.renderAPI=e,t.instance=this),t.instance}return t.prototype.render=function(){this.renderAPI.renderGameWindow()},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,t.instance=null},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},t.instance=null,t}();var q,W;const X=(q="",W=0,function(){var t=Date.now()+"";return q===t?(W++,q+" "+W):(q=t,t)}),Z=function(){function t(t){var e,n,o,r,i,s,a,c;this.id=null!==(e=null==t?void 0:t.id)&&void 0!==e?e:X(),this.point=null!==(n=null==t?void 0:t.point)&&void 0!==n?n:new v(0,0),this.size=null!==(o=null==t?void 0:t.size)&&void 0!==o?o:new R(1,1),this.speed=null!==(r=null==t?void 0:t.speed)&&void 0!==r?r:new E(0,0),this.zIndex=null!==(i=null==t?void 0:t.zIndex)&&void 0!==i?i:1,this.text=null!==(s=null==t?void 0:t.text)&&void 0!==s?s:"",this.textColor=null!==(a=null==t?void 0:t.textColor)&&void 0!==a?a:"#000",this.background=null!==(c=null==t?void 0:t.background)&&void 0!==c?c:"transparent"}return t.prototype.move=function(){this.point=new v(this.point.x+this.speed.x,this.point.y+this.speed.y)},t.prototype.clone=function(){return new t(this)},t}(),J=n.p+"98ce5afade1e5dcf76f2.png",Y=2,Q=2,tt=3,et={emptyLifebar:4,enemyEmptyHealth:5,enemyHealth:6,playerHealth:7},nt=4,ot=function(){function t(){return t.instance||(this.prevElements={},this.nextElements={},t.instance=this),t.instance}return t.prototype.addElement=function(t){this.nextElements[t.id]=t},t.prototype.prepareForNewFrame=function(){this.prevElements={},this.cloneNextElementsIntoPrevElements(),this.nextElements={}},t.prototype.getChanges=function(){var t=this,e=this.getAllIdsFromMaps(),n=[];return e.forEach((function(e){n.push(t.getChangeForElementById(e))})),n},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.prevElements=null,this.nextElements=null,t.instance=null},t.prototype.cloneNextElementsIntoPrevElements=function(){for(var t in this.nextElements)this.prevElements[t]=this.nextElements[t].clone()},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('VirtualDOM Error: called method "destroy" (which for tests only!) not in tests')},t.prototype.getAllIdsFromMaps=function(){var t=new Set;for(var e in this.prevElements)t.add(e);for(var e in this.nextElements)t.add(e);return t},t.prototype.getChangeForElementById=function(t){var e,n,o=null!==(e=this.prevElements[t])&&void 0!==e?e:null,r=null!==(n=this.nextElements[t])&&void 0!==n?n:null;return o?r?{gameObject:r,action:this.isElementUpdated(t)?"update":"not-a-change"}:{gameObject:o,action:"unmount"}:{gameObject:r,action:"mount"}},t.prototype.isElementUpdated=function(t){var e=this.prevElements[t],n=this.nextElements[t];for(var o in e){var r=o;if(e[r].valueOf()!==n[r].valueOf())return!0}return!1},t}(),rt=n.p+"f6daa77bf4e4dd5f7f9f.png",it=n.p+"51183ae04093a5b578b5.png",st=function(){function t(e,n,o){this.type=e,this.virtualDOM=new ot,this.gameObject=t.createInitialSprite(this.type,n,o)}return Object.defineProperty(t.prototype,"point",{get:function(){return this.gameObject.point},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.gameObject.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},t.createInitialSprite=function(t,e,n){return new Z({point:e.clone(),size:M.clone(),speed:n.clone(),zIndex:tt,background:"url(".concat("enemy"===t?rt:it,")")})},t.prototype.processMovement=function(){this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t}(),at=function(){function t(){return t.instance||(this.innerBullets=[],t.instance=this),t.instance}return t.prototype.init=function(){this.innerBullets=[]},t.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(t){return!(t.point.x+t.size.width<0||t.point.x>O||t.point.y+t.size.height<0||t.point.y>600)}))},t.prototype.addElement=function(t){this.innerBullets.push(t)},t.prototype.removeElement=function(t){this.innerBullets=this.innerBullets.filter((function(e){return e.id!==t.id}))},Object.defineProperty(t.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),t}(),ct=function(){function t(t,e){this.target=t,this.bulletType=e,this.bulletsStore=new at}return t.prototype.tryToCollide=function(t){var e=this;this.bulletsStore.bullets.forEach((function(n){e.bulletType===n.type&&function(t,e){var n=t.point.x,o=t.point.x+t.size.width,r=e.point.x,i=e.point.x+e.size.width;if(n>=r&&n<=i||o>=r&&o<=i){var s=t.point.y,a=t.point.y+t.size.height,c=e.point.y,p=e.point.y+e.size.height;if(s>=c&&s<=p||a>=c&&a<=p)return!0}return!1}(n,e.target)&&(t(),e.bulletsStore.removeElement(n))}))},t}(),pt=function(){function t(){var e=this;return t.instance||(this.keys=new Set,t.instance=this,document.addEventListener("keydown",(function(t){var n=t.key.toUpperCase();e.keys.add(n),e.innerLastKey=n})),document.addEventListener("keyup",(function(t){e.keys.delete(t.key.toUpperCase())}))),t.instance}return t.prototype.isActiveKey=function(t){return this.keys.has(t.toUpperCase())},Object.defineProperty(t.prototype,"lastKey",{get:function(){return this.innerLastKey},enumerable:!1,configurable:!0}),t}();var lt=new Set(["ENTER","ESCAPE","ARROWUP","ARROWDOWN"]),ut={TOP:"W",LEFT:"A",BOTTOM:"S",RIGHT:"D",ATTACK:"K",PAUSE:"P"},ft="KeysStore_b3b5190a-3564-4911-b2e8-16c78102a4b0_";const dt=function(){function t(){return t.instance||(t.instance=this),t.instance}return t.prototype.getKey=function(t){return lt.has(t)?t:localStorage.getItem(ft+t)||ut[t]},t.prototype.setKey=function(t,e){localStorage.setItem(ft+t,e)},t}(),ht=function(){function t(){return t.instance||(this.keyboard=new pt,this.keysStore=new dt,t.instance=this),t.instance}return Object.defineProperty(t.prototype,"lastKey",{get:function(){return this.keyboard.lastKey},enumerable:!1,configurable:!0}),t.prototype.isActiveKey=function(t){return this.keyboard.isActiveKey(this.getKey(t))},t.prototype.getKey=function(t){return this.keysStore.getKey(t)},t.prototype.setKey=function(t,e){this.keysStore.setKey(t,e)},t}(),mt=function(){function t(t,e){this.keyboard=new ht,this.gameObject=t,this.virtualDOM=new ot,this.bulletsCollider=new ct(this.gameObject,"enemy"),this.bulletsStore=new at,this.lastAttackTime=Date.now()-500,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){this.gameObject.speed=function(t,e){var n=t.point.y<=350,o=t.point.x<=0,r=t.point.y>=600-t.size.height,i=t.point.x>=O-t.size.width,s=0,a=0;return e.isActiveKey("TOP")&&!n&&(a=-4),e.isActiveKey("LEFT")&&!o&&(s=-4),e.isActiveKey("BOTTOM")&&!r&&(a=4),e.isActiveKey("RIGHT")&&!i&&(s=4),new E(s,a)}(this.gameObject,this.keyboard),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=1,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t=Date.now();t>this.lastAttackTime+500&&this.keyboard.isActiveKey("ATTACK")&&(this.lastAttackTime=t,this.bulletsStore.addElement(new st("player",this.gameObject.point.clone(),new E(0,-4))))},t}();var yt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const bt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-playing",o}return yt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(mt);var gt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const wt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing",o}return gt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(mt);var _t=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const At=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing-after-damage",o.framesCount=0,o.isInvisiblePlayer=!0,o}return _t(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){this.isInvisiblePlayer||t.prototype.addToNextRender.call(this),this.framesCount++,this.framesCount>=e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER&&(this.isInvisiblePlayer=!this.isInvisiblePlayer,this.framesCount=0)},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER=5,e}(mt);var vt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Rt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-dead",o}return vt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(mt);var Et=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Ot=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="dead",o}return Et(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(mt),Tt=function(){function t(){return t.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",t.instance=this),t.instance}return t.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=3,this.gameObject=new Z({point:T.clone(),size:C.clone(),speed:I.clone(),background:"url(".concat(J,")"),zIndex:Y}),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){var t;return null!==(t=this.state.stateName)&&void 0!==t?t:"before-playing"},set:function(t){var e=this;switch(clearTimeout(this.timer),t){case"before-playing":this.state=new bt(this.gameObject,this.innerHealth);break;case"playing":this.state=new wt(this.gameObject,this.innerHealth);break;case"playing-after-damage":this.timer=setTimeout((function(){e.stateName="playing"}),3e3),this.state=new At(this.gameObject,this.innerHealth);break;case"before-dead":this.timer=setTimeout((function(){e.stateName="dead"}),0),this.state=new Rt(this.gameObject,this.innerHealth);break;case"dead":this.state=new Ot(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}(),Ct=n.p+"49dc2035dd05181f3af7.png",It=function(){function t(t,e){this.gameObject=t,this.virtualDOM=new ot,this.bulletsCollider=new ct(this.gameObject,"player"),this.bulletsStore=new at,this.lastAttackTime=Date.now()-150,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,n;this.gameObject.speed=(e=(t=this.gameObject).point.x<=50,n=t.speed.x,e?(n=Math.abs(n),new E(n,t.speed.y)):t.point.x>=750-t.size.width?(n=-Math.abs(n),new E(n,t.speed.y)):t.speed),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=10,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t,e,n,o,r=Date.now();r>this.lastAttackTime+150&&(this.lastAttackTime=r,this.bulletsStore.addElement((t=this.gameObject.point,e=this.gameObject.size,n=new v(t.x+e.width/2,t.y+e.height),o=new E(Math.floor(10*Math.random())-5,3),new st("enemy",n,o))))},t}();var xt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Bt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-playing",o}return xt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(It);var St=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const kt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing",o}return St(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(It);var Mt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Pt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="playing-after-damage",o}return Mt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(It);var Nt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Ut=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="before-dead",o}return Nt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(It);var jt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Dt=function(t){function e(e,n){var o=t.call(this,e,n)||this;return o.stateName="dead",o}return jt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(It),Lt=function(){function t(){return t.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",t.instance=this),t.instance}return t.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=400,this.gameObject=new Z({point:x.clone(),size:B.clone(),speed:S.clone(),zIndex:Q,background:"url(".concat(Ct,")")}),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){var e=this;switch(clearTimeout(this.timer),t){case"before-playing":this.state=new Bt(this.gameObject,this.innerHealth);break;case"playing":this.state=new kt(this.gameObject,this.innerHealth);break;case"playing-after-damage":this.timer=setTimeout((function(){console.log("some action after damage"),e.stateName="playing"}),500),this.state=new Pt(this.gameObject,this.innerHealth);break;case"before-dead":this.state=new Ut(this.gameObject,this.innerHealth),this.timer=setTimeout((function(){e.stateName="dead"}),500);break;case"dead":this.state=new Dt(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}(),Ft=n.p+"7467a9e3d648bcc674d6.png",Kt=n.p+"3d38fa44a32629a1f955.png",Ht=function(){function t(){if(!t.instance){this.enemy=new Lt,this.player=new Tt,this.virtualDOM=new ot,this.emptyBar=new Z({point:new v(0,0),size:new R(O,29),background:"#009",zIndex:et.emptyLifebar}),this.enemyEmptyHealth=new Z({point:new v(0,0),size:new R(400,29),background:"#000",zIndex:et.enemyEmptyHealth}),this.enemyHealth=new Z({point:new v(0,0),size:new R(this.enemy.health,29),background:"#f00",zIndex:et.enemyHealth});var e={x:1,y:1};this.healths=[];for(var n=1;n<=3;n++){var o=this.player.health>=n,r=new v(O-(e.x+k.width)*n,e.y);this.healths.push(new Z({point:r,size:k.clone(),background:"url(".concat(o?Ft:Kt,")"),zIndex:et.playerHealth}))}t.instance=this}return t.instance}return t.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},t.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(this.emptyBar)},t.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(this.enemyEmptyHealth)},t.prototype.addToRenderEnemyHealth=function(){this.enemyHealth.size=new R(this.enemy.health,29),this.virtualDOM.addElement(this.enemyHealth)},t.prototype.addToRenderPlayerHealth=function(){for(var t=1;t<=3;t++){var e=this.player.health>=t;this.healths[t-1].background="url(".concat(e?Ft:Kt,")"),this.virtualDOM.addElement(this.healths[t-1])}},t}(),Gt=function(){function t(){this.renderAPI=z(),this.virtualDOM=new ot,this.keyboard=new ht}return t.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},t}();var zt=new v(20,560),$t=new R(400,30),Vt=new Z({point:zt.clone(),size:$t.clone(),zIndex:nt}),qt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const Wt=function(t){function e(){var e=t.call(this)||this;return e.stateName="playing",e.player=new Tt,e.enemy=new Lt,e.bulletsStore=new at,e.lifebar=new Ht,e.isPause=!1,e.isPauseHintRendered=!1,e.isReadyToChangeIsPause=!0,e.timerOfIsPause=null,e.player.init(),e.enemy.init(),e.bulletsStore.init(),e.pauseHint=Vt.clone(),e.pauseHint.text="Игра на паузе. Нажмите ".concat(e.keyboard.getKey("PAUSE"),", чтобы продолжить"),e}return qt(e,t),e.prototype.doFrameBehavior=function(){this.processPauseController(),this.processExitToMenuController(),this.isPausePreventsRender()||(this.doBulletsFrameBehavior(),this.player.doFrameBehavior(),this.enemy.doFrameBehavior(),this.lifebar.doFrameBehavior(),this.doPauseHintFrameBehavior(),t.prototype.render.call(this))},e.prototype.processPauseController=function(){var t=this;this.keyboard.isActiveKey("PAUSE")&&(this.isReadyToChangeIsPause&&(this.isPause=!this.isPause,this.isPauseHintRendered=!1),this.isReadyToChangeIsPause=!1,clearTimeout(this.timerOfIsPause),this.timerOfIsPause=setTimeout((function(){t&&(t.isReadyToChangeIsPause=!0)}),50))},e.prototype.processExitToMenuController=function(){this.keyboard.isActiveKey("ESCAPE")&&(this.stateName="menu")},e.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(t){t.doFrameBehavior()}))},e.prototype.doPauseHintFrameBehavior=function(){this.isPause&&(this.addToRenderPauseHint(),this.isPauseHintRendered=!0)},e.prototype.addToRenderPauseHint=function(){this.virtualDOM.addElement(this.pauseHint)},e.prototype.isPausePreventsRender=function(){return this.isPause&&this.isPauseHintRendered},e}(Gt);var Xt=["new-game","settings"],Zt="#f00",Jt="#000",Yt=new Z({text:"Нажмите Enter, чтобы продолжить",point:zt.clone(),size:$t.clone()}),Qt=new Z({text:"Главное меню",point:new v(330,260),size:new R(150,30)}),te=new Z({text:"Новая игра",point:new v(340,300),size:new R(100,30)}),ee=new Z({text:"Настройки",point:new v(340,330),size:new R(100,30)}),ne=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const oe=function(t){function e(){var e=t.call(this)||this;return e.stateName="menu",e.chosenOptionIdx=0,e.newGameButton=te.clone(),e.settingsButton=ee.clone(),e}return ne(e,t),Object.defineProperty(e.prototype,"chosenOption",{get:function(){return Xt[this.chosenOptionIdx]},enumerable:!1,configurable:!0}),e.prototype.doFrameBehavior=function(){this.processKeyboard(),this.changeColorOfButtonsByChosenOption(),this.addToRenderElements(),t.prototype.render.call(this)},e.prototype.addToRenderElements=function(){this.virtualDOM.addElement(Yt),this.virtualDOM.addElement(Qt),this.virtualDOM.addElement(this.newGameButton),this.virtualDOM.addElement(this.settingsButton)},e.prototype.processKeyboard=function(){this.processPressingEnter(),this.processKeysForChoiceOfOption()},e.prototype.processPressingEnter=function(){this.keyboard.isActiveKey("ENTER")&&("new-game"===this.chosenOption&&(this.stateName="playing"),"settings"===this.chosenOption&&(this.stateName="settings"))},e.prototype.processKeysForChoiceOfOption=function(){this.processKeysForMovementToTop(),this.processKeysForMovementToBottom()},e.prototype.processKeysForMovementToTop=function(){(this.keyboard.isActiveKey("ARROWUP")||this.keyboard.isActiveKey("TOP"))&&(this.chosenOptionIdx=this.chosenOptionIdx<=0?0:this.chosenOptionIdx-1)},e.prototype.processKeysForMovementToBottom=function(){if(this.keyboard.isActiveKey("ARROWDOWN")||this.keyboard.isActiveKey("BOTTOM")){var t=Xt.length-1;this.chosenOptionIdx=this.chosenOptionIdx>=t?t:this.chosenOptionIdx+1}},e.prototype.changeColorOfButtonsByChosenOption=function(){this.newGameButton.textColor="new-game"===this.chosenOption?Zt:Jt,this.settingsButton.textColor="settings"===this.chosenOption?Zt:Jt},e}(Gt);var re=new Z({text:"Нажмите Escape, чтобы выйти назад в меню",point:zt.clone(),size:$t.clone()}),ie=new Z({text:"Настройки",point:new v(10,10),size:new R(100,30)}),se=new Z({text:"Чтобы отредактировать выбранную клавишу, нажмите Enter",point:new v(400,10),size:new R(390,60)}),ae=new Z({text:"Нажмите клавишу, на которую хотите назначить это действие",point:new v(400,10),size:new R(390,60)}),ce=["TOP","LEFT","BOTTOM","RIGHT","PAUSE","ATTACK"];const pe=function(t,e,n){this.type=t,this.caption=e,this.place=n},le=function(){function t(){this.virtualDOM=new ot,this.keyboard=new ht,this.keysViewArray=ce.map((function(t){return function(t){switch(t){case"TOP":return new pe(t,new Z({text:"Вперёд",point:new v(20,50),size:new R(50,30)}),new Z({point:new v(120,50),size:new R(50,30)}));case"LEFT":return new pe(t,new Z({text:"Влево",point:new v(20,80),size:new R(50,30)}),new Z({point:new v(120,80),size:new R(50,30)}));case"BOTTOM":return new pe(t,new Z({text:"Назад",point:new v(20,110),size:new R(50,30)}),new Z({point:new v(120,110),size:new R(50,30)}));case"RIGHT":return new pe(t,new Z({text:"Вправо",point:new v(20,140),size:new R(50,30)}),new Z({point:new v(120,140),size:new R(50,30)}));case"ATTACK":return new pe(t,new Z({text:"Атака",point:new v(20,220),size:new R(50,30)}),new Z({point:new v(120,220),size:new R(50,30)}));case"PAUSE":return new pe(t,new Z({text:"Пауза",point:new v(20,180),size:new R(50,30)}),new Z({point:new v(120,180),size:new R(50,30)}))}}(t)})),this.changeKeysInPlaces(),this.changeColorOfKeysByChosenOption(),this.chosenOptionIdx=0,this.stateName="initial"}return t.prototype.addToRenderElements=function(){this.addToRenderHeader(),this.addToRenderKeysViewArray()},t.prototype.addToRenderHeader=function(){this.virtualDOM.addElement(ie)},t.prototype.addToRenderKeysViewArray=function(){var t=this;this.keysViewArray.forEach((function(e){t.addToRenderKeysView(e)}))},t.prototype.addToRenderKeysView=function(t){this.virtualDOM.addElement(t.caption),this.virtualDOM.addElement(t.place)},t.prototype.changeKeysInPlaces=function(){var t=this;this.keysViewArray.forEach((function(e){e.place.text=t.keyboard.getKey(e.type)}))},t.prototype.changeColorOfKeysByChosenOption=function(){var t=this;this.keysViewArray.forEach((function(e,n){var o=t.chosenOptionIdx===n?"#00f":"#000";e.caption.textColor=o,e.place.textColor=o}))},t}();var ue=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const fe=function(t){function e(){var e=t.call(this)||this;return e.stateName="initial",e}return ue(e,t),e.prototype.processKeyboard=function(){},e.prototype.addToRenderElements=function(){t.prototype.addToRenderElements.call(this)},e}(le);var de=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const he=function(t){function e(){var e=t.call(this)||this;return e.stateName="ready-to-edit",e.ableToChooseOptions=!0,e}return de(e,t),e.prototype.processKeyboard=function(){this.processKeysForMovement(),this.processEnterForSwitchOnEditingState()},e.prototype.addToRenderElements=function(){this.virtualDOM.addElement(se),t.prototype.changeKeysInPlaces.call(this),t.prototype.changeColorOfKeysByChosenOption.call(this),t.prototype.addToRenderElements.call(this)},e.prototype.processEnterForSwitchOnEditingState=function(){this.keyboard.isActiveKey("ENTER")&&(this.stateName="editing")},e.prototype.processKeysForMovement=function(){this.ableToChooseOptions&&(this.processKeysForMovementToTop(),this.processKeysForMovementToBottom())},e.prototype.processKeysForMovementToTop=function(){(this.keyboard.isActiveKey("ARROWUP")||this.keyboard.isActiveKey("TOP"))&&(this.chosenOptionIdx=this.chosenOptionIdx<=0?0:this.chosenOptionIdx-1,this.lockKeysForMovement(),this.unlockKeysForMovementByTimeout())},e.prototype.processKeysForMovementToBottom=function(){if(this.keyboard.isActiveKey("ARROWDOWN")||this.keyboard.isActiveKey("BOTTOM")){var t=ce.length-1;this.chosenOptionIdx=this.chosenOptionIdx>=t?t:this.chosenOptionIdx+1,this.lockKeysForMovement(),this.unlockKeysForMovementByTimeout()}},e.prototype.lockKeysForMovement=function(){this.ableToChooseOptions=!1},e.prototype.unlockKeysForMovementByTimeout=function(){var t=this;setTimeout((function(){t&&(t.ableToChooseOptions=!0)}),300)},e}(le),me=function(){function t(t){this.calls=0,this.initialIsMaking=t.isMaking,this.initialCallsBeforeToggleIsMaking=t.callsBeforeToggleIsMaking,this.isMaking=this.initialIsMaking,this.callsBeforeToggleIsMaking=this.initialCallsBeforeToggleIsMaking}return t.prototype.tryToMake=function(t){this.calls++,this.calls>this.callsBeforeToggleIsMaking&&(this.calls=0,this.isMaking=!this.isMaking),this.isMaking&&t()},t.prototype.reset=function(){this.calls=0,this.isMaking=this.initialIsMaking,this.callsBeforeToggleIsMaking=this.initialCallsBeforeToggleIsMaking},t}();var ye=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const be=function(t){function e(){var n=t.call(this)||this;return n.stateName="editing",n.partTimeMaker=new me(e.PART_TIME_MAKER_SETTINGS),n}return ye(e,t),e.prototype.processKeyboard=function(){this.applyNewKey()},e.prototype.addToRenderElements=function(){t.prototype.changeColorOfKeysByChosenOption.call(this),this.virtualDOM.addElement(ae),t.prototype.addToRenderElements.call(this)},e.prototype.addToRenderKeysViewArray=function(){var t=this;this.keysViewArray.forEach((function(e,n){t.chosenOptionIdx===n?t.partTimeMaker.tryToMake((function(){t.addToRenderKeysView(e)})):t.addToRenderKeysView(e)}))},e.prototype.applyNewKey=function(){if(!["ESCAPE","ENTER"].includes(this.keyboard.lastKey)){var t=this.keysViewArray[this.chosenOptionIdx].type;this.keyboard.setKey(t,this.keyboard.lastKey),this.stateName="ready-to-edit"}},e.PART_TIME_MAKER_SETTINGS={callsBeforeToggleIsMaking:25,isMaking:!1},e}(le),ge=function(){function t(){return t.instance||(this.stateNameBefore="initial",this.stateName="initial",t.instance=this),t.instance}return t.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.stateName="initial",this.stateNameBefore="initial"},t.prototype.doFrameBehavior=function(){this.state.processKeyboard(),this.state.addToRenderElements(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(e){var n=this;switch(clearTimeout(this.timer),e){case"initial":this.state=new fe,this.timer=setTimeout((function(){n&&(n.stateName="ready-to-edit")}),t.INITIAL_STATE_TIME);break;case"ready-to-edit":this.state=new he;break;case"editing":this.state=new be}},enumerable:!1,configurable:!0}),t.INITIAL_STATE_TIME=200,t}();var we=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();const _e=function(t){function e(){var e=t.call(this)||this;return e.stateName="settings",e.settingsPage=new ge,e.settingsPage.init(),e}return we(e,t),e.prototype.doFrameBehavior=function(){this.processKeyboard(),this.settingsPage.doFrameBehavior(),this.virtualDOM.addElement(re),t.prototype.render.call(this)},e.prototype.processKeyboard=function(){this.processEscapeForExit()},e.prototype.processEscapeForExit=function(){this.keyboard.isActiveKey("ESCAPE")&&(this.stateName="menu")},e}(Gt);(new(function(){function t(){return t.instance||(this.renderAPI=z(),this.gameLoop=new $,this.stateName="menu",this.stateNameBefore=this.state.stateName,t.instance=this),t.instance}return Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){switch(t){case"playing":this.state=new Wt;break;case"settings":this.state=new _e;break;case"menu":this.state=new oe}},enumerable:!1,configurable:!0}),t.prototype.start=function(){var t=this;new V(this.renderAPI).render(),this.gameLoop.start((function(){t.state.doFrameBehavior(),t.applyNewState()}))},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
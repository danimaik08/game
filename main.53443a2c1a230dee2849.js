(()=>{"use strict";var t={5124:(t,e,o)=>{o.d(e,{A:()=>pe});var n=o(1354),r=o.n(n),i=o(6314),s=o.n(i),a=o(4417),c=o.n(a),l=new URL(o(1960),o.b),p=new URL(o(4436),o.b),u=new URL(o(6434),o.b),f=new URL(o(6402),o.b),d=new URL(o(8298),o.b),m=new URL(o(7038),o.b),h=new URL(o(8516),o.b),b=new URL(o(5844),o.b),y=new URL(o(6170),o.b),g=new URL(o(7294),o.b),_=new URL(o(4388),o.b),w=new URL(o(5972),o.b),A=new URL(o(3689),o.b),v=new URL(o(3265),o.b),R=new URL(o(5361),o.b),C=new URL(o(643),o.b),E=new URL(o(1889),o.b),O=new URL(o(2985),o.b),I=new URL(o(6681),o.b),x=new URL(o(6747),o.b),B=new URL(o(8698),o.b),T=new URL(o(7486),o.b),S=new URL(o(9012),o.b),N=new URL(o(1380),o.b),k=new URL(o(8796),o.b),M=new URL(o(6576),o.b),P=new URL(o(7830),o.b),U=new URL(o(8262),o.b),j=new URL(o(4498),o.b),D=new URL(o(374),o.b),L=new URL(o(5516),o.b),F=new URL(o(4604),o.b),H=new URL(o(6490),o.b),G=new URL(o(910),o.b),$=new URL(o(6980),o.b),K=new URL(o(740),o.b),z=new URL(o(8833),o.b),V=new URL(o(7081),o.b),q=new URL(o(7385),o.b),X=new URL(o(3691),o.b),W=new URL(o(4759),o.b),Y=new URL(o(1919),o.b),Z=new URL(o(255),o.b),J=new URL(o(2553),o.b),Q=new URL(o(8146),o.b),tt=new URL(o(1302),o.b),et=new URL(o(8332),o.b),ot=new URL(o(9964),o.b),nt=s()(r()),rt=c()(l),it=c()(l,{hash:"?#iefix"}),st=c()(p),at=c()(u),ct=c()(f),lt=c()(d),pt=c()(d,{hash:"?#iefix"}),ut=c()(m),ft=c()(h),dt=c()(b),mt=c()(y),ht=c()(y,{hash:"?#iefix"}),bt=c()(g),yt=c()(_),gt=c()(w),_t=c()(A),wt=c()(A,{hash:"?#iefix"}),At=c()(v),vt=c()(R),Rt=c()(C),Ct=c()(E),Et=c()(E,{hash:"?#iefix"}),Ot=c()(O),It=c()(I),xt=c()(x),Bt=c()(B),Tt=c()(B,{hash:"?#iefix"}),St=c()(T),Nt=c()(S),kt=c()(N),Mt=c()(k),Pt=c()(k,{hash:"?#iefix"}),Ut=c()(M),jt=c()(P),Dt=c()(U),Lt=c()(j),Ft=c()(j,{hash:"?#iefix"}),Ht=c()(D),Gt=c()(L),$t=c()(F),Kt=c()(H),zt=c()(H,{hash:"?#iefix"}),Vt=c()(G),qt=c()($),Xt=c()(K),Wt=c()(z),Yt=c()(z,{hash:"?#iefix"}),Zt=c()(V),Jt=c()(q),Qt=c()(X),te=c()(W),ee=c()(W,{hash:"?#iefix"}),oe=c()(Y),ne=c()(Z),re=c()(J),ie=c()(Q),se=c()(Q,{hash:"?#iefix"}),ae=c()(tt),ce=c()(et),le=c()(ot);nt.push([t.id,`@font-face {\n    font-family: 'Roboto';\n    src: url(${rt});\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url(${it}) format('embedded-opentype'),\n        url(${st}) format('woff2'),\n        url(${at}) format('woff'),\n        url(${ct}) format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${lt});\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url(${pt}) format('embedded-opentype'),\n        url(${ut}) format('woff2'),\n        url(${ft}) format('woff'),\n        url(${dt}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${mt});\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url(${ht}) format('embedded-opentype'),\n        url(${bt}) format('woff2'),\n        url(${yt}) format('woff'),\n        url(${gt}) format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${_t});\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url(${wt}) format('embedded-opentype'),\n        url(${At}) format('woff2'),\n        url(${vt}) format('woff'),\n        url(${Rt}) format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Ct});\n    src: local('Roboto'), local('Roboto-Regular'),\n        url(${Et}) format('embedded-opentype'),\n        url(${Ot}) format('woff2'),\n        url(${It}) format('woff'),\n        url(${xt}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Bt});\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url(${Tt}) format('embedded-opentype'),\n        url(${St}) format('woff2'),\n        url(${Nt}) format('woff'),\n        url(${kt}) format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Mt});\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url(${Pt}) format('embedded-opentype'),\n        url(${Ut}) format('woff2'),\n        url(${jt}) format('woff'),\n        url(${Dt}) format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Lt});\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url(${Ft}) format('embedded-opentype'),\n        url(${Ht}) format('woff2'),\n        url(${Gt}) format('woff'),\n        url(${$t}) format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Kt});\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url(${zt}) format('embedded-opentype'),\n        url(${Vt}) format('woff2'),\n        url(${qt}) format('woff'),\n        url(${Xt}) format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Wt});\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url(${Yt}) format('embedded-opentype'),\n        url(${Zt}) format('woff2'),\n        url(${Jt}) format('woff'),\n        url(${Qt}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${te});\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url(${ee}) format('embedded-opentype'),\n        url(${oe}) format('woff2'),\n        url(${ne}) format('woff'),\n        url(${re}) format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(${ie});\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url(${se}) format('embedded-opentype'),\n        url(${ae}) format('woff2'),\n        url(${ce}) format('woff'),\n        url(${le}) format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n`,"",{version:3,sources:["webpack://./src/assets/fonts/stylesheet.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAAkC;IAClC;;;;kEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,4CAA2B;IAC3B;;;;kEAI6C;IAC7C,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAkC;IAClC;;;;mEAIoD;IACpD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA8B;IAC9B;;;;mEAIgD;IAChD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAiC;IACjC;;;;mEAImD;IACnD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAAmC;IACnC;;;;mEAIqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA2B;IAC3B;;;;mEAI6C;IAC7C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA4B;IAC5B;;;;mEAI8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,6CAA6B;IAC7B;;;;mEAI+C;IAC/C,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BlackItalic.eot');\n    src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n        url('Roboto-BlackItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BlackItalic.woff2') format('woff2'),\n        url('Roboto-BlackItalic.woff') format('woff'),\n        url('Roboto-BlackItalic.ttf') format('truetype');\n    font-weight: 900;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Bold.eot');\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Bold.woff2') format('woff2'),\n        url('Roboto-Bold.woff') format('woff'),\n        url('Roboto-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-BoldItalic.eot');\n    src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n        url('Roboto-BoldItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-BoldItalic.woff2') format('woff2'),\n        url('Roboto-BoldItalic.woff') format('woff'),\n        url('Roboto-BoldItalic.ttf') format('truetype');\n    font-weight: bold;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-LightItalic.eot');\n    src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n        url('Roboto-LightItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-LightItalic.woff2') format('woff2'),\n        url('Roboto-LightItalic.woff') format('woff'),\n        url('Roboto-LightItalic.ttf') format('truetype');\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Regular.eot');\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('Roboto-Regular.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Regular.woff2') format('woff2'),\n        url('Roboto-Regular.woff') format('woff'),\n        url('Roboto-Regular.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-ThinItalic.eot');\n    src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n        url('Roboto-ThinItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-ThinItalic.woff2') format('woff2'),\n        url('Roboto-ThinItalic.woff') format('woff'),\n        url('Roboto-ThinItalic.ttf') format('truetype');\n    font-weight: 100;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Black.eot');\n    src: local('Roboto Black'), local('Roboto-Black'),\n        url('Roboto-Black.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Black.woff2') format('woff2'),\n        url('Roboto-Black.woff') format('woff'),\n        url('Roboto-Black.ttf') format('truetype');\n    font-weight: 900;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-MediumItalic.eot');\n    src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n        url('Roboto-MediumItalic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-MediumItalic.woff2') format('woff2'),\n        url('Roboto-MediumItalic.woff') format('woff'),\n        url('Roboto-MediumItalic.ttf') format('truetype');\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Thin.eot');\n    src: local('Roboto Thin'), local('Roboto-Thin'),\n        url('Roboto-Thin.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Thin.woff2') format('woff2'),\n        url('Roboto-Thin.woff') format('woff'),\n        url('Roboto-Thin.ttf') format('truetype');\n    font-weight: 100;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Light.eot');\n    src: local('Roboto Light'), local('Roboto-Light'),\n        url('Roboto-Light.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Light.woff2') format('woff2'),\n        url('Roboto-Light.woff') format('woff'),\n        url('Roboto-Light.ttf') format('truetype');\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Italic.eot');\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('Roboto-Italic.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Italic.woff2') format('woff2'),\n        url('Roboto-Italic.woff') format('woff'),\n        url('Roboto-Italic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('Roboto-Medium.eot');\n    src: local('Roboto Medium'), local('Roboto-Medium'),\n        url('Roboto-Medium.eot?#iefix') format('embedded-opentype'),\n        url('Roboto-Medium.woff2') format('woff2'),\n        url('Roboto-Medium.woff') format('woff'),\n        url('Roboto-Medium.ttf') format('truetype');\n    font-weight: 500;\n    font-style: normal;\n}\n\n"],sourceRoot:""}]);const pe=nt},6523:(t,e,o)=>{o.d(e,{A:()=>a});var n=o(1354),r=o.n(n),i=o(6314),s=o.n(i)()(r());s.push([t.id,"html, body {\n  margin: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX",sourcesContent:["html, body {\n  margin: 0;\n}"],sourceRoot:""}]);const a=s},6314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var o="",n=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),n&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=t(e),n&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(t,o,n,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(n)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var l=0;l<t.length;l++){var p=[].concat(t[l]);n&&s[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),o&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=o):p[2]=o),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},4417:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},1354:t=>{t.exports=function(t){var e=t[1],o=t[3];if(!o)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},5072:t=>{var e=[];function o(t){for(var o=-1,n=0;n<e.length;n++)if(e[n].identifier===t){o=n;break}return o}function n(t,n){for(var i={},s=[],a=0;a<t.length;a++){var c=t[a],l=n.base?c[0]+n.base:c[0],p=i[l]||0,u="".concat(l," ").concat(p);i[l]=p+1;var f=o(u),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)e[f].references++,e[f].updater(d);else{var m=r(d,n);n.byIndex=a,e.splice(a,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function r(t,e){var o=e.domAPI(e);return o.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;o.update(t=e)}else o.remove()}}t.exports=function(t,r){var i=n(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<i.length;s++){var a=o(i[s]);e[a].references--}for(var c=n(t,r),l=0;l<i.length;l++){var p=o(i[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}i=c}}},7659:t=>{var e={};t.exports=function(t,o){var n=function(t){if(void 0===e[t]){var o=document.querySelector(t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}e[t]=o}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(o)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},5056:(t,e,o)=>{t.exports=function(t){var e=o.nc;e&&t.setAttribute("nonce",e)}},7825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(o){!function(t,e,o){var n="";o.supports&&(n+="@supports (".concat(o.supports,") {")),o.media&&(n+="@media ".concat(o.media," {"));var r=void 0!==o.layer;r&&(n+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),n+=o.css,r&&(n+="}"),o.media&&(n+="}"),o.supports&&(n+="}");var i=o.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,o)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},1113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},8796:(t,e,o)=>{t.exports=o.p+"d747b63eb41cdc64e3dd.eot"},8262:(t,e,o)=>{t.exports=o.p+"8e5479279b074720e15f.ttf"},7830:(t,e,o)=>{t.exports=o.p+"88d7f1b3ca9a9494d8e3.woff"},6576:(t,e,o)=>{t.exports=o.p+"ae0c1d409f7d45d81c29.woff2"},1960:(t,e,o)=>{t.exports=o.p+"32f9679ea3ede2ca14de.eot"},6402:(t,e,o)=>{t.exports=o.p+"508cb30d2090ab879d2f.ttf"},6434:(t,e,o)=>{t.exports=o.p+"3123587706218b4d8187.woff"},4436:(t,e,o)=>{t.exports=o.p+"71b2b84d5d1a55271b57.woff2"},8298:(t,e,o)=>{t.exports=o.p+"6490694b37b0ee09bd91.eot"},5844:(t,e,o)=>{t.exports=o.p+"5e9f6556d3c0bf6230f0.ttf"},8516:(t,e,o)=>{t.exports=o.p+"3f2cbde6b72e8d05669f.woff"},7038:(t,e,o)=>{t.exports=o.p+"6cd35edfbc0d7a417131.woff2"},6170:(t,e,o)=>{t.exports=o.p+"e5f75ce1f7e72a64d436.eot"},5972:(t,e,o)=>{t.exports=o.p+"1e46c5294501ef46e23b.ttf"},4388:(t,e,o)=>{t.exports=o.p+"997a1e8970d2b7e50fff.woff"},7294:(t,e,o)=>{t.exports=o.p+"74126ecd07ad0d25d3f6.woff2"},4759:(t,e,o)=>{t.exports=o.p+"7588d6373c3525bc74cd.eot"},2553:(t,e,o)=>{t.exports=o.p+"4302c2e2c9e789c4c7ea.ttf"},255:(t,e,o)=>{t.exports=o.p+"0d0bf30e7eeb4f6e7fd5.woff"},1919:(t,e,o)=>{t.exports=o.p+"007ccbd3e8708c6afef8.woff2"},8833:(t,e,o)=>{t.exports=o.p+"d592a653abb7a57fedd8.eot"},3691:(t,e,o)=>{t.exports=o.p+"13d61ef8e609b548d9b5.ttf"},7385:(t,e,o)=>{t.exports=o.p+"df0f59d80526acc6d0cd.woff"},7081:(t,e,o)=>{t.exports=o.p+"d537674e9e217fa53a13.woff2"},3689:(t,e,o)=>{t.exports=o.p+"0ad9ca04101ace1b39d1.eot"},643:(t,e,o)=>{t.exports=o.p+"ca7144f68f54653d3728.ttf"},5361:(t,e,o)=>{t.exports=o.p+"3c494714cdd1de859813.woff"},3265:(t,e,o)=>{t.exports=o.p+"6006fa5b67e554e06562.woff2"},8146:(t,e,o)=>{t.exports=o.p+"f9f0c87146a33023da7e.eot"},9964:(t,e,o)=>{t.exports=o.p+"ef677e217f2009c16854.ttf"},8332:(t,e,o)=>{t.exports=o.p+"b14ca2d2b289afceb0b0.woff"},1302:(t,e,o)=>{t.exports=o.p+"fc0337b9cf1cce2e6e1e.woff2"},4498:(t,e,o)=>{t.exports=o.p+"c000f0984de5d20c8eab.eot"},4604:(t,e,o)=>{t.exports=o.p+"ff1379d2f5bd26261cb2.ttf"},5516:(t,e,o)=>{t.exports=o.p+"9a91a0398c5cb21f0199.woff"},374:(t,e,o)=>{t.exports=o.p+"ace58ae211415a1f378b.woff2"},1889:(t,e,o)=>{t.exports=o.p+"30b57652c88c5dbd65de.eot"},6747:(t,e,o)=>{t.exports=o.p+"25e40da956314b12d333.ttf"},6681:(t,e,o)=>{t.exports=o.p+"31012f9b3e3da44f87e8.woff"},2985:(t,e,o)=>{t.exports=o.p+"a25806274237d06e00a6.woff2"},6490:(t,e,o)=>{t.exports=o.p+"ae807ad4142f3eae2e0c.eot"},740:(t,e,o)=>{t.exports=o.p+"7d12c80b1925091e4fec.ttf"},6980:(t,e,o)=>{t.exports=o.p+"674b1d2bd9d781457c17.woff"},910:(t,e,o)=>{t.exports=o.p+"0b33782009e32497dba2.woff2"},8698:(t,e,o)=>{t.exports=o.p+"bc4d192a93ba33f68109.eot"},1380:(t,e,o)=>{t.exports=o.p+"491dd1cc3dfda2b79d09.ttf"},9012:(t,e,o)=>{t.exports=o.p+"d5937d18c46d7ae260b6.woff"},7486:(t,e,o)=>{t.exports=o.p+"3669a8fac8736f85a7f1.woff2"}},e={};function o(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={id:n,exports:{}};return t[n](i,i.exports,o),i.exports}o.m=t,o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;o.g.importScripts&&(t=o.g.location+"");var e=o.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=n[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=t})(),o.b=document.baseURI||self.location.href,o.nc=void 0;var n=o(5072),r=o.n(n),i=o(7825),s=o.n(i),a=o(7659),c=o.n(a),l=o(5056),p=o.n(l),u=o(540),f=o.n(u),d=o(1113),m=o.n(d),h=o(6523),b={};b.styleTagTransform=m(),b.setAttributes=p(),b.insert=c().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=f(),r()(h.A,b),h.A&&h.A.locals&&h.A.locals;var y=o(5124),g={};g.styleTagTransform=m(),g.setAttributes=p(),g.insert=c().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=f(),r()(y.A,g),y.A&&y.A.locals&&y.A.locals;var _="root",w="game-window";const A=function(){},v=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}(),R=function(){function t(t,e){this.width=t,this.height=e}return t.prototype.clone=function(){return new t(this.width,this.height)},t.prototype.valueOf=function(){return this.width+" "+this.height},t}(),C=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.valueOf=function(){return this.x+" "+this.y},t}();var E,O,I,x,B,T,S=800,N=new v(380,500),k=new R(34,47),M=new C(0,0),P=new v(350,50),U=new R(100,100),j=new C(4,0),D=new R(30,27),L=new R(14,14),F=null!==(E=localStorage.getItem("KEY_TOP"))&&void 0!==E?E:"W",H=null!==(O=localStorage.getItem("KEY_LEFT"))&&void 0!==O?O:"A",G=null!==(I=localStorage.getItem("KEY_BOTTOM"))&&void 0!==I?I:"S",$=null!==(x=localStorage.getItem("KEY_RIGHT"))&&void 0!==x?x:"D",K=null!==(B=localStorage.getItem("KEY_ATTACK"))&&void 0!==B?B:"K",z=null!==(T=localStorage.getItem("KEY_PAUSE"))&&void 0!==T?T:"P";console.log("keys",F,H,G,$,K,z);var V="\n  width: 100%;\n  height: 100vh;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ".concat("\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n","\n"),q="\n  width: ".concat(S,"px;\n  height: ").concat(600,"px;\n  background: #bbf;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n  cursor: default;\n");function X(t,e){t.id=e,{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE&&(t.dataset.testid=e)}function W(){var t=document.getElementById(_);if(!t)throw new Error('BrowserAPI Error: method "'.concat(W.name,'" - root not found'));var e=document.createElement("div");X(e,w),e.setAttribute("style",q),t.appendChild(e)}var Y=function(){function t(t){this.gameObject=t,this.innerElement=null}return Object.defineProperty(t.prototype,"element",{get:function(){return this.innerElement},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.createElement=function(){this.innerElement=document.createElement("div")},t.prototype.setElement=function(t){this.innerElement=t},t.prototype.applyActualChange=function(){this.element.setAttribute("style",this.css),this.element.innerHTML=this.gameObject.text},Object.defineProperty(t.prototype,"css",{get:function(){var t=this.gameObject,e=t.point,o=t.size,n=t.background,r=t.textColor,i=t.zIndex;return"\n    position: absolute;\n    top: ".concat(e.y,"px;\n    left: ").concat(e.x,"px;\n    z-index: ").concat(i,";\n    width: ").concat(o.width,"px;\n    height: ").concat(o.height,"px;\n    background: ").concat(n,";\n    color: ").concat(r,";\n    ")},enumerable:!1,configurable:!0}),t}();const Z=Y;var J,Q=(J=function(t,e){return J=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},J(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}J(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});const tt=function(t){function e(){var o=t.call(this)||this;return o.elementsMap={},e.instance||(e.instance=o),e.instance}return Q(e,t),Object.defineProperty(e.prototype,"window",{get:function(){var t=document.getElementById(w);if(!t)throw new Error('BrowserAPI Error: you can\'t use property "window" before call of method "renderGameWindow"');return t},enumerable:!1,configurable:!0}),e.prototype.renderGameWindow=function(){var t,e;t=document.querySelector("body"),X(e=document.createElement("div"),_),e.setAttribute("style",V),t.appendChild(e),W()},e.prototype.clearAll=function(){document.body.innerHTML=""},e.prototype.render=function(t){var e=this;t.forEach((function(t){switch(t.action){case"mount":e.mount(t.gameObject);break;case"unmount":e.unmount(t.gameObject);break;case"update":e.update(t.gameObject)}}))},e.prototype.mount=function(t){var e=new Z(t);e.createElement(),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[e.id]=e},e.prototype.update=function(t){var e=new Z(t),o=this.elementsMap[t.id];e.setElement(o.element),e.applyActualChange(),this.window.appendChild(e.element),this.elementsMap[t.id]=e},e.prototype.unmount=function(t){this.elementsMap[t.id].element.remove(),delete this.elementsMap[t.id]},e.instance=null,e}(A);var et=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const ot=function(t){function e(){return t.call(this)||this}return et(e,t),e.prototype.renderGameWindow=function(){console.log("renderGameWindow")},e.prototype.clearAll=function(){console.log("clearAll")},e.prototype.render=function(t){console.log("render")},e}(A);function nt(){var t,e=null!==(t={TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.RENDER_API)&&void 0!==t?t:"browser";switch(e){case"browser":return new tt;case"fake":return new ot;default:throw new Error("Invalid env RENDER_API: ".concat(e))}}const rt=function(){function t(e){return void 0===e&&(e=33),t.instance||(this.lastFrameTime=Date.now(),this.frameDuration=e,t.instance=this),t.instance}return t.prototype.start=function(t){var e=this,o=function(){var n=Date.now();e.lastFrameTime+e.frameDuration<=n&&(e.lastFrameTime=n,t()),requestAnimationFrame(o)};o()},t}(),it=function(){function t(e){return this.renderAPI=null,t.instance||(this.renderAPI=e,t.instance=this),t.instance}return t.prototype.render=function(){this.renderAPI.renderGameWindow()},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.renderAPI.clearAll(),this.renderAPI=null,t.instance=null},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('GameWindow Error: called method "destroy" (which for tests only!) not in tests');if(!this.renderAPI)throw new Error('GameWindow Error: called method "destroy" without adding of renderAPI')},t.instance=null,t}();var st,at;const ct=(st="",at=0,function(){var t=Date.now()+"";return st===t?(at++,st+" "+at):(st=t,t)});var lt=function(){function t(t){var e,o,n,r,i,s,a,c;this.id=null!==(e=null==t?void 0:t.id)&&void 0!==e?e:ct(),this.point=null!==(o=null==t?void 0:t.point)&&void 0!==o?o:new v(0,0),this.size=null!==(n=null==t?void 0:t.size)&&void 0!==n?n:new R(1,1),this.speed=null!==(r=null==t?void 0:t.speed)&&void 0!==r?r:new C(0,0),this.zIndex=null!==(i=null==t?void 0:t.zIndex)&&void 0!==i?i:1,this.text=null!==(s=null==t?void 0:t.text)&&void 0!==s?s:"",this.textColor=null!==(a=null==t?void 0:t.textColor)&&void 0!==a?a:"#000",this.background=null!==(c=null==t?void 0:t.background)&&void 0!==c?c:"transparent"}return t.prototype.move=function(){this.point=new v(this.point.x+this.speed.x,this.point.y+this.speed.y)},t.prototype.clone=function(){return new t(this)},t}();const pt=lt,ut=o.p+"98ce5afade1e5dcf76f2.png",ft=4,dt=5,mt=6,ht=7;var bt=function(){function t(){return t.instance||(this.prevElements={},this.nextElements={},t.instance=this),t.instance}return t.prototype.addElement=function(t){this.nextElements[t.id]=t},t.prototype.prepareForNewFrame=function(){this.prevElements={},this.cloneNextElementsIntoPrevElements(),this.nextElements={}},t.prototype.getChanges=function(){var t=this,e=this.getAllIdsFromMaps(),o=[];return e.forEach((function(e){o.push(t.getChangeForElementById(e))})),o},t.prototype.destroy=function(){this.handleErrorsForDestroy(),this.prevElements=null,this.nextElements=null,t.instance=null},t.prototype.cloneNextElementsIntoPrevElements=function(){for(var t in this.nextElements)this.prevElements[t]=this.nextElements[t].clone()},t.prototype.handleErrorsForDestroy=function(){if(!{TERM_PROGRAM:"vscode",NODE:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node",INIT_CWD:"/Users/sunlight/dev/game",TERM:"xterm-256color",SHELL:"/bin/zsh",TMPDIR:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/",npm_config_global_prefix:"/opt/homebrew",TERM_PROGRAM_VERSION:"1.92.2",ORIGINAL_XDG_CURRENT_DESKTOP:"undefined",MallocNanoZone:"0",COLOR:"1",npm_config_noproxy:"",npm_config_local_prefix:"/Users/sunlight/dev/game",USER:"sunlight",COMMAND_MODE:"unix2003",npm_config_globalconfig:"/opt/homebrew/etc/npmrc",SSH_AUTH_SOCK:"/private/tmp/com.apple.launchd.2kUZAmNzPo/Listeners",__CF_USER_TEXT_ENCODING:"0x1F5:0x0:0x0",npm_execpath:"/opt/homebrew/lib/node_modules/npm/bin/npm-cli.js",PATH:"/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/Users/sunlight/dev/game/node_modules/.bin:/Users/sunlight/dev/node_modules/.bin:/Users/sunlight/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin:/opt/homebrew/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin:/opt/homebrew/opt/node@20/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin",_:"/Users/sunlight/dev/game/node_modules/.bin/webpack",npm_package_json:"/Users/sunlight/dev/game/package.json",__CFBundleIdentifier:"com.microsoft.VSCode",npm_config_init_module:"/Users/sunlight/.npm-init.js",npm_config_userconfig:"/Users/sunlight/.npmrc",PWD:"/Users/sunlight/dev/game",npm_command:"run-script",EDITOR:"vi",npm_lifecycle_event:"build:prod",LANG:"en_US.UTF-8",npm_package_name:"game",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",XPC_FLAGS:"0x0",npm_config_npm_version:"10.8.3",npm_config_node_gyp:"/opt/homebrew/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",XPC_SERVICE_NAME:"0",npm_package_version:"1.0.0",SHLVL:"3",HOME:"/Users/sunlight",VSCODE_GIT_ASKPASS_MAIN:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",LOGNAME:"sunlight",npm_config_cache:"/Users/sunlight/.npm",npm_lifecycle_script:"webpack --env mode=production",VSCODE_GIT_IPC_HANDLE:"/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/vscode-git-0836372a79.sock",npm_config_user_agent:"npm/10.8.3 node/v20.17.0 darwin arm64 workspaces/false",VSCODE_GIT_ASKPASS_NODE:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",GIT_ASKPASS:"/private/var/folders/0g/fpfprh9d6h7cb20cyf5pnssm0000gn/T/AppTranslocation/06C19598-F87A-474E-B810-9F38A6B76EB0/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",COLORTERM:"truecolor",npm_config_prefix:"/opt/homebrew",npm_node_execpath:"/opt/homebrew/Cellar/node@20/20.17.0/bin/node"}.IS_TEST_MODE)throw new Error('VirtualDOM Error: called method "destroy" (which for tests only!) not in tests')},t.prototype.getAllIdsFromMaps=function(){var t=new Set;for(var e in this.prevElements)t.add(e);for(var e in this.nextElements)t.add(e);return t},t.prototype.getChangeForElementById=function(t){var e,o,n=null!==(e=this.prevElements[t])&&void 0!==e?e:null,r=null!==(o=this.nextElements[t])&&void 0!==o?o:null;return n?r?{gameObject:r,action:this.isElementUpdated(t)?"update":"not-a-change"}:{gameObject:n,action:"unmount"}:{gameObject:r,action:"mount"}},t.prototype.isElementUpdated=function(t){var e=this.prevElements[t],o=this.nextElements[t];for(var n in e){var r=n;if(e[r].valueOf()!==o[r].valueOf())return!0}return!1},t}();const yt=bt,gt=o.p+"f6daa77bf4e4dd5f7f9f.png",_t=o.p+"51183ae04093a5b578b5.png",wt=function(){function t(e,o,n){this.type=e,this.virtualDOM=new yt,this.gameObject=t.createInitialSprite(this.type,o,n)}return Object.defineProperty(t.prototype,"point",{get:function(){return this.gameObject.point},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.gameObject.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this.gameObject.id},enumerable:!1,configurable:!0}),t.prototype.doFrameBehavior=function(){this.processMovement(),this.addToNextRender()},t.createInitialSprite=function(t,e,o){return new pt({point:e.clone(),size:L.clone(),speed:o.clone(),zIndex:3,background:"url(".concat("enemy"===t?gt:_t,")")})},t.prototype.processMovement=function(){this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t}(),At=function(){function t(){var e=this;return t.instance||(this.keys=new Set,t.instance=this,document.addEventListener("keydown",(function(t){e.keys.add(t.key.toUpperCase())})),document.addEventListener("keyup",(function(t){e.keys.delete(t.key.toUpperCase())}))),t.instance}return t.prototype.isActiveKey=function(t){return this.keys.has(t.toUpperCase())},t}(),vt=function(){function t(){return t.instance||(this.innerBullets=[],t.instance=this),t.instance}return t.prototype.removeBulletsOutsideScreen=function(){this.innerBullets=this.innerBullets.filter((function(t){return!(t.point.x+t.size.width<0||t.point.x>S||t.point.y+t.size.height<0||t.point.y>600)}))},t.prototype.addElement=function(t){this.innerBullets.push(t)},t.prototype.removeElement=function(t){this.innerBullets=this.innerBullets.filter((function(e){return e.id!==t.id}))},Object.defineProperty(t.prototype,"bullets",{get:function(){return this.innerBullets},enumerable:!1,configurable:!0}),t}(),Rt=function(){function t(t,e){this.target=t,this.bulletType=e,this.bulletsStore=new vt}return t.prototype.tryToCollide=function(t){var e=this;this.bulletsStore.bullets.forEach((function(o){e.bulletType===o.type&&function(t,e){var o=t.point.x,n=t.point.x+t.size.width,r=e.point.x,i=e.point.x+e.size.width;if(o>=r&&o<=i||n>=r&&n<=i){var s=t.point.y,a=t.point.y+t.size.height,c=e.point.y,l=e.point.y+e.size.height;if(s>=c&&s<=l||a>=c&&a<=l)return!0}return!1}(o,e.target)&&(t(),e.bulletsStore.removeElement(o))}))},t}(),Ct=function(){function t(t,e){this.keyboardController=new At,this.gameObject=t,this.virtualDOM=new yt,this.bulletsCollider=new Rt(this.gameObject,"enemy"),this.bulletsStore=new vt,this.lastAttackTime=Date.now()-500,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,o,n,r,i,s,a;this.gameObject.speed=(t=this.gameObject,e=this.keyboardController,o=t.point.y<=350,n=t.point.x<=0,r=t.point.y>=600-t.size.height,i=t.point.x>=S-t.size.width,s=0,a=0,e.isActiveKey(F)&&!o&&(a=-4),e.isActiveKey(H)&&!n&&(s=-4),e.isActiveKey(G)&&!r&&(a=4),e.isActiveKey($)&&!i&&(s=4),new C(s,a)),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=1,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t=Date.now();t>this.lastAttackTime+500&&this.keyboardController.isActiveKey(K)&&(this.lastAttackTime=t,this.bulletsStore.addElement(new wt("player",this.gameObject.point.clone(),new C(0,-4))))},t}();var Et=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Ot=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-playing",n}return Et(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var It=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const xt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing",n}return It(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Ct);var Bt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Tt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing-after-damage",n.framesCount=0,n.isInvisiblePlayer=!0,n}return Bt(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){this.isInvisiblePlayer||t.prototype.addToNextRender.call(this),this.framesCount++,this.framesCount>=e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER&&(this.isInvisiblePlayer=!this.isInvisiblePlayer,this.framesCount=0)},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e.MAX_FRAMES_BEFORE_TOGGLE_IS_INVISIBLE_PLAYER=5,e}(Ct);var St=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Nt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-dead",n}return St(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var kt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Mt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="dead",n}return kt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Ct);var Pt=function(){function t(){return t.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",t.instance=this),t.instance}return t.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=3,this.gameObject=new pt({point:N.clone(),size:k.clone(),speed:M.clone(),background:"url(".concat(ut,")"),zIndex:2}),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){var t;return null!==(t=this.state.stateName)&&void 0!==t?t:"before-playing"},set:function(t){var e=this;switch(clearTimeout(this.timer),t){case"before-playing":this.state=new Ot(this.gameObject,this.innerHealth);break;case"playing":this.state=new xt(this.gameObject,this.innerHealth);break;case"playing-after-damage":this.timer=setTimeout((function(){e.stateName="playing"}),3e3),this.state=new Tt(this.gameObject,this.innerHealth);break;case"before-dead":this.timer=setTimeout((function(){e.stateName="dead"}),0),this.state=new Nt(this.gameObject,this.innerHealth);break;case"dead":this.state=new Mt(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}();const Ut=Pt,jt=o.p+"49dc2035dd05181f3af7.png",Dt=function(){function t(t,e){this.gameObject=t,this.virtualDOM=new yt,this.bulletsCollider=new Rt(this.gameObject,"player"),this.bulletsStore=new vt,this.lastAttackTime=Date.now()-200,this.stateName="before-playing",this.health=e}return t.prototype.processMovement=function(){var t,e,o;this.gameObject.speed=(e=(t=this.gameObject).point.x<=50,o=t.speed.x,e?(o=Math.abs(o),new C(o,t.speed.y)):t.point.x>=750-t.size.width?(o=-Math.abs(o),new C(o,t.speed.y)):t.speed),this.gameObject.move()},t.prototype.addToNextRender=function(){this.virtualDOM.addElement(this.gameObject)},t.prototype.registerDamage=function(){var t=this;this.bulletsCollider.tryToCollide((function(){t.health-=10,t.health?t.stateName="playing-after-damage":t.stateName="before-dead"}))},t.prototype.attack=function(){var t,e,o,n,r=Date.now();r>this.lastAttackTime+200&&(this.lastAttackTime=r,this.bulletsStore.addElement((t=this.gameObject.point,e=this.gameObject.size,o=new v(t.x+e.width/2,t.y+e.height),n=new C(Math.floor(10*Math.random())-5,3),new wt("enemy",o,n))))},t}();var Lt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Ft=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-playing",n}return Lt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt);var Ht=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Gt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing",n}return Ht(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Dt);var $t=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Kt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="playing-after-damage",n}return $t(e,t),e.prototype.processMovement=function(){t.prototype.processMovement.call(this)},e.prototype.addToNextRender=function(){t.prototype.addToNextRender.call(this)},e.prototype.registerDamage=function(){t.prototype.registerDamage.call(this)},e.prototype.attack=function(){t.prototype.attack.call(this)},e}(Dt);var zt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Vt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="before-dead",n}return zt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt);var qt=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const Xt=function(t){function e(e,o){var n=t.call(this,e,o)||this;return n.stateName="dead",n}return qt(e,t),e.prototype.processMovement=function(){},e.prototype.addToNextRender=function(){},e.prototype.registerDamage=function(){},e.prototype.attack=function(){},e}(Dt),Wt=function(){function t(){return t.instance||(this.stateNameBefore="before-playing",this.stateName="before-playing",t.instance=this),t.instance}return t.prototype.init=function(){clearTimeout(this.timer),this.timer=null,this.innerHealth=400,this.gameObject=new pt({point:P.clone(),size:U.clone(),speed:j.clone(),zIndex:2,background:"url(".concat(jt,")")}),this.stateName="playing"},t.prototype.doFrameBehavior=function(){this.state.processMovement(),this.state.addToNextRender(),this.state.registerDamage(),this.state.attack(),this.applyNewHealth(),this.applyNewState()},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t.prototype.applyNewHealth=function(){this.innerHealth=this.state.health},Object.defineProperty(t.prototype,"health",{get:function(){return this.innerHealth},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){var e=this;switch(clearTimeout(this.timer),t){case"before-playing":this.state=new Ft(this.gameObject,this.innerHealth);break;case"playing":this.state=new Gt(this.gameObject,this.innerHealth);break;case"playing-after-damage":this.timer=setTimeout((function(){console.log("some action after damage"),e.stateName="playing"}),500),this.state=new Kt(this.gameObject,this.innerHealth);break;case"before-dead":this.state=new Vt(this.gameObject,this.innerHealth),this.timer=setTimeout((function(){e.stateName="dead"}),500);break;case"dead":this.state=new Xt(this.gameObject,this.innerHealth)}},enumerable:!1,configurable:!0}),t}(),Yt=o.p+"7467a9e3d648bcc674d6.png",Zt=o.p+"3d38fa44a32629a1f955.png",Jt=function(){function t(){if(!t.instance){this.enemy=new Wt,this.player=new Ut,this.virtualDOM=new yt,this.emptyBar=new pt({point:new v(0,0),size:new R(S,29),background:"#009",zIndex:ft}),this.enemyEmptyHealth=new pt({point:new v(0,0),size:new R(400,29),background:"#000",zIndex:dt}),this.enemyHealth=new pt({point:new v(0,0),size:new R(this.enemy.health,29),background:"#f00",zIndex:mt});var e={x:1,y:1};this.healths=[];for(var o=1;o<=3;o++){var n=this.player.health>=o,r=new v(S-(e.x+D.width)*o,e.y);this.healths.push(new pt({point:r,size:D.clone(),background:"url(".concat(n?Yt:Zt,")"),zIndex:ht}))}t.instance=this}return t.instance}return t.prototype.doFrameBehavior=function(){this.addToRenderEmptyBar(),this.addToRenderEnemyEmptyHealth(),this.addToRenderEnemyHealth(),this.addToRenderPlayerHealth()},t.prototype.addToRenderEmptyBar=function(){this.virtualDOM.addElement(this.emptyBar)},t.prototype.addToRenderEnemyEmptyHealth=function(){this.virtualDOM.addElement(this.enemyEmptyHealth)},t.prototype.addToRenderEnemyHealth=function(){this.enemyHealth.size=new R(this.enemy.health,29),this.virtualDOM.addElement(this.enemyHealth)},t.prototype.addToRenderPlayerHealth=function(){for(var t=1;t<=3;t++){var e=this.player.health>=t;this.healths[t-1].background="url(".concat(e?Yt:Zt,")"),this.virtualDOM.addElement(this.healths[t-1])}},t}(),Qt=function(){function t(){this.renderAPI=nt(),this.virtualDOM=new yt,this.keyboard=new At}return t.prototype.render=function(){this.renderAPI.render(this.virtualDOM.getChanges()),this.virtualDOM.prepareForNewFrame()},t}();var te=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const ee=function(t){function e(){var e=t.call(this)||this;return e.stateName="playing",e.player=new Ut,e.enemy=new Wt,e.bulletsStore=new vt,e.lifebar=new Jt,e.isPause=!1,e.isReadyToChangeIsPause=!0,e.timerOfIsPause=null,e.player.init(),e.enemy.init(),e}return te(e,t),e.prototype.doFrameBehavior=function(){this.processPauseController(),this.isPause||(this.doBulletsFrameBehavior(),this.player.doFrameBehavior(),this.enemy.doFrameBehavior(),this.lifebar.doFrameBehavior(),t.prototype.render.call(this))},e.prototype.processPauseController=function(){var t=this;this.keyboard.isActiveKey(z)&&(this.isReadyToChangeIsPause&&(this.isPause=!this.isPause),this.isReadyToChangeIsPause=!1,clearTimeout(this.timerOfIsPause),this.timerOfIsPause=setTimeout((function(){t.isReadyToChangeIsPause=!0}),50))},e.prototype.doBulletsFrameBehavior=function(){this.bulletsStore.removeBulletsOutsideScreen(),this.bulletsStore.bullets.forEach((function(t){t.doFrameBehavior()}))},e}(Qt);var oe=["new-game","settings"],ne="#f00",re="#000",ie=new v(20,560),se=new R(400,30),ae=new pt({text:"Нажмите Enter, чтобы продолжить",point:ie.clone(),size:se.clone()}),ce=new pt({text:"Главное меню",point:new v(330,260),size:new R(150,30)}),le=new pt({text:"Новая игра",point:new v(340,300),size:new R(100,30)}),pe=new pt({text:"Настройки",point:new v(340,330),size:new R(100,30)}),ue=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const fe=function(t){function e(){var e=t.call(this)||this;return e.stateName="menu",e.chosenOptionIdx=0,e.newGameButton=le.clone(),e.settingsButton=pe.clone(),e}return ue(e,t),Object.defineProperty(e.prototype,"chosenOption",{get:function(){return oe[this.chosenOptionIdx]},enumerable:!1,configurable:!0}),e.prototype.doFrameBehavior=function(){this.processKeyboard(),this.changeColorOfButtonsByChosenOption(),this.addToRenderElements(),t.prototype.render.call(this)},e.prototype.addToRenderElements=function(){this.virtualDOM.addElement(ae),this.virtualDOM.addElement(ce),this.virtualDOM.addElement(this.newGameButton),this.virtualDOM.addElement(this.settingsButton)},e.prototype.processKeyboard=function(){this.processPressingEnter(),this.processKeysForChoiceOfOption()},e.prototype.processPressingEnter=function(){this.keyboard.isActiveKey("Enter")&&("new-game"===this.chosenOption&&(this.stateName="playing"),"settings"===this.chosenOption&&(this.stateName="settings"))},e.prototype.processKeysForChoiceOfOption=function(){this.processKeysForMovementToTop(),this.processKeysForMovementToBottom()},e.prototype.processKeysForMovementToTop=function(){(this.keyboard.isActiveKey("ArrowUp")||this.keyboard.isActiveKey(F))&&(this.chosenOptionIdx=this.chosenOptionIdx<=0?0:this.chosenOptionIdx-1)},e.prototype.processKeysForMovementToBottom=function(){if(this.keyboard.isActiveKey("ArrowDown")||this.keyboard.isActiveKey(G)){var t=oe.length-1;this.chosenOptionIdx=this.chosenOptionIdx>=t?t:this.chosenOptionIdx+1}},e.prototype.changeColorOfButtonsByChosenOption=function(){this.newGameButton.textColor="new-game"===this.chosenOption?ne:re,this.settingsButton.textColor="settings"===this.chosenOption?ne:re},e}(Qt);var de=new pt({text:"Нажмите Escape, чтобы выйти назад в меню",point:ie.clone(),size:se.clone()}),me=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();const he=function(t){function e(){var e=t.call(this)||this;return e.stateName="settings",e}return me(e,t),e.prototype.doFrameBehavior=function(){this.processKeyboard(),this.addToRenderElements(),t.prototype.render.call(this)},e.prototype.addToRenderElements=function(){this.virtualDOM.addElement(de)},e.prototype.processKeyboard=function(){this.keyboard.isActiveKey("Escape")&&(this.stateName="menu")},e}(Qt);(new(function(){function t(){return t.instance||(this.renderAPI=nt(),this.gameLoop=new rt,this.stateName="menu",this.stateNameBefore=this.state.stateName,t.instance=this),t.instance}return Object.defineProperty(t.prototype,"stateName",{get:function(){return this.state.stateName},set:function(t){switch(t){case"playing":this.state=new ee;break;case"settings":this.state=new he;break;case"menu":this.state=new fe}},enumerable:!1,configurable:!0}),t.prototype.start=function(){var t=this;new it(this.renderAPI).render(),this.gameLoop.start((function(){t.state.doFrameBehavior(),t.applyNewState()}))},t.prototype.applyNewState=function(){this.stateName!==this.stateNameBefore&&(this.stateNameBefore=this.state.stateName,this.stateName=this.state.stateName)},t}())).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5hN2NhZjBiYjUzYjExMzVlYWZiYi5qcyIsIm1hcHBpbmdzIjoid0hBSUlBLEVBQWdDLElBQUlDLElBQUksYUFDeENDLEVBQWdDLElBQUlELElBQUksYUFDeENFLEVBQWdDLElBQUlGLElBQUksYUFDeENHLEVBQWdDLElBQUlILElBQUksYUFDeENJLEVBQWdDLElBQUlKLElBQUksYUFDeENLLEVBQWdDLElBQUlMLElBQUksYUFDeENNLEVBQWdDLElBQUlOLElBQUksYUFDeENPLEVBQWdDLElBQUlQLElBQUksYUFDeENRLEVBQWdDLElBQUlSLElBQUksYUFDeENTLEVBQWdDLElBQUlULElBQUksYUFDeENVLEVBQWlDLElBQUlWLElBQUksYUFDekNXLEVBQWlDLElBQUlYLElBQUksYUFDekNZLEVBQWlDLElBQUlaLElBQUksYUFDekNhLEVBQWlDLElBQUliLElBQUksYUFDekNjLEVBQWlDLElBQUlkLElBQUksYUFDekNlLEVBQWlDLElBQUlmLElBQUksWUFDekNnQixFQUFpQyxJQUFJaEIsSUFBSSxhQUN6Q2lCLEVBQWlDLElBQUlqQixJQUFJLGFBQ3pDa0IsRUFBaUMsSUFBSWxCLElBQUksYUFDekNtQixFQUFpQyxJQUFJbkIsSUFBSSxhQUN6Q29CLEVBQWlDLElBQUlwQixJQUFJLGFBQ3pDcUIsRUFBaUMsSUFBSXJCLElBQUksYUFDekNzQixFQUFpQyxJQUFJdEIsSUFBSSxhQUN6Q3VCLEVBQWlDLElBQUl2QixJQUFJLGFBQ3pDd0IsRUFBaUMsSUFBSXhCLElBQUksYUFDekN5QixFQUFpQyxJQUFJekIsSUFBSSxhQUN6QzBCLEVBQWlDLElBQUkxQixJQUFJLGFBQ3pDMkIsRUFBaUMsSUFBSTNCLElBQUksYUFDekM0QixFQUFpQyxJQUFJNUIsSUFBSSxhQUN6QzZCLEVBQWlDLElBQUk3QixJQUFJLFlBQ3pDOEIsRUFBaUMsSUFBSTlCLElBQUksYUFDekMrQixFQUFpQyxJQUFJL0IsSUFBSSxhQUN6Q2dDLEVBQWlDLElBQUloQyxJQUFJLGFBQ3pDaUMsRUFBaUMsSUFBSWpDLElBQUksWUFDekNrQyxFQUFpQyxJQUFJbEMsSUFBSSxhQUN6Q21DLEVBQWlDLElBQUluQyxJQUFJLFlBQ3pDb0MsRUFBaUMsSUFBSXBDLElBQUksYUFDekNxQyxFQUFpQyxJQUFJckMsSUFBSSxhQUN6Q3NDLEVBQWlDLElBQUl0QyxJQUFJLGFBQ3pDdUMsRUFBaUMsSUFBSXZDLElBQUksYUFDekN3QyxFQUFpQyxJQUFJeEMsSUFBSSxhQUN6Q3lDLEVBQWlDLElBQUl6QyxJQUFJLGFBQ3pDMEMsRUFBaUMsSUFBSTFDLElBQUksWUFDekMyQyxFQUFpQyxJQUFJM0MsSUFBSSxhQUN6QzRDLEVBQWlDLElBQUk1QyxJQUFJLGFBQ3pDNkMsR0FBaUMsSUFBSTdDLElBQUksYUFDekM4QyxHQUFpQyxJQUFJOUMsSUFBSSxhQUN6QytDLEdBQWlDLElBQUkvQyxJQUFJLGFBQ3pDZ0QsR0FBMEIsSUFBNEIsS0FDdERDLEdBQXFDLElBQWdDbEQsR0FDckVtRCxHQUFxQyxJQUFnQ25ELEVBQStCLENBQUVvRCxLQUFNLFlBQzVHQyxHQUFxQyxJQUFnQ25ELEdBQ3JFb0QsR0FBcUMsSUFBZ0NuRCxHQUNyRW9ELEdBQXFDLElBQWdDbkQsR0FDckVvRCxHQUFxQyxJQUFnQ25ELEdBQ3JFb0QsR0FBcUMsSUFBZ0NwRCxFQUErQixDQUFFK0MsS0FBTSxZQUM1R00sR0FBcUMsSUFBZ0NwRCxHQUNyRXFELEdBQXFDLElBQWdDcEQsR0FDckVxRCxHQUFxQyxJQUFnQ3BELEdBQ3JFcUQsR0FBc0MsSUFBZ0NwRCxHQUN0RXFELEdBQXNDLElBQWdDckQsRUFBK0IsQ0FBRTJDLEtBQU0sWUFDN0dXLEdBQXNDLElBQWdDckQsR0FDdEVzRCxHQUFzQyxJQUFnQ3JELEdBQ3RFc0QsR0FBc0MsSUFBZ0NyRCxHQUN0RXNELEdBQXNDLElBQWdDckQsR0FDdEVzRCxHQUFzQyxJQUFnQ3RELEVBQWdDLENBQUV1QyxLQUFNLFlBQzlHZ0IsR0FBc0MsSUFBZ0N0RCxHQUN0RXVELEdBQXNDLElBQWdDdEQsR0FDdEV1RCxHQUFzQyxJQUFnQ3RELEdBQ3RFdUQsR0FBc0MsSUFBZ0N0RCxHQUN0RXVELEdBQXNDLElBQWdDdkQsRUFBZ0MsQ0FBRW1DLEtBQU0sWUFDOUdxQixHQUFzQyxJQUFnQ3ZELEdBQ3RFd0QsR0FBc0MsSUFBZ0N2RCxHQUN0RXdELEdBQXNDLElBQWdDdkQsR0FDdEV3RCxHQUFzQyxJQUFnQ3ZELEdBQ3RFd0QsR0FBc0MsSUFBZ0N4RCxFQUFnQyxDQUFFK0IsS0FBTSxZQUM5RzBCLEdBQXNDLElBQWdDeEQsR0FDdEV5RCxHQUFzQyxJQUFnQ3hELEdBQ3RFeUQsR0FBc0MsSUFBZ0N4RCxHQUN0RXlELEdBQXNDLElBQWdDeEQsR0FDdEV5RCxHQUFzQyxJQUFnQ3pELEVBQWdDLENBQUUyQixLQUFNLFlBQzlHK0IsR0FBc0MsSUFBZ0N6RCxHQUN0RTBELEdBQXNDLElBQWdDekQsR0FDdEUwRCxHQUFzQyxJQUFnQ3pELEdBQ3RFMEQsR0FBc0MsSUFBZ0N6RCxHQUN0RTBELEdBQXNDLElBQWdDMUQsRUFBZ0MsQ0FBRXVCLEtBQU0sWUFDOUdvQyxHQUFzQyxJQUFnQzFELEdBQ3RFMkQsR0FBc0MsSUFBZ0MxRCxHQUN0RTJELEdBQXNDLElBQWdDMUQsR0FDdEUyRCxHQUFzQyxJQUFnQzFELEdBQ3RFMkQsR0FBc0MsSUFBZ0MzRCxFQUFnQyxDQUFFbUIsS0FBTSxZQUM5R3lDLEdBQXNDLElBQWdDM0QsR0FDdEU0RCxHQUFzQyxJQUFnQzNELEdBQ3RFNEQsR0FBc0MsSUFBZ0MzRCxHQUN0RTRELEdBQXNDLElBQWdDM0QsR0FDdEU0RCxHQUFzQyxJQUFnQzVELEVBQWdDLENBQUVlLEtBQU0sWUFDOUc4QyxHQUFzQyxJQUFnQzVELEdBQ3RFNkQsR0FBc0MsSUFBZ0M1RCxHQUN0RTZELEdBQXNDLElBQWdDNUQsR0FDdEU2RCxHQUFzQyxJQUFnQzVELEdBQ3RFNkQsR0FBc0MsSUFBZ0M3RCxFQUFnQyxDQUFFVyxLQUFNLFlBQzlHbUQsR0FBc0MsSUFBZ0M3RCxHQUN0RThELEdBQXNDLElBQWdDN0QsR0FDdEU4RCxHQUFzQyxJQUFnQzdELEdBQ3RFOEQsR0FBc0MsSUFBZ0M3RCxHQUN0RThELEdBQXNDLElBQWdDOUQsRUFBZ0MsQ0FBRU8sS0FBTSxZQUM5R3dELEdBQXNDLElBQWdDOUQsSUFDdEUrRCxHQUFzQyxJQUFnQzlELElBQ3RFK0QsR0FBc0MsSUFBZ0M5RCxJQUUxRUMsR0FBd0I4RCxLQUFLLENBQUNDLEVBQU9DLEdBQUksMERBRTFCL0QsMEZBRURDLGlEQUNBRSxxQ0FDQUMsb0NBQ0FDLHdJQU9DQywyRUFFREMsaURBQ0FDLHFDQUNBQyxvQ0FDQUMseUlBT0NDLHdGQUVEQyxpREFDQUMscUNBQ0FDLG9DQUNBQyx5SUFPQ0MsMEZBRURDLGlEQUNBQyxxQ0FDQUMsb0NBQ0FDLHdJQU9DQyx5RUFFREMsaURBQ0FDLHFDQUNBQyxvQ0FDQUMsMklBT0NDLHdGQUVEQyxpREFDQUMscUNBQ0FDLG9DQUNBQyx3SUFPQ0MsNkVBRURDLGlEQUNBQyxxQ0FDQUMsb0NBQ0FDLHdJQU9DQyw0RkFFREMsaURBQ0FDLHFDQUNBQyxvQ0FDQUMsd0lBT0NDLDJFQUVEQyxpREFDQUMscUNBQ0FDLG9DQUNBQyx3SUFPQ0MsNkVBRURDLGlEQUNBQyxxQ0FDQUMsb0NBQ0FDLHdJQU9DQywrRUFFREMsaURBQ0FDLHFDQUNBQyxvQ0FDQUMsMklBT0NDLCtFQUVEQyxpREFDQUMscUNBQ0FDLG9DQUNBQyxpRkFLWCxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQywrQ0FBK0MsTUFBUSxHQUFHLFNBQVcscTdCQUFxN0IsZUFBaUIsQ0FBQywwaEtBQTBoSyxXQUFhLE1BRWpsTSxXLG1FQ2pRSTdELEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCOEQsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLGdDQUVyQyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyw2QkFBNkIsTUFBUSxHQUFHLFNBQVcsc0JBQXNCLGVBQWlCLENBQUMsaUNBQWlDLFdBQWEsTUFFeEssUyxXQ0hBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0E0RVgsT0F6RUFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVUsR0FDVkMsT0FBK0IsSUFBWkYsRUFBSyxHQW9CNUIsT0FuQklBLEVBQUssS0FDUEMsR0FBVyxjQUFjRSxPQUFPSCxFQUFLLEdBQUksUUFFdkNBLEVBQUssS0FDUEMsR0FBVyxVQUFVRSxPQUFPSCxFQUFLLEdBQUksT0FFbkNFLElBQ0ZELEdBQVcsU0FBU0UsT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksT0FFNUVDLEdBQVdOLEVBQXVCSyxHQUM5QkUsSUFDRkQsR0FBVyxLQUVURCxFQUFLLEtBQ1BDLEdBQVcsS0FFVEQsRUFBSyxLQUNQQyxHQUFXLEtBRU5BLENBQ1QsSUFBR0ksS0FBSyxHQUNWLEVBR0FULEVBQUtVLEVBQUksU0FBV0MsRUFBU0MsRUFBT0MsRUFBUUMsRUFBVUMsR0FDN0IsaUJBQVpKLElBQ1RBLEVBQVUsQ0FBQyxDQUFDLEtBQU1BLE9BQVNLLEtBRTdCLElBQUlDLEVBQXlCLENBQUMsRUFDOUIsR0FBSUosRUFDRixJQUFLLElBQUlLLEVBQUksRUFBR0EsRUFBSWhCLEtBQUtNLE9BQVFVLElBQUssQ0FDcEMsSUFBSXJCLEVBQUtLLEtBQUtnQixHQUFHLEdBQ1AsTUFBTnJCLElBQ0ZvQixFQUF1QnBCLElBQU0sRUFFakMsQ0FFRixJQUFLLElBQUlzQixFQUFLLEVBQUdBLEVBQUtSLEVBQVFILE9BQVFXLElBQU0sQ0FDMUMsSUFBSWYsRUFBTyxHQUFHRyxPQUFPSSxFQUFRUSxJQUN6Qk4sR0FBVUksRUFBdUJiLEVBQUssV0FHckIsSUFBVlcsU0FDYyxJQUFaWCxFQUFLLEtBR2RBLEVBQUssR0FBSyxTQUFTRyxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksTUFGL0ZBLEVBQUssR0FBS1csR0FNVkgsSUFDR1IsRUFBSyxJQUdSQSxFQUFLLEdBQUssVUFBVUcsT0FBT0gsRUFBSyxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxLQUMxREEsRUFBSyxHQUFLUSxHQUhWUixFQUFLLEdBQUtRLEdBTVZFLElBQ0dWLEVBQUssSUFHUkEsRUFBSyxHQUFLLGNBQWNHLE9BQU9ILEVBQUssR0FBSSxPQUFPRyxPQUFPSCxFQUFLLEdBQUksS0FDL0RBLEVBQUssR0FBS1UsR0FIVlYsRUFBSyxHQUFLLEdBQUdHLE9BQU9PLElBTXhCZCxFQUFLTCxLQUFLUyxHQUNaLENBQ0YsRUFDT0osQ0FDVCxDLFdDbEZBSixFQUFPRSxRQUFVLFNBQVVzQixFQUFLQyxHQUk5QixPQUhLQSxJQUNIQSxFQUFVLENBQUMsR0FFUkQsR0FHTEEsRUFBTUUsT0FBT0YsRUFBSUcsV0FBYUgsRUFBSUksUUFBVUosR0FHeEMsZUFBZUssS0FBS0wsS0FDdEJBLEVBQU1BLEVBQUlNLE1BQU0sR0FBSSxJQUVsQkwsRUFBUXJGLE9BQ1ZvRixHQUFPQyxFQUFRckYsTUFLYixvQkFBb0J5RixLQUFLTCxJQUFRQyxFQUFRTSxXQUNwQyxJQUFLcEIsT0FBT2EsRUFBSVEsUUFBUSxLQUFNLE9BQU9BLFFBQVEsTUFBTyxPQUFRLEtBRTlEUixHQWpCRUEsQ0FrQlgsQyxXQ3ZCQXhCLEVBQU9FLFFBQVUsU0FBVU0sR0FDekIsSUFBSUMsRUFBVUQsRUFBSyxHQUNmeUIsRUFBYXpCLEVBQUssR0FDdEIsSUFBS3lCLEVBQ0gsT0FBT3hCLEVBRVQsR0FBb0IsbUJBQVR5QixLQUFxQixDQUM5QixJQUFJQyxFQUFTRCxLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVOLE1BQ3pETyxFQUFPLCtEQUErRDdCLE9BQU93QixHQUM3RU0sRUFBZ0IsT0FBTzlCLE9BQU82QixFQUFNLE9BQ3hDLE1BQU8sQ0FBQy9CLEdBQVNFLE9BQU8sQ0FBQzhCLElBQWdCNUIsS0FBSyxLQUNoRCxDQUNBLE1BQU8sQ0FBQ0osR0FBU0ksS0FBSyxLQUN4QixDLFdDYkEsSUFBSTZCLEVBQWMsR0FDbEIsU0FBU0MsRUFBcUJDLEdBRTVCLElBREEsSUFBSUMsR0FBVSxFQUNML0IsRUFBSSxFQUFHQSxFQUFJNEIsRUFBWTlCLE9BQVFFLElBQ3RDLEdBQUk0QixFQUFZNUIsR0FBRzhCLGFBQWVBLEVBQVksQ0FDNUNDLEVBQVMvQixFQUNULEtBQ0YsQ0FFRixPQUFPK0IsQ0FDVCxDQUNBLFNBQVNDLEVBQWExQyxFQUFNcUIsR0FHMUIsSUFGQSxJQUFJc0IsRUFBYSxDQUFDLEVBQ2RDLEVBQWMsR0FDVGxDLEVBQUksRUFBR0EsRUFBSVYsRUFBS1EsT0FBUUUsSUFBSyxDQUNwQyxJQUFJTixFQUFPSixFQUFLVSxHQUNaYixFQUFLd0IsRUFBUXdCLEtBQU96QyxFQUFLLEdBQUtpQixFQUFRd0IsS0FBT3pDLEVBQUssR0FDbEQwQyxFQUFRSCxFQUFXOUMsSUFBTyxFQUMxQjJDLEVBQWEsR0FBR2pDLE9BQU9WLEVBQUksS0FBS1UsT0FBT3VDLEdBQzNDSCxFQUFXOUMsR0FBTWlELEVBQVEsRUFDekIsSUFBSUMsRUFBb0JSLEVBQXFCQyxHQUN6Q1EsRUFBTSxDQUNSQyxJQUFLN0MsRUFBSyxHQUNWUSxNQUFPUixFQUFLLEdBQ1o4QyxVQUFXOUMsRUFBSyxHQUNoQlUsU0FBVVYsRUFBSyxHQUNmVyxNQUFPWCxFQUFLLElBRWQsSUFBMkIsSUFBdkIyQyxFQUNGVCxFQUFZUyxHQUFtQkksYUFDL0JiLEVBQVlTLEdBQW1CSyxRQUFRSixPQUNsQyxDQUNMLElBQUlJLEVBQVVDLEVBQWdCTCxFQUFLM0IsR0FDbkNBLEVBQVFpQyxRQUFVNUMsRUFDbEI0QixFQUFZaUIsT0FBTzdDLEVBQUcsRUFBRyxDQUN2QjhCLFdBQVlBLEVBQ1pZLFFBQVNBLEVBQ1RELFdBQVksR0FFaEIsQ0FDQVAsRUFBWWpELEtBQUs2QyxFQUNuQixDQUNBLE9BQU9JLENBQ1QsQ0FDQSxTQUFTUyxFQUFnQkwsRUFBSzNCLEdBQzVCLElBQUltQyxFQUFNbkMsRUFBUW9DLE9BQU9wQyxHQVl6QixPQVhBbUMsRUFBSUUsT0FBT1YsR0FDRyxTQUFpQlcsR0FDN0IsR0FBSUEsRUFBUSxDQUNWLEdBQUlBLEVBQU9WLE1BQVFELEVBQUlDLEtBQU9VLEVBQU8vQyxRQUFVb0MsRUFBSXBDLE9BQVMrQyxFQUFPVCxZQUFjRixFQUFJRSxXQUFhUyxFQUFPN0MsV0FBYWtDLEVBQUlsQyxVQUFZNkMsRUFBTzVDLFFBQVVpQyxFQUFJakMsTUFDekosT0FFRnlDLEVBQUlFLE9BQU9WLEVBQU1XLEVBQ25CLE1BQ0VILEVBQUlJLFFBRVIsQ0FFRixDQUNBaEUsRUFBT0UsUUFBVSxTQUFVRSxFQUFNcUIsR0FHL0IsSUFBSXdDLEVBQWtCbkIsRUFEdEIxQyxFQUFPQSxHQUFRLEdBRGZxQixFQUFVQSxHQUFXLENBQUMsR0FHdEIsT0FBTyxTQUFnQnlDLEdBQ3JCQSxFQUFVQSxHQUFXLEdBQ3JCLElBQUssSUFBSXBELEVBQUksRUFBR0EsRUFBSW1ELEVBQWdCckQsT0FBUUUsSUFBSyxDQUMvQyxJQUNJcUQsRUFBUXhCLEVBREtzQixFQUFnQm5ELElBRWpDNEIsRUFBWXlCLEdBQU9aLFlBQ3JCLENBRUEsSUFEQSxJQUFJYSxFQUFxQnRCLEVBQWFvQixFQUFTekMsR0FDdEM0QyxFQUFLLEVBQUdBLEVBQUtKLEVBQWdCckQsT0FBUXlELElBQU0sQ0FDbEQsSUFDSUMsRUFBUzNCLEVBREtzQixFQUFnQkksSUFFSyxJQUFuQzNCLEVBQVk0QixHQUFRZixhQUN0QmIsRUFBWTRCLEdBQVFkLFVBQ3BCZCxFQUFZaUIsT0FBT1csRUFBUSxHQUUvQixDQUNBTCxFQUFrQkcsQ0FDcEIsQ0FDRixDLFdDakZBLElBQUlHLEVBQU8sQ0FBQyxFQStCWnZFLEVBQU9FLFFBUFAsU0FBMEJzRSxFQUFRQyxHQUNoQyxJQUFJQyxFQXRCTixTQUFtQkEsR0FDakIsUUFBNEIsSUFBakJILEVBQUtHLEdBQXlCLENBQ3ZDLElBQUlDLEVBQWNDLFNBQVNDLGNBQWNILEdBR3pDLEdBQUlJLE9BQU9DLG1CQUFxQkosYUFBdUJHLE9BQU9DLGtCQUM1RCxJQUdFSixFQUFjQSxFQUFZSyxnQkFBZ0JDLElBQzVDLENBQUUsTUFBT0MsR0FFUFAsRUFBYyxJQUNoQixDQUVGSixFQUFLRyxHQUFVQyxDQUNqQixDQUNBLE9BQU9KLEVBQUtHLEVBQ2QsQ0FJZVMsQ0FBVVgsR0FDdkIsSUFBS0UsRUFDSCxNQUFNLElBQUlVLE1BQU0sMkdBRWxCVixFQUFPVyxZQUFZWixFQUNyQixDLFVDdkJBekUsRUFBT0UsUUFOUCxTQUE0QnVCLEdBQzFCLElBQUk2RCxFQUFVVixTQUFTVyxjQUFjLFNBR3JDLE9BRkE5RCxFQUFRK0QsY0FBY0YsRUFBUzdELEVBQVFnRSxZQUN2Q2hFLEVBQVErQyxPQUFPYyxFQUFTN0QsRUFBUUEsU0FDekI2RCxDQUNULEMsaUJDQ0F0RixFQUFPRSxRQU5QLFNBQXdDd0YsR0FDdEMsSUFBSUMsRUFBbUQsS0FDbkRBLEdBQ0ZELEVBQWFFLGFBQWEsUUFBU0QsRUFFdkMsQyxXQ29EQTNGLEVBQU9FLFFBakJQLFNBQWdCdUIsR0FDZCxHQUF3QixvQkFBYm1ELFNBQ1QsTUFBTyxDQUNMZCxPQUFRLFdBQW1CLEVBQzNCRSxPQUFRLFdBQW1CLEdBRy9CLElBQUkwQixFQUFlakUsRUFBUW9FLG1CQUFtQnBFLEdBQzlDLE1BQU8sQ0FDTHFDLE9BQVEsU0FBZ0JWLElBakQ1QixTQUFlc0MsRUFBY2pFLEVBQVMyQixHQUNwQyxJQUFJQyxFQUFNLEdBQ05ELEVBQUlsQyxXQUNObUMsR0FBTyxjQUFjMUMsT0FBT3lDLEVBQUlsQyxTQUFVLFFBRXhDa0MsRUFBSXBDLFFBQ05xQyxHQUFPLFVBQVUxQyxPQUFPeUMsRUFBSXBDLE1BQU8sT0FFckMsSUFBSU4sT0FBaUMsSUFBZDBDLEVBQUlqQyxNQUN2QlQsSUFDRjJDLEdBQU8sU0FBUzFDLE9BQU95QyxFQUFJakMsTUFBTVAsT0FBUyxFQUFJLElBQUlELE9BQU95QyxFQUFJakMsT0FBUyxHQUFJLE9BRTVFa0MsR0FBT0QsRUFBSUMsSUFDUDNDLElBQ0YyQyxHQUFPLEtBRUxELEVBQUlwQyxRQUNOcUMsR0FBTyxLQUVMRCxFQUFJbEMsV0FDTm1DLEdBQU8sS0FFVCxJQUFJQyxFQUFZRixFQUFJRSxVQUNoQkEsR0FBNkIsb0JBQVRwQixPQUN0Qm1CLEdBQU8sdURBQXVEMUMsT0FBT3VCLEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVWUsTUFBZSxRQUt0STdCLEVBQVFxRSxrQkFBa0J6QyxFQUFLcUMsRUFBY2pFLEVBQVFBLFFBQ3ZELENBb0JNc0UsQ0FBTUwsRUFBY2pFLEVBQVMyQixFQUMvQixFQUNBWSxPQUFRLFlBckJaLFNBQTRCMEIsR0FFMUIsR0FBZ0MsT0FBNUJBLEVBQWFNLFdBQ2YsT0FBTyxFQUVUTixFQUFhTSxXQUFXQyxZQUFZUCxFQUN0QyxDQWdCTVEsQ0FBbUJSLEVBQ3JCLEVBRUosQyxXQzlDQTFGLEVBQU9FLFFBVlAsU0FBMkJtRCxFQUFLcUMsR0FDOUIsR0FBSUEsRUFBYVMsV0FDZlQsRUFBYVMsV0FBV0MsUUFBVS9DLE1BQzdCLENBQ0wsS0FBT3FDLEVBQWFXLFlBQ2xCWCxFQUFhTyxZQUFZUCxFQUFhVyxZQUV4Q1gsRUFBYUwsWUFBWVQsU0FBUzBCLGVBQWVqRCxHQUNuRCxDQUNGLEMsa3RGQ1hJa0QsRUFBMkIsQ0FBQyxFQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCckYsSUFBakJzRixFQUNILE9BQU9BLEVBQWF4RyxRQUdyQixJQUFJRixFQUFTdUcsRUFBeUJFLEdBQVksQ0FDakR4RyxHQUFJd0csRUFFSnZHLFFBQVMsQ0FBQyxHQU9YLE9BSEF5RyxFQUFvQkYsR0FBVXpHLEVBQVFBLEVBQU9FLFFBQVNzRyxHQUcvQ3hHLEVBQU9FLE9BQ2YsQ0FHQXNHLEVBQW9CSSxFQUFJRCxFQ3hCeEJILEVBQW9CSyxFQUFLN0csSUFDeEIsSUFBSThHLEVBQVM5RyxHQUFVQSxFQUFPMkIsV0FDN0IsSUFBTzNCLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBd0csRUFBb0JPLEVBQUVELEVBQVEsQ0FBRUUsRUFBR0YsSUFDNUJBLENBQU0sRUNMZE4sRUFBb0JPLEVBQUksQ0FBQzdHLEVBQVMrRyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRWpILEVBQVNnSCxJQUM1RUUsT0FBT0MsZUFBZW5ILEVBQVNnSCxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsSUFFMUUsRUNORFYsRUFBb0JnQixFQUFJLFdBQ3ZCLEdBQTBCLGlCQUFmQyxXQUF5QixPQUFPQSxXQUMzQyxJQUNDLE9BQU9uSCxNQUFRLElBQUlvSCxTQUFTLGNBQWIsRUFDaEIsQ0FBRSxNQUFPeEMsR0FDUixHQUFzQixpQkFBWEosT0FBcUIsT0FBT0EsTUFDeEMsQ0FDQSxDQVB1QixHQ0F4QjBCLEVBQW9CVyxFQUFJLENBQUMvRCxFQUFLdUUsSUFBVVAsT0FBT1EsVUFBVUMsZUFBZUMsS0FBSzFFLEVBQUt1RSxHLE1DQWxGLElBQUlJLEVBQ0F2QixFQUFvQmdCLEVBQUVRLGdCQUFlRCxFQUFZdkIsRUFBb0JnQixFQUFFUyxTQUFXLElBQ3RGLElBQUlyRCxFQUFXNEIsRUFBb0JnQixFQUFFNUMsU0FDckMsSUFBS21ELEdBQWFuRCxJQUNiQSxFQUFTc0QsZUFBa0UsV0FBakR0RCxFQUFTc0QsY0FBY0MsUUFBUUMsZ0JBQzVETCxFQUFZbkQsRUFBU3NELGNBQWNHLE1BQy9CTixHQUFXLENBQ2YsSUFBSU8sRUFBVTFELEVBQVMyRCxxQkFBcUIsVUFDNUMsR0FBR0QsRUFBUTFILE9BRVYsSUFEQSxJQUFJRSxFQUFJd0gsRUFBUTFILE9BQVMsRUFDbEJFLEdBQUssS0FBT2lILElBQWMsYUFBYWxHLEtBQUtrRyxLQUFhQSxFQUFZTyxFQUFReEgsS0FBS3VILEdBRTNGLENBSUQsSUFBS04sRUFBVyxNQUFNLElBQUkzQyxNQUFNLHlEQUNoQzJDLEVBQVlBLEVBQVUvRixRQUFRLE9BQVEsSUFBSUEsUUFBUSxRQUFTLElBQUlBLFFBQVEsWUFBYSxLQUNwRndFLEVBQW9CZ0MsRUFBSVQsQyxLQ2xCeEJ2QixFQUFvQmlDLEVBQUk3RCxTQUFTOEQsU0FBV0MsS0FBS1YsU0FBU1csS0NBMURwQyxFQUFvQnFDLFFBQUt6SCxFLCtIQ1dyQkssRUFBVSxDQUFDLEVBRWZBLEVBQVFxRSxrQkFBb0IsSUFDNUJyRSxFQUFRK0QsY0FBZ0IsSUFDeEIvRCxFQUFRK0MsT0FBUyxTQUFjLEtBQU0sUUFDckMvQyxFQUFRb0MsT0FBUyxJQUNqQnBDLEVBQVFvRSxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTcEUsR0FLSixLQUFXLElBQVFxSCxRQUFTLElBQVFBLE8sY0NidEQsRUFBVSxDQUFDLEVBRWYsRUFBUWhELGtCQUFvQixJQUM1QixFQUFRTixjQUFnQixJQUN4QixFQUFRaEIsT0FBUyxTQUFjLEtBQU0sUUFDckMsRUFBUVgsT0FBUyxJQUNqQixFQUFRZ0MsbUJBQXFCLElBRWhCLElBQUksSUFBUyxHQUtKLEtBQVcsSUFBUWlELFFBQVMsSUFBUUEsT0N4Qm5ELElBQU1DLEVBQVUsT0FDVkMsRUFBaUIsYyxRQ0c5QixXQUlBLEUsRUNSQSxXQUNFLFdBQTRCQyxFQUEyQkMsR0FBM0IsS0FBQUQsRUFBQUEsRUFBMkIsS0FBQUMsRUFBQUEsQ0FBWSxDQVNyRSxPQVBTLFlBQUFDLE1BQVAsV0FDRSxPQUFPLElBQUlDLEVBQU05SSxLQUFLMkksRUFBRzNJLEtBQUs0SSxFQUNoQyxFQUVPLFlBQUFHLFFBQVAsV0FDRSxPQUFPL0ksS0FBSzJJLEVBQUksSUFBTTNJLEtBQUs0SSxDQUM3QixFQUNGLEVBVkEsRyxFQ0FBLFdBQ0UsV0FBNEJJLEVBQStCQyxHQUEvQixLQUFBRCxNQUFBQSxFQUErQixLQUFBQyxPQUFBQSxDQUFpQixDQVM5RSxPQVBTLFlBQUFKLE1BQVAsV0FDRSxPQUFPLElBQUlLLEVBQUtsSixLQUFLZ0osTUFBT2hKLEtBQUtpSixPQUNuQyxFQUVPLFlBQUFGLFFBQVAsV0FDRSxPQUFPL0ksS0FBS2dKLE1BQVEsSUFBTWhKLEtBQUtpSixNQUNqQyxFQUNGLEVBVkEsRyxFQ0FBLFdBQ0UsV0FBNEJOLEVBQTJCQyxHQUEzQixLQUFBRCxFQUFBQSxFQUEyQixLQUFBQyxFQUFBQSxDQUFZLENBU3JFLE9BUFMsWUFBQUMsTUFBUCxXQUNFLE9BQU8sSUFBSU0sRUFBTW5KLEtBQUsySSxFQUFHM0ksS0FBSzRJLEVBQ2hDLEVBRU8sWUFBQUcsUUFBUCxXQUNFLE9BQU8vSSxLQUFLMkksRUFBSSxJQUFNM0ksS0FBSzRJLENBQzdCLEVBQ0YsRUFWQSxHLGdCQ09hUSxFQUFvQixJQUdwQkMsRUFBdUIsSUFBSSxFQUFNLElBQUssS0FDdENDLEVBQXNCLElBQUksRUFBSyxHQUFJLElBQ25DQyxFQUF1QixJQUFJLEVBQU0sRUFBRyxHQU1wQ0MsRUFBc0IsSUFBSSxFQUFNLElBQUssSUFDckNDLEVBQXFCLElBQUksRUFBSyxJQUFLLEtBQ25DQyxFQUFzQixJQUFJLEVBQU0sRUFBRyxHQWVuQ0MsRUFBMEIsSUFBSSxFQUFLLEdBQUksSUFFdkNDLEVBQWMsSUFBSSxFQUFLLEdBQUksSUFFM0JDLEVBQXlDLFFBQS9CLEVBQUFDLGFBQWFDLFFBQVEsa0JBQVUsUUFBSSxJQUM3Q0MsRUFBMkMsUUFBaEMsRUFBQUYsYUFBYUMsUUFBUSxtQkFBVyxRQUFJLElBQy9DRSxFQUErQyxRQUFsQyxFQUFBSCxhQUFhQyxRQUFRLHFCQUFhLFFBQUksSUFDbkRHLEVBQTZDLFFBQWpDLEVBQUFKLGFBQWFDLFFBQVEsb0JBQVksUUFBSSxJQUNqREksRUFBK0MsUUFBbEMsRUFBQUwsYUFBYUMsUUFBUSxxQkFBYSxRQUFJLElBQ25ESyxFQUE2QyxRQUFqQyxFQUFBTixhQUFhQyxRQUFRLG9CQUFZLFFBQUksSUFNOURNLFFBQVFDLElBQUksT0FBUVQsRUFBU0csRUFBVUMsRUFBWUMsRUFBV0MsRUFBWUMsR0NoRDFFLElBT2FHLEVBQVUsMklBUFAsK0ZBY0wsTUFHRUMsRUFBWSxxQkFDZHBCLEVBQWlCLDBCRFpNLElDYUoscUhDakJ2QixTQUFTcUIsRUFBTXpGLEVBQXNCckYsR0FDMUNxRixFQUFRckYsR0FBS0EsRUFFVCxvc0dBQVkrSyxlQUNkMUYsRUFBUTJGLFFBQVFDLE9BQVNqTCxFQUU3QixDQVdPLFNBQVNrTCxJQUNkLElBQU1DLEVBQU94RyxTQUFTeUcsZUFBZSxHQUVyQyxJQUFLRCxFQUNILE1BQU0sSUFBSWhHLE1BQ1Isb0NBQTZCK0YsRUFBYUcsS0FBSSx1QkFJbEQsSUFBTXhHLEVBQVNGLFNBQVNXLGNBQWMsT0FFdEN3RixFQUFNakcsRUFBUSxHQUNkQSxFQUFPYyxhQUFhLFFBQVMsR0FDN0J3RixFQUFLL0YsWUFBWVAsRUFDbkIsQ0NqQ0EsaUJBVUUsV0FBWXlHLEdBQ1ZqTCxLQUFLaUwsV0FBYUEsRUFDbEJqTCxLQUFLa0wsYUFBZSxJQUN0QixDQTZCRixPQXZDRSxzQkFBVyxzQkFBTyxDLElBQWxCLFdBQ0UsT0FBT2xMLEtBQUtrTCxZQUNkLEUsZ0NBQ0Esc0JBQVcsaUJBQUUsQyxJQUFiLFdBQ0UsT0FBT2xMLEtBQUtpTCxXQUFXdEwsRUFDekIsRSxnQ0FPTyxZQUFBc0YsY0FBUCxXQUNFakYsS0FBS2tMLGFBQWU1RyxTQUFTVyxjQUFjLE1BQzdDLEVBRU8sWUFBQWtHLFdBQVAsU0FBa0JDLEdBQ2hCcEwsS0FBS2tMLGFBQWVFLENBQ3RCLEVBRU8sWUFBQUMsa0JBQVAsV0FDRXJMLEtBQUtnRixRQUFRTSxhQUFhLFFBQVN0RixLQUFLK0MsS0FDeEMvQyxLQUFLZ0YsUUFBUXNHLFVBQVl0TCxLQUFLaUwsV0FBV00sSUFDM0MsRUFFQSxzQkFBWSxrQkFBRyxDLElBQWYsV0FDUSxNQUFpRHZMLEtBQUtpTCxXQUFwRE8sRUFBSyxRQUFFQyxFQUFJLE9BQUVDLEVBQVUsYUFBRUMsRUFBUyxZQUFFQyxFQUFNLFNBRWxELE1BQU8sOENBRUFKLEVBQU01QyxFQUFDLDBCQUNONEMsRUFBTTdDLEVBQUMsNkJBQ0ppRCxFQUFNLHlCQUNSSCxFQUFLekMsTUFBSyw0QkFDVHlDLEVBQUt4QyxPQUFNLGdDQUNQeUMsRUFBVSx5QkFDZkMsRUFBUyxVQUVwQixFLGdDQUNGLEVBMUNBLEcsNGRDTUEsWUFhRSxhQUNFLFFBQUssWUFBRSxLQU1QLE9BbEJNLEVBQUFFLFlBQThELENBQUMsRUFjaEVDLEVBQVdDLFdBQ2RELEVBQVdDLFNBQVcsR0FHakJELEVBQVdDLFFBQ3BCLENBbURGLE9BeEV3QyxPQUd0QyxzQkFBWSxxQkFBTSxDLElBQWxCLFdBQ0UsSUFBTUMsRUFBYTFILFNBQVN5RyxlQUFlLEdBRTNDLElBQUtpQixFQUNILE1BQU0sSUFBSWxILE1BQU0sK0ZBR2xCLE9BQU9rSCxDQUNULEUsZ0NBWU8sWUFBQUMsaUJBQVAsV0ZuQkssSUFDQ0MsRUFDQXBCLEVBREFvQixFQUFPNUgsU0FBU0MsY0FBYyxRQUdwQ2tHLEVBRk1LLEVBQU94RyxTQUFTVyxjQUFjLE9BRXhCLEdBQ1o2RixFQUFLeEYsYUFBYSxRQUFTLEdBQzNCNEcsRUFBS25ILFlBQVkrRixHRWVmLEdBQ0YsRUFDTyxZQUFBcUIsU0FBUCxXQUNFN0gsU0FBUzRILEtBQUtaLFVBQVksRUFDNUIsRUFDTyxZQUFBYyxPQUFQLFNBQWNDLEdBQWQsV0FDRUEsRUFBUUMsU0FBUSxTQUFDQyxHQUNmLE9BQVFBLEVBQU9DLFFBQ2IsSUFBSyxRQUNILEVBQUtDLE1BQU1GLEVBQU90QixZQUNsQixNQUVGLElBQUssVUFDSCxFQUFLeUIsUUFBUUgsRUFBT3RCLFlBQ3BCLE1BRUYsSUFBSyxTQUNILEVBQUt6SCxPQUFPK0ksRUFBT3RCLFlBSXpCLEdBQ0YsRUFFUSxZQUFBd0IsTUFBUixTQUFjeEIsR0FDWixJQUFNMEIsRUFBTyxJQUFJLEVBQWUxQixHQUVoQzBCLEVBQUsxSCxnQkFDTDBILEVBQUt0QixvQkFFTHJMLEtBQUt3RSxPQUFPTyxZQUFZNEgsRUFBSzNILFNBQzdCaEYsS0FBSzZMLFlBQVljLEVBQUtoTixJQUFNZ04sQ0FDOUIsRUFDUSxZQUFBbkosT0FBUixTQUFleUgsR0FDYixJQUFNMkIsRUFBVSxJQUFJLEVBQWUzQixHQUM3QjRCLEVBQVU3TSxLQUFLNkwsWUFBWVosRUFBV3RMLElBRTVDaU4sRUFBUXpCLFdBQVcwQixFQUFRN0gsU0FDM0I0SCxFQUFRdkIsb0JBRVJyTCxLQUFLd0UsT0FBT08sWUFBWTZILEVBQVE1SCxTQUNoQ2hGLEtBQUs2TCxZQUFZWixFQUFXdEwsSUFBTWlOLENBQ3BDLEVBQ1EsWUFBQUYsUUFBUixTQUFnQnpCLEdBQ2RqTCxLQUFLNkwsWUFBWVosRUFBV3RMLElBQUlxRixRQUFRdEIsZ0JBQ2pDMUQsS0FBSzZMLFlBQVlaLEVBQVd0TCxHQUNyQyxFQXRFZSxFQUFBb00sU0FBOEIsS0F1RS9DLEMsQ0F4RUEsQ0FBd0MsRyx3ZUNKeEMsWUFDRSxhQUNFLFNBQUssWUFBRSxJQUNULENBV0YsT0FkcUMsUUFLNUIsWUFBQUUsaUJBQVAsV0FDRTVCLFFBQVFDLElBQUksbUJBQ2QsRUFDTyxZQUFBNkIsU0FBUCxXQUNFOUIsUUFBUUMsSUFBSSxXQUNkLEVBQ08sWUFBQThCLE9BQVAsU0FBY0MsR0FDWmhDLFFBQVFDLElBQUksU0FDZCxFQUNGLEVBZEEsQ0FBcUMsR0NBdEIsU0FBU3dDLEssTUFDaEJDLEVBQ3FDLFFBQXhDLHNzR0FBWUMsa0JBQTRCLFFBQUksVUFFL0MsT0FBUUQsR0FDTixJQUFLLFVBQ0gsT0FBTyxJQUFJLEdBQ2IsSUFBSyxPQUNILE9BQU8sSUFBSSxHQUNiLFFBQ0UsTUFBTSxJQUFJakksTUFBTSxrQ0FBMkJpSSxJQUVqRCxDLFNDZEEsV0FLRSxXQUFZRSxHQU9WLFlBUFUsSUFBQUEsSUFBQUEsRVBEd0IsSU9FN0JDLEVBQVNuQixXQUNaL0wsS0FBS21OLGNBQWdCQyxLQUFLQyxNQUMxQnJOLEtBQUtpTixjQUFnQkEsRUFDckJDLEVBQVNuQixTQUFXL0wsTUFHZmtOLEVBQVNuQixRQUNsQixDQWdCRixPQWRTLFlBQUF1QixNQUFQLFNBQWFDLEdBQWIsV0FDUUMsRUFBTyxXQUNYLElBQU1DLEVBQWNMLEtBQUtDLE1BRXJCLEVBQUtGLGNBQWdCLEVBQUtGLGVBQWlCUSxJQUM3QyxFQUFLTixjQUFnQk0sRUFDckJGLEtBR0ZHLHNCQUFzQkYsRUFDeEIsRUFFQUEsR0FDRixFQUNGLEVBN0JBLEcsR0NBQSxXQUlFLFdBQVlHLEdBTVYsT0FSTSxLQUFBQSxVQUE4QixLQUcvQkMsRUFBVzdCLFdBQ2QvTCxLQUFLMk4sVUFBWUEsRUFDakJDLEVBQVc3QixTQUFXL0wsTUFHakI0TixFQUFXN0IsUUFDcEIsQ0EwQkYsT0F4QlMsWUFBQUssT0FBUCxXQUNFcE0sS0FBSzJOLFVBQVUxQixrQkFDakIsRUFFTyxZQUFBNEIsUUFBUCxXQUNFN04sS0FBSzhOLHlCQUNMOU4sS0FBSzJOLFVBQVV4QixXQUNmbk0sS0FBSzJOLFVBQVksS0FDakJDLEVBQVc3QixTQUFXLElBQ3hCLEVBRVEsWUFBQStCLHVCQUFSLFdBQ0UsSUFBSyxvc0dBQVlwRCxhQUNmLE1BQU0sSUFBSTVGLE1BQ1Isa0ZBSUosSUFBSzlFLEtBQUsyTixVQUNSLE1BQU0sSUFBSTdJLE1BQ1Isd0VBR04sRUFuQ2UsRUFBQWlILFNBQThCLEtBb0MvQyxDLENBckNBLEdDRkEsSUFDTWdDLEdBQ0FDLEdBaUJOLFVBbEJNRCxHQUF1QixHQUN2QkMsR0FBb0IsRUFFakIsV0FDTCxJQUFNck8sRUFBS3lOLEtBQUtDLE1BQVEsR0FFeEIsT0FBSVUsS0FBaUJwTyxHQUNuQnFPLEtBRU9ELEdBQWUsSUFBTUMsS0FHOUJELEdBQWVwTyxFQUVSQSxFQUNULEdDWEYsa0JBVUUsV0FDRXNPLEcsb0JBV0FqTyxLQUFLTCxHQUFlLFFBQVYsRUFBQXNPLGFBQU0sRUFBTkEsRUFBUXRPLFVBQUUsUUFBSSxLQUN4QkssS0FBS3dMLE1BQXFCLFFBQWIsRUFBQXlDLGFBQU0sRUFBTkEsRUFBUXpDLGFBQUssUUFBSSxJQUFJLEVBQU0sRUFBRyxHQUMzQ3hMLEtBQUt5TCxLQUFtQixRQUFaLEVBQUF3QyxhQUFNLEVBQU5BLEVBQVF4QyxZQUFJLFFBQUksSUFBSSxFQUFLLEVBQUcsR0FDeEN6TCxLQUFLa08sTUFBcUIsUUFBYixFQUFBRCxhQUFNLEVBQU5BLEVBQVFDLGFBQUssUUFBSSxJQUFJLEVBQU0sRUFBRyxHQUMzQ2xPLEtBQUs0TCxPQUF1QixRQUFkLEVBQUFxQyxhQUFNLEVBQU5BLEVBQVFyQyxjQUFNLFFBQUksRUFDaEM1TCxLQUFLdUwsS0FBbUIsUUFBWixFQUFBMEMsYUFBTSxFQUFOQSxFQUFRMUMsWUFBSSxRQUFJLEdBQzVCdkwsS0FBSzJMLFVBQTZCLFFBQWpCLEVBQUFzQyxhQUFNLEVBQU5BLEVBQVF0QyxpQkFBUyxRQUFJLE9BQ3RDM0wsS0FBSzBMLFdBQStCLFFBQWxCLEVBQUF1QyxhQUFNLEVBQU5BLEVBQVF2QyxrQkFBVSxRQUFJLGFBQzFDLENBU0YsT0FQUyxZQUFBeUMsS0FBUCxXQUNFbk8sS0FBS3dMLE1BQVEsSUFBSSxFQUFNeEwsS0FBS3dMLE1BQU03QyxFQUFJM0ksS0FBS2tPLE1BQU12RixFQUFHM0ksS0FBS3dMLE1BQU01QyxFQUFJNUksS0FBS2tPLE1BQU10RixFQUNoRixFQUVPLFlBQUFDLE1BQVAsV0FDRSxPQUFPLElBQUl1RixFQUFXcE8sS0FDeEIsRUFDRixFQXZDQSxHLDhDQ0xBLEdBS2tCLEVBTGxCLEdBTXNCLEVBTnRCLEdBT2lCLEVBUGpCLEdBUWtCLEVDV1gsSUNkUCxjQUtFLGFBT0UsT0FOS3FPLEVBQVd0QyxXQUNkL0wsS0FBS3NPLGFBQWUsQ0FBQyxFQUNyQnRPLEtBQUt1TyxhQUFlLENBQUMsRUFDckJGLEVBQVd0QyxTQUFXL0wsTUFHakJxTyxFQUFXdEMsUUFDcEIsQ0FzRkYsT0FwRlMsWUFBQXlDLFdBQVAsU0FBa0J4SixHQUNoQmhGLEtBQUt1TyxhQUFhdkosRUFBUXJGLElBQU1xRixDQUNsQyxFQUNPLFlBQUF5SixtQkFBUCxXQUNFek8sS0FBS3NPLGFBQWUsQ0FBQyxFQUNyQnRPLEtBQUswTyxvQ0FDTDFPLEtBQUt1TyxhQUFlLENBQUMsQ0FDdkIsRUFDTyxZQUFBSSxXQUFQLHNCQUNRQyxFQUFTNU8sS0FBSzZPLG9CQUNkeEMsRUFBOEIsR0FNcEMsT0FKQXVDLEVBQU90QyxTQUFRLFNBQUMzTSxHQUNkME0sRUFBUTVNLEtBQUssRUFBS3FQLHdCQUF3Qm5QLEdBQzVDLElBRU8wTSxDQUNULEVBQ08sWUFBQXdCLFFBQVAsV0FDRTdOLEtBQUs4Tix5QkFDTDlOLEtBQUtzTyxhQUFlLEtBQ3BCdE8sS0FBS3VPLGFBQWUsS0FDcEJGLEVBQVd0QyxTQUFXLElBQ3hCLEVBRVEsWUFBQTJDLGtDQUFSLFdBQ0UsSUFBSyxJQUFNL08sS0FBTUssS0FBS3VPLGFBQ3BCdk8sS0FBS3NPLGFBQWEzTyxHQUFNSyxLQUFLdU8sYUFBYTVPLEdBQUlrSixPQUVsRCxFQUNRLFlBQUFpRix1QkFBUixXQUNFLElBQUssb3NHQUFZcEQsYUFDZixNQUFNLElBQUk1RixNQUFNLGlGQUVwQixFQUNRLFlBQUErSixrQkFBUixXQUNFLElBQU1FLEVBQVksSUFBSUMsSUFFdEIsSUFBSyxJQUFNclAsS0FBTUssS0FBS3NPLGFBQ3BCUyxFQUFVRSxJQUFJdFAsR0FHaEIsSUFBSyxJQUFNQSxLQUFNSyxLQUFLdU8sYUFDcEJRLEVBQVVFLElBQUl0UCxHQUdoQixPQUFPb1AsQ0FDVCxFQUNRLFlBQUFELHdCQUFSLFNBQWdDblAsRyxRQUN4QnVQLEVBQTRELFFBQXJCLEVBQUFsUCxLQUFLc08sYUFBYTNPLFVBQUcsUUFBSSxLQUNoRXdQLEVBQTRELFFBQXJCLEVBQUFuUCxLQUFLdU8sYUFBYTVPLFVBQUcsUUFBSSxLQUV0RSxPQUFLdVAsRUFNQUMsRUFPRSxDQUNMbEUsV0FBWWtFLEVBQ1ozQyxPQUFReE0sS0FBS29QLGlCQUFpQnpQLEdBQU0sU0FBVyxnQkFSeEMsQ0FDTHNMLFdBQVlpRSxFQUNaMUMsT0FBUSxXQVJILENBQ0x2QixXQUFZa0UsRUFDWjNDLE9BQVEsUUFjZCxFQUNRLFlBQUE0QyxpQkFBUixTQUF5QnpQLEdBQ3ZCLElBQU11UCxFQUFnQ2xQLEtBQUtzTyxhQUFhM08sR0FDbER3UCxFQUFnQ25QLEtBQUt1TyxhQUFhNU8sR0FFeEQsSUFBSyxJQUFNaUgsS0FBT3NJLEVBQWEsQ0FDN0IsSUFBTUcsRUFBVXpJLEVBRWhCLEdBQUlzSSxFQUFZRyxHQUFTdEcsWUFBY29HLEVBQVlFLEdBQVN0RyxVQUMxRCxPQUFPLENBRVgsQ0FFQSxPQUFPLENBQ1QsRUFDRixFQW5HQSxHLG1GQ01BLFdBY0UsV0FBNEJnRSxFQUFrQnZCLEVBQWMwQyxHQUFoQyxLQUFBbkIsS0FBQUEsRUFDMUIvTSxLQUFLc1AsV0FBYSxJQUFJLEdBQ3RCdFAsS0FBS2lMLFdBQWFzRSxFQUFPQyxvQkFBb0J4UCxLQUFLK00sS0FBTXZCLEVBQU8wQyxFQUNqRSxDQXVCRixPQXBDRSxzQkFBSSxvQkFBSyxDLElBQVQsV0FDRSxPQUFPbE8sS0FBS2lMLFdBQVdPLEtBQ3pCLEUsZ0NBQ0Esc0JBQUksbUJBQUksQyxJQUFSLFdBQ0UsT0FBT3hMLEtBQUtpTCxXQUFXUSxJQUN6QixFLGdDQUNBLHNCQUFJLGlCQUFFLEMsSUFBTixXQUNFLE9BQU96TCxLQUFLaUwsV0FBV3RMLEVBQ3pCLEUsZ0NBT08sWUFBQThQLGdCQUFQLFdBQ0V6UCxLQUFLMFAsa0JBQ0wxUCxLQUFLMlAsaUJBQ1AsRUFFZSxFQUFBSCxvQkFBZixTQUFtQ3pDLEVBQWtCdkIsRUFBYzBDLEdBQ2pFLE9BQU8sSUFBSSxHQUFXLENBQ3BCMUMsTUFBT0EsRUFBTTNDLFFBQ2I0QyxLQUFNN0IsRUFBWWYsUUFDbEJxRixNQUFPQSxFQUFNckYsUUFDYitDLE9IckNTLEVHc0NURixXQUFZLGNBQWdCLFVBQVRxQixFQUFtQixHQUFpQixHQUFlLE1BRTFFLEVBRVEsWUFBQTJDLGdCQUFSLFdBQ0UxUCxLQUFLaUwsV0FBV2tELE1BQ2xCLEVBQ1EsWUFBQXdCLGdCQUFSLFdBQ0UzUCxLQUFLc1AsV0FBV2QsV0FBV3hPLEtBQUtpTCxXQUNsQyxFQUNGLEVBeENBLEcsR0NYQSxXQUlFLHdCQWNFLE9BYksyRSxFQUFTN0QsV0FDWi9MLEtBQUs2UCxLQUFPLElBQUliLElBQ2hCWSxFQUFTN0QsU0FBVy9MLEtBRXBCc0UsU0FBU3dMLGlCQUFpQixXQUFXLFNBQUNDLEdBQ3BDLEVBQUtGLEtBQUtaLElBQUljLEVBQUluSixJQUFJa0IsY0FDeEIsSUFFQXhELFNBQVN3TCxpQkFBaUIsU0FBUyxTQUFDQyxHQUNsQyxFQUFLRixLQUFLRyxPQUFPRCxFQUFJbkosSUFBSWtCLGNBQzNCLEtBR0s4SCxFQUFTN0QsUUFDbEIsQ0FLRixPQUhTLFlBQUFrRSxZQUFQLFNBQW1CckosR0FDakIsT0FBTzVHLEtBQUs2UCxLQUFLSyxJQUFJdEosRUFBSWtCLGNBQzNCLEVBQ0YsRUF4QkEsRyxHQ0dBLFdBSUUsYUFNRSxPQUxLcUksRUFBYXBFLFdBQ2hCL0wsS0FBS29RLGFBQWUsR0FDcEJELEVBQWFwRSxTQUFXL0wsTUFHbkJtUSxFQUFhcEUsUUFDdEIsQ0FpQ0YsT0EvQlMsWUFBQXNFLDJCQUFQLFdBQ0VyUSxLQUFLb1EsYUFBZXBRLEtBQUtvUSxhQUFhRSxRQUFPLFNBQUNDLEdBQzVDLFFBQUlBLEVBQU8vRSxNQUFNN0MsRUFBSTRILEVBQU85RSxLQUFLekMsTUFBUSxHQUdyQ3VILEVBQU8vRSxNQUFNN0MsRUFBSVMsR0FHakJtSCxFQUFPL0UsTUFBTTVDLEVBQUkySCxFQUFPOUUsS0FBS3hDLE9BQVMsR0FHdENzSCxFQUFPL0UsTUFBTTVDLEVoQm5CVyxJZ0J3QjlCLEdBQ0YsRUFFTyxZQUFBNEYsV0FBUCxTQUFrQitCLEdBQ2hCdlEsS0FBS29RLGFBQWEzUSxLQUFLOFEsRUFDekIsRUFDTyxZQUFBQyxjQUFQLFNBQXFCRCxHQUNuQnZRLEtBQUtvUSxhQUFlcFEsS0FBS29RLGFBQWFFLFFBQ3BDLFNBQUNHLEdBQWdCLE9BQUFBLEVBQVk5USxLQUFPNFEsRUFBTzVRLEVBQTFCLEdBRXJCLEVBRUEsc0JBQUksc0JBQU8sQyxJQUFYLFdBQ0UsT0FBT0ssS0FBS29RLFlBQ2QsRSxnQ0FDRixFQTVDQSxHLEdDR0EsV0FHRSxXQUFvQmhNLEVBQTRCc00sR0FBNUIsS0FBQXRNLE9BQUFBLEVBQTRCLEtBQUFzTSxXQUFBQSxFQUM5QzFRLEtBQUsyUSxhQUFlLElBQUksRUFDMUIsQ0FjRixPQVpTLFlBQUFDLGFBQVAsU0FBb0JDLEdBQXBCLFdBQ0U3USxLQUFLMlEsYUFBYUcsUUFBUXhFLFNBQVEsU0FBQ2lFLEdBQzdCLEVBQUtHLGFBQWVILEVBQU94RCxNQ2JULFNBQzFCZ0UsRUFDQUMsR0FFQSxJQUFNQyxFQUFRRixFQUFLdkYsTUFBTTdDLEVBQ25CdUksRUFBU0gsRUFBS3ZGLE1BQU03QyxFQUFJb0ksRUFBS3RGLEtBQUt6QyxNQUVsQ21JLEVBQVFILEVBQUt4RixNQUFNN0MsRUFDbkJ5SSxFQUFTSixFQUFLeEYsTUFBTTdDLEVBQUlxSSxFQUFLdkYsS0FBS3pDLE1BRXhDLEdBQ0dpSSxHQUFTRSxHQUFTRixHQUFTRyxHQUMzQkYsR0FBVUMsR0FBU0QsR0FBVUUsRUFDOUIsQ0FDQSxJQUFNQyxFQUFPTixFQUFLdkYsTUFBTTVDLEVBQ2xCMEksRUFBVVAsRUFBS3ZGLE1BQU01QyxFQUFJbUksRUFBS3RGLEtBQUt4QyxPQUVuQ3NJLEVBQU9QLEVBQUt4RixNQUFNNUMsRUFDbEI0SSxFQUFVUixFQUFLeEYsTUFBTTVDLEVBQUlvSSxFQUFLdkYsS0FBS3hDLE9BRXpDLEdBQ0dvSSxHQUFRRSxHQUFRRixHQUFRRyxHQUN4QkYsR0FBV0MsR0FBUUQsR0FBV0UsRUFFL0IsT0FBTyxDQUVYLENBRUEsT0FBTyxDQUNULENEWlUsQ0FBb0JqQixFQUFRLEVBQUtuTSxVQUNuQ3lNLElBQ0EsRUFBS0YsYUFBYUgsY0FBY0QsR0FFcEMsR0FDRixFQUNGLEVBbkJBLEcsR0VNQSxXQVdFLFdBQVl0RixFQUF3QndHLEdBQ2xDelIsS0FBSzBSLG1CQUFxQixJQUFJLEdBQzlCMVIsS0FBS2lMLFdBQWFBLEVBQ2xCakwsS0FBS3NQLFdBQWEsSUFBSSxHQUN0QnRQLEtBQUsyUixnQkFBa0IsSUFBSSxHQUFnQjNSLEtBQUtpTCxXQUFZLFNBQzVEakwsS0FBSzJRLGFBQWUsSUFBSSxHQUN4QjNRLEtBQUs0UixlQUFpQnhFLEtBQUtDLE1uQmRJLEltQmUvQnJOLEtBQUs2UixVQUFZLGlCQUNqQjdSLEtBQUt5UixPQUFTQSxDQUNoQixDQW1DRixPQWpDUyxZQUFBL0IsZ0JBQVAsV1BMcUMsSUFBQzVNLEVBQWlCZ1AsRUFDakRDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBRUZDLEVBQ0FDLEVPREZwUyxLQUFLaUwsV0FBV2lELE9QTm9CcEwsRU9PbEM5QyxLQUFLaUwsV1BQOEM2RyxFT1FuRDlSLEtBQUswUixtQlBQSEssRUFBaUJqUCxFQUFJMEksTUFBTTVDLEdaaEJMLElZaUJ0Qm9KLEVBQWtCbFAsRUFBSTBJLE1BQU03QyxHQUFLLEVBQ2pDc0osRUFBb0JuUCxFQUFJMEksTUFBTTVDLEdaeEJKLElZd0I4QjlGLEVBQUkySSxLQUFLeEMsT0FDakVpSixFQUFtQnBQLEVBQUkwSSxNQUFNN0MsR0FBS1MsRUFBb0J0RyxFQUFJMkksS0FBS3pDLE1BRWpFbUosRUFBUyxFQUNUQyxFQUFTLEVBRVROLEVBQVM3QixZQUFZcEcsS0FBYWtJLElBQ3BDSyxHWjFCaUMsR1k0Qi9CTixFQUFTN0IsWUFBWWpHLEtBQWNnSSxJQUNyQ0csR1o3QmlDLEdZK0IvQkwsRUFBUzdCLFlBQVloRyxLQUFnQmdJLElBQ3ZDRyxFWmhDaUMsR1lrQy9CTixFQUFTN0IsWUFBWS9GLEtBQWVnSSxJQUN0Q0MsRVpuQ2lDLEdZc0M1QixJQUFJLEVBQU1BLEVBQVFDLElPWnZCcFMsS0FBS2lMLFdBQVdrRCxNQUNsQixFQUNPLFlBQUF3QixnQkFBUCxXQUNFM1AsS0FBS3NQLFdBQVdkLFdBQVd4TyxLQUFLaUwsV0FDbEMsRUFDTyxZQUFBb0gsZUFBUCxzQkFDRXJTLEtBQUsyUixnQkFBZ0JmLGNBQWEsV0FDaEMsRUFBS2EsUUFBVSxFQUVYLEVBQUtBLE9BQ1AsRUFBS0ksVUFBWSx1QkFFakIsRUFBS0EsVUFBWSxhQUVyQixHQUNGLEVBQ08sWUFBQVMsT0FBUCxXQUNFLElBQU03RSxFQUFjTCxLQUFLQyxNQUV2QkksRUFBY3pOLEtBQUs0UixlbkIzQ1UsS21CNkNWNVIsS0FBSzBSLG1CQUFtQnpCLFlBQVk5RixLQUN2RG5LLEtBQUs0UixlQUFpQm5FLEVBQ3RCek4sS0FBSzJRLGFBQWFuQyxXQUNoQixJQUFJLEdBQU8sU0FBVXhPLEtBQUtpTCxXQUFXTyxNQUFNM0MsUUFBUyxJQUFJLEVBQU0sR0FBSSxLQUd4RSxFQUNGLEVBdkRBLEcsd2VDUkEsWUFDRSxXQUFZb0MsRUFBd0J3RyxHQUNsQyxRQUFLLFVBQUN4RyxFQUFZd0csSUFBTyxLLE9BQ3pCLEVBQUtJLFVBQVksaUIsQ0FDbkIsQ0FNRixPQVZnRCxRQU12QyxZQUFBbkMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQUMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQTBDLGVBQVAsV0FBeUIsRUFDbEIsWUFBQUMsT0FBUCxXQUFpQixFQUNuQixFQVZBLENBQWdELEksd2VDQWhELFlBQ0UsV0FBWXJILEVBQXdCd0csR0FDbEMsUUFBSyxVQUFDeEcsRUFBWXdHLElBQU8sSyxPQUN6QixFQUFLSSxVQUFZLFUsQ0FDbkIsQ0FjRixPQWxCMEMsUUFNakMsWUFBQW5DLGdCQUFQLFdBQ0UsWUFBTUEsZ0JBQWUsVUFDdkIsRUFDTyxZQUFBQyxnQkFBUCxXQUNFLFlBQU1BLGdCQUFlLFVBQ3ZCLEVBQ08sWUFBQTBDLGVBQVAsV0FDRSxZQUFNQSxlQUFjLFVBQ3RCLEVBQ08sWUFBQUMsT0FBUCxXQUNFLFlBQU1BLE9BQU0sVUFDZCxFQUNGLEVBbEJBLENBQTBDLEksd2VDQTFDLFlBS0UsV0FBWXJILEVBQXdCd0csR0FDbEMsUUFBSyxVQUFDeEcsRUFBWXdHLElBQU8sSyxPQUN6QixFQUFLSSxVQUFZLHVCQUNqQixFQUFLVSxZQUFjLEVBQ25CLEVBQUtDLG1CQUFvQixFLENBQzNCLENBc0JGLE9BaENxRCxRQVk1QyxZQUFBOUMsZ0JBQVAsV0FDRSxZQUFNQSxnQkFBZSxVQUN2QixFQUNPLFlBQUFDLGdCQUFQLFdBQ08zUCxLQUFLd1MsbUJBQ1IsWUFBTTdDLGdCQUFlLFdBR3ZCM1AsS0FBS3VTLGNBR0h2UyxLQUFLdVMsYUFDTEUsRUFBd0JDLCtDQUV4QjFTLEtBQUt3UyxtQkFBcUJ4UyxLQUFLd1Msa0JBQy9CeFMsS0FBS3VTLFlBQWMsRUFFdkIsRUFDTyxZQUFBRixlQUFQLFdBQXlCLEVBQ2xCLFlBQUFDLE9BQVAsV0FBaUIsRUE5QkYsRUFBQUksNkNBQStDLEVBK0JoRSxDLENBaENBLENBQXFELEksd2VDQXJELFlBQ0UsV0FBWXpILEVBQXdCd0csR0FDbEMsUUFBSyxVQUFDeEcsRUFBWXdHLElBQU8sSyxPQUN6QixFQUFLSSxVQUFZLGMsQ0FDbkIsQ0FNRixPQVY2QyxRQU1wQyxZQUFBbkMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQUMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQTBDLGVBQVAsV0FBeUIsRUFDbEIsWUFBQUMsT0FBUCxXQUFpQixFQUNuQixFQVZBLENBQTZDLEksd2VDQTdDLFlBQ0UsV0FBWXJILEVBQXdCd0csR0FDbEMsUUFBSyxVQUFDeEcsRUFBWXdHLElBQU8sSyxPQUN6QixFQUFLSSxVQUFZLE8sQ0FDbkIsQ0FNRixPQVZ1QyxRQU05QixZQUFBbkMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQUMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQTBDLGVBQVAsV0FBeUIsRUFDbEIsWUFBQUMsT0FBUCxXQUFpQixFQUNuQixFQVZBLENBQXVDLElDUXZDLGtCQVFFLGFBT0UsT0FOS0ssRUFBTzVHLFdBQ1YvTCxLQUFLNFMsZ0JBQWtCLGlCQUN2QjVTLEtBQUs2UixVQUFZLGlCQUNqQmMsRUFBTzVHLFNBQVcvTCxNQUdiMlMsRUFBTzVHLFFBQ2hCLENBb0VGLE9BbEVTLFlBQUE4RyxLQUFQLFdBQ0VDLGFBQWE5UyxLQUFLK1MsT0FDbEIvUyxLQUFLK1MsTUFBUSxLQUNiL1MsS0FBS2dULFl6Qk53QixFeUJPN0JoVCxLQUFLaUwsV2JkQSxJQUFJLEdBQVcsQ0FDcEJPLE1BQU9uQyxFQUFxQlIsUUFDNUI0QyxLQUFNbkMsRUFBb0JULFFBQzFCcUYsTUFBTzNFLEVBQXFCVixRQUM1QjZDLFdBQVksY0FBTyxHQUFTLEtBQzVCRSxPRHhCVyxJY2tDWDVMLEtBQUs2UixVQUFZLFNBQ25CLEVBQ08sWUFBQXBDLGdCQUFQLFdBQ0V6UCxLQUFLaVQsTUFBTXZELGtCQUNYMVAsS0FBS2lULE1BQU10RCxrQkFDWDNQLEtBQUtpVCxNQUFNWixpQkFDWHJTLEtBQUtpVCxNQUFNWCxTQUNYdFMsS0FBS2tULGlCQUNMbFQsS0FBS21ULGVBQ1AsRUFFUSxZQUFBQSxjQUFSLFdBQ01uVCxLQUFLNlIsWUFBYzdSLEtBQUs0UyxrQkFDMUI1UyxLQUFLNFMsZ0JBQWtCNVMsS0FBS2lULE1BQU1wQixVQUNsQzdSLEtBQUs2UixVQUFZN1IsS0FBS2lULE1BQU1wQixVQUVoQyxFQUNRLFlBQUFxQixlQUFSLFdBQ0VsVCxLQUFLZ1QsWUFBY2hULEtBQUtpVCxNQUFNeEIsTUFDaEMsRUFFQSxzQkFBSSxxQkFBTSxDLElBQVYsV0FDRSxPQUFPelIsS0FBS2dULFdBQ2QsRSxnQ0FDQSxzQkFBWSx3QkFBUyxDLElBQXJCLFcsTUFDRSxPQUEyQixRQUFwQixFQUFBaFQsS0FBS2lULE1BQU1wQixpQkFBUyxRQUFJLGdCQUNqQyxFLElBQ0EsU0FBc0J1QixHQUF0QixXQUdFLE9BRkFOLGFBQWE5UyxLQUFLK1MsT0FFVkssR0FDTixJQUFLLGlCQUNIcFQsS0FBS2lULE1BQVEsSUFBSSxHQUFtQmpULEtBQUtpTCxXQUFZakwsS0FBS2dULGFBQzFELE1BRUYsSUFBSyxVQUNIaFQsS0FBS2lULE1BQVEsSUFBSSxHQUFhalQsS0FBS2lMLFdBQVlqTCxLQUFLZ1QsYUFDcEQsTUFFRixJQUFLLHVCQUNIaFQsS0FBSytTLE1BQVFNLFlBQVcsV0FDdEIsRUFBS3hCLFVBQVksU0FDbkIsR3pCN0RvQyxLeUIrRHBDN1IsS0FBS2lULE1BQVEsSUFBSSxHQUF3QmpULEtBQUtpTCxXQUFZakwsS0FBS2dULGFBQy9ELE1BRUYsSUFBSyxjQUNIaFQsS0FBSytTLE1BQVFNLFlBQVcsV0FDdEIsRUFBS3hCLFVBQVksTUFDbkIsR0FBRyxHQUVIN1IsS0FBS2lULE1BQVEsSUFBSSxHQUFnQmpULEtBQUtpTCxXQUFZakwsS0FBS2dULGFBQ3ZELE1BRUYsSUFBSyxPQUNIaFQsS0FBS2lULE1BQVEsSUFBSSxHQUFValQsS0FBS2lMLFdBQVlqTCxLQUFLZ1QsYUFJdkQsRSxnQ0FDRixFQXBGQSxHLGlEQ0hBLFdBVUUsV0FBWS9ILEVBQXdCd0csR0FDbEN6UixLQUFLaUwsV0FBYUEsRUFDbEJqTCxLQUFLc1AsV0FBYSxJQUFJLEdBQ3RCdFAsS0FBSzJSLGdCQUFrQixJQUFJLEdBQWdCM1IsS0FBS2lMLFdBQVksVUFDNURqTCxLQUFLMlEsYUFBZSxJQUFJLEdBQ3hCM1EsS0FBSzRSLGVBQWlCeEUsS0FBS0MsTTFCQUcsSTBCQzlCck4sS0FBSzZSLFVBQVksaUJBQ2pCN1IsS0FBS3lSLE9BQVNBLENBQ2hCLENBZ0NGLE9BOUJTLFlBQUEvQixnQkFBUCxXQ0tzQixJQUFDekUsRUFDakIrRyxFQUVGRyxFRFBGblMsS0FBS2lMLFdBQVdpRCxPQ0taOEQsR0FEaUIvRyxFREptQmpMLEtBQUtpTCxZQ0taTyxNQUFNN0MsRzNCZFYsRzJCZ0IzQndKLEVBQVNsSCxFQUFXaUQsTUFBTXZGLEVBRTFCcUosR0FDRkcsRUFBU21CLEtBQUtDLElBQUlwQixHQUNYLElBQUksRUFBTUEsRUFBUWxILEVBQVdpRCxNQUFNdEYsSUFHbkJxQyxFQUFXTyxNQUFNN0MsR0FBS1MsSUFBeUM2QixFQUFXUSxLQUFLekMsT0FHdEdtSixHQUFVbUIsS0FBS0MsSUFBSXBCLEdBQ1osSUFBSSxFQUFNQSxFQUFRbEgsRUFBV2lELE1BQU10RixJQUdyQ3FDLEVBQVdpRCxPRHBCaEJsTyxLQUFLaUwsV0FBV2tELE1BQ2xCLEVBQ08sWUFBQXdCLGdCQUFQLFdBQ0UzUCxLQUFLc1AsV0FBV2QsV0FBV3hPLEtBQUtpTCxXQUNsQyxFQUNPLFlBQUFvSCxlQUFQLHNCQUNFclMsS0FBSzJSLGdCQUFnQmYsY0FBYSxXQUNoQyxFQUFLYSxRMUJmMkIsRzBCaUI1QixFQUFLQSxPQUNQLEVBQUtJLFVBQVksdUJBRWpCLEVBQUtBLFVBQVksYUFFckIsR0FDRixFQUNPLFlBQUFTLE9BQVAsV0FDRSxJQ2hDeUJrQixFQUFtQkMsRUFDeENqSSxFQUVBMEMsRUQ2QkVULEVBQWNMLEtBQUtDLE1BRXZCSSxFQUFjek4sS0FBSzRSLGUxQjFCUyxNMEI2QjVCNVIsS0FBSzRSLGVBQWlCbkUsRUFDdEJ6TixLQUFLMlEsYUFBYW5DLFlDdENLZ0YsRUR1Q0R4VCxLQUFLaUwsV0FBV08sTUN2Q0lpSSxFRHVDR3pULEtBQUtpTCxXQUFXUSxLQ3RDM0RELEVBQVEsSUFBSSxFQUFNZ0ksRUFBVzdLLEVBQUk4SyxFQUFVekssTUFBUSxFQUFHd0ssRUFBVzVLLEVBQUk2SyxFQUFVeEssUUFFL0VpRixFQUFRLElBQUksRUFBTW9GLEtBQUtJLE1BQXNCLEdBQWhCSixLQUFLSyxVQUFpQixFQUFHLEdBRXJELElBQUksR0FBTyxRQUFTbkksRUFBTzBDLEtEcUNsQyxFQUNGLEVBbERBLEcsd2VFTEEsWUFDRSxXQUFZakQsRUFBd0J3RyxHQUNsQyxRQUFLLFVBQUN4RyxFQUFZd0csSUFBTyxLLE9BQ3pCLEVBQUtJLFVBQVksaUIsQ0FDbkIsQ0FNRixPQVZnRCxRQU12QyxZQUFBbkMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQUMsZ0JBQVAsV0FBMEIsRUFDbkIsWUFBQTBDLGVBQVAsV0FBeUIsRUFDbEIsWUFBQUMsT0FBUCxXQUFpQixFQUNuQixFQVZBLENBQWdELEksd2VDQWhELFlBQ0UsV0FBWXJILEVBQXdCd0csR0FDbEMsUUFBSyxVQUFDeEcsRUFBWXdHLElBQU8sSyxPQUN6QixFQUFLSSxVQUFZLFUsQ0FDbkIsQ0FjRixPQWxCMEMsUUFNakMsWUFBQW5DLGdCQUFQLFdBQ0UsWUFBTUEsZ0JBQWUsVUFDdkIsRUFDTyxZQUFBQyxnQkFBUCxXQUNFLFlBQU1BLGdCQUFlLFVBQ3ZCLEVBQ08sWUFBQTBDLGVBQVAsV0FDRSxZQUFNQSxlQUFjLFVBQ3RCLEVBQ08sWUFBQUMsT0FBUCxXQUNFLFlBQU1BLE9BQU0sVUFDZCxFQUNGLEVBbEJBLENBQTBDLEksd2VDQTFDLFlBQ0UsV0FBWXJILEVBQXdCd0csR0FDbEMsUUFBSyxVQUFDeEcsRUFBWXdHLElBQU8sSyxPQUN6QixFQUFLSSxVQUFZLHVCLENBQ25CLENBY0YsT0FsQnFELFFBTTVDLFlBQUFuQyxnQkFBUCxXQUNFLFlBQU1BLGdCQUFlLFVBQ3ZCLEVBQ08sWUFBQUMsZ0JBQVAsV0FDRSxZQUFNQSxnQkFBZSxVQUN2QixFQUNPLFlBQUEwQyxlQUFQLFdBQ0UsWUFBTUEsZUFBYyxVQUN0QixFQUNPLFlBQUFDLE9BQVAsV0FDRSxZQUFNQSxPQUFNLFVBQ2QsRUFDRixFQWxCQSxDQUFxRCxJLHdlQ0FyRCxZQUNFLFdBQVlySCxFQUF3QndHLEdBQ2xDLFFBQUssVUFBQ3hHLEVBQVl3RyxJQUFPLEssT0FDekIsRUFBS0ksVUFBWSxjLENBQ25CLENBTUYsT0FWNkMsUUFNcEMsWUFBQW5DLGdCQUFQLFdBQTBCLEVBQ25CLFlBQUFDLGdCQUFQLFdBQTBCLEVBQ25CLFlBQUEwQyxlQUFQLFdBQXlCLEVBQ2xCLFlBQUFDLE9BQVAsV0FBaUIsRUFDbkIsRUFWQSxDQUE2QyxJLHdlQ0E3QyxZQUNFLFdBQVlySCxFQUF3QndHLEdBQ2xDLFFBQUssVUFBQ3hHLEVBQVl3RyxJQUFPLEssT0FDekIsRUFBS0ksVUFBWSxPLENBQ25CLENBTUYsT0FWdUMsUUFNOUIsWUFBQW5DLGdCQUFQLFdBQTBCLEVBQ25CLFlBQUFDLGdCQUFQLFdBQTBCLEVBQ25CLFlBQUEwQyxlQUFQLFdBQXlCLEVBQ2xCLFlBQUFDLE9BQVAsV0FBaUIsRUFDbkIsRUFWQSxDQUF1QyxJLEdDUXZDLFdBUUUsYUFRRSxPQVBLc0IsRUFBTTdILFdBQ1QvTCxLQUFLNFMsZ0JBQWtCLGlCQUN2QjVTLEtBQUs2UixVQUFZLGlCQUVqQitCLEVBQU03SCxTQUFXL0wsTUFHWjRULEVBQU03SCxRQUNmLENBcUVGLE9BbkVTLFlBQUE4RyxLQUFQLFdBQ0VDLGFBQWE5UyxLQUFLK1MsT0FDbEIvUyxLQUFLK1MsTUFBUSxLQUNiL1MsS0FBS2dULFlqQ051QixJaUNPNUJoVCxLQUFLaUwsV05WQSxJQUFJLEdBQVcsQ0FDcEJPLE1BQU9oQyxFQUFvQlgsUUFDM0I0QyxLQUFNaEMsRUFBbUJaLFFBQ3pCcUYsTUFBT3hFLEVBQW9CYixRQUMzQitDLE9oQjNCVSxFZ0I0QlZGLFdBQVksY0FBTyxHQUFRLE9NTTNCMUwsS0FBSzZSLFVBQVksU0FDbkIsRUFDTyxZQUFBcEMsZ0JBQVAsV0FDRXpQLEtBQUtpVCxNQUFNdkQsa0JBQ1gxUCxLQUFLaVQsTUFBTXRELGtCQUNYM1AsS0FBS2lULE1BQU1aLGlCQUNYclMsS0FBS2lULE1BQU1YLFNBQ1h0UyxLQUFLa1QsaUJBQ0xsVCxLQUFLbVQsZUFDUCxFQUVRLFlBQUFBLGNBQVIsV0FDTW5ULEtBQUs2UixZQUFjN1IsS0FBSzRTLGtCQUMxQjVTLEtBQUs0UyxnQkFBa0I1UyxLQUFLaVQsTUFBTXBCLFVBQ2xDN1IsS0FBSzZSLFVBQVk3UixLQUFLaVQsTUFBTXBCLFVBRWhDLEVBRVEsWUFBQXFCLGVBQVIsV0FDRWxULEtBQUtnVCxZQUFjaFQsS0FBS2lULE1BQU14QixNQUNoQyxFQUVBLHNCQUFJLHFCQUFNLEMsSUFBVixXQUNFLE9BQU96UixLQUFLZ1QsV0FDZCxFLGdDQUNBLHNCQUFZLHdCQUFTLEMsSUFBckIsV0FDRSxPQUFPaFQsS0FBS2lULE1BQU1wQixTQUNwQixFLElBQ0EsU0FBc0J1QixHQUF0QixXQUdFLE9BRkFOLGFBQWE5UyxLQUFLK1MsT0FFVkssR0FDTixJQUFLLGlCQUNIcFQsS0FBS2lULE1BQVEsSUFBSSxHQUFtQmpULEtBQUtpTCxXQUFZakwsS0FBS2dULGFBQzFELE1BRUYsSUFBSyxVQUNIaFQsS0FBS2lULE1BQVEsSUFBSSxHQUFhalQsS0FBS2lMLFdBQVlqTCxLQUFLZ1QsYUFDcEQsTUFFRixJQUFLLHVCQUNIaFQsS0FBSytTLE1BQVFNLFlBQVcsV0FDdEJoSixRQUFRQyxJQUFJLDRCQUNaLEVBQUt1SCxVQUFZLFNBQ25CLEdqQ3ZEbUMsS2lDeURuQzdSLEtBQUtpVCxNQUFRLElBQUksR0FBd0JqVCxLQUFLaUwsV0FBWWpMLEtBQUtnVCxhQUMvRCxNQUVGLElBQUssY0FDSGhULEtBQUtpVCxNQUFRLElBQUksR0FBZ0JqVCxLQUFLaUwsV0FBWWpMLEtBQUtnVCxhQUN2RGhULEtBQUsrUyxNQUFRTSxZQUFXLFdBQ3RCLEVBQUt4QixVQUFZLE1BQ25CLEdqQ2hFbUMsS2lDaUVuQyxNQUVGLElBQUssT0FDSDdSLEtBQUtpVCxNQUFRLElBQUksR0FBVWpULEtBQUtpTCxXQUFZakwsS0FBS2dULGFBSXZELEUsZ0NBQ0YsRUF0RkEsRyx1RUNRQSxXQVVFLGFBQ0UsSUFBS2EsRUFBUTlILFNBQVUsQ0FDckIvTCxLQUFLOFQsTUFBUSxJQUFJLEdBQ2pCOVQsS0FBSytULE9BQVMsSUFBSSxHQUNsQi9ULEtBQUtzUCxXQUFhLElBQUksR0FDdEJ0UCxLQUFLZ1UsU0FBVyxJQUFJLEdBQVcsQ0FDN0J4SSxNQUFPLElBQUksRUFBTSxFQUFHLEdBQ3BCQyxLQUFNLElBQUksRUFBS3JDLEVsQ1BPLElrQ1F0QnNDLFdsQ1BxQixPa0NRckJFLE9BQVFBLEtBRVY1TCxLQUFLaVUsaUJBQW1CLElBQUksR0FBVyxDQUNyQ3pJLE1BQU8sSUFBSSxFQUFNLEVBQUcsR0FDcEJDLEtBQU0sSUFBSSxFbENmYyxJQUVGLElrQ2N0QkMsV2xDWndDLE9rQ2F4Q0UsT0FBUUEsS0FHVjVMLEtBQUtrVSxZQUFjLElBQUksR0FBVyxDQUNoQzFJLE1BQU8sSUFBSSxFQUFNLEVBQUcsR0FDcEJDLEtBQU0sSUFBSSxFQUFLekwsS0FBSzhULE1BQU1yQyxPbENwQkosSWtDcUJ0Qi9GLFdsQ2xCdUMsT2tDbUJ2Q0UsT0FBUUEsS0FHVixJQUFNdUksRUFBUyxDQUFFeEwsRUFBRyxFQUFHQyxFQUFHLEdBQzFCNUksS0FBS29VLFFBQVUsR0FFZixJQUFLLElBQUk1VCxFQUFJLEVBQUdBLEdsQy9CVyxFa0MrQmFBLElBQUssQ0FDM0MsSUFBTTZULEVBQVNyVSxLQUFLK1QsT0FBT3RDLFFBQVVqUixFQUMvQmdMLEVBQVEsSUFBSSxFQUFNcEMsR0FBcUIrSyxFQUFPeEwsRUFBSWdCLEVBQXdCWCxPQUFTeEksRUFBRzJULEVBQU92TCxHQUVuRzVJLEtBQUtvVSxRQUFRM1UsS0FDWCxJQUFJLEdBQVcsQ0FDYitMLE1BQUssRUFDTEMsS0FBTTlCLEVBQXdCZCxRQUM5QjZDLFdBQVksY0FBTzJJLEVBQVMsR0FBVyxHQUFVLEtBQ2pEekksT0FBUUEsS0FHZCxDQUVBaUksRUFBUTlILFNBQVcvTCxJQUNyQixDQUVBLE9BQU82VCxFQUFROUgsUUFDakIsQ0ErQkYsT0E3QlMsWUFBQTBELGdCQUFQLFdBQ0V6UCxLQUFLc1Usc0JBQ0x0VSxLQUFLdVUsOEJBQ0x2VSxLQUFLd1UseUJBQ0x4VSxLQUFLeVUseUJBQ1AsRUFFUSxZQUFBSCxvQkFBUixXQUNFdFUsS0FBS3NQLFdBQVdkLFdBQVd4TyxLQUFLZ1UsU0FDbEMsRUFFUSxZQUFBTyw0QkFBUixXQUNFdlUsS0FBS3NQLFdBQVdkLFdBQVd4TyxLQUFLaVUsaUJBQ2xDLEVBRVEsWUFBQU8sdUJBQVIsV0FDRXhVLEtBQUtrVSxZQUFZekksS0FBTyxJQUFJLEVBQUt6TCxLQUFLOFQsTUFBTXJDLE9sQ2hFbEIsSWtDa0UxQnpSLEtBQUtzUCxXQUFXZCxXQUFXeE8sS0FBS2tVLFlBQ2xDLEVBRVEsWUFBQU8sd0JBQVIsV0FDRSxJQUFLLElBQUlqVSxFQUFJLEVBQUdBLEdsQ3pFYSxFa0N5RVdBLElBQUssQ0FDM0MsSUFBTTZULEVBQVNyVSxLQUFLK1QsT0FBT3RDLFFBQVVqUixFQUVyQ1IsS0FBS29VLFFBQVE1VCxFQUFJLEdBQUdrTCxXQUFhLGNBQU8ySSxFQUFTLEdBQVcsR0FBVSxLQUN0RXJVLEtBQUtzUCxXQUFXZCxXQUFXeE8sS0FBS29VLFFBQVE1VCxFQUFJLEdBQzlDLENBQ0YsRUFDRixFQXZGQSxHLEdDYkEsV0FPRSxhQUNFUixLQUFLMk4sVUFBWWIsS0FDakI5TSxLQUFLc1AsV0FBYSxJQUFJLEdBQ3RCdFAsS0FBSzhSLFNBQVcsSUFBSSxFQUN0QixDQVFGLE9BSlksWUFBQTFGLE9BQVYsV0FDRXBNLEtBQUsyTixVQUFVdkIsT0FBT3BNLEtBQUtzUCxXQUFXWCxjQUN0QzNPLEtBQUtzUCxXQUFXYixvQkFDbEIsRUFDRixFQW5CQSxHLHdlQ0NBLFlBVUUsYUFDRSxRQUFLLFlBQUUsSyxPQUNQLEVBQUtvRCxVQUFZLFVBQ2pCLEVBQUtrQyxPQUFTLElBQUksR0FDbEIsRUFBS0QsTUFBUSxJQUFJLEdBQ2pCLEVBQUtuRCxhQUFlLElBQUksR0FDeEIsRUFBSytELFFBQVUsSUFBSSxHQUVuQixFQUFLQyxTQUFVLEVBQ2YsRUFBS0Msd0JBQXlCLEVBQzlCLEVBQUtDLGVBQWlCLEtBRXRCLEVBQUtkLE9BQU9sQixPQUNaLEVBQUtpQixNQUFNakIsTyxDQUNiLENBcUNGLE9BN0QwQyxRQTBCakMsWUFBQXBELGdCQUFQLFdBQ0V6UCxLQUFLOFUseUJBRUQ5VSxLQUFLMlUsVUFJVDNVLEtBQUsrVSx5QkFDTC9VLEtBQUsrVCxPQUFPdEUsa0JBQ1p6UCxLQUFLOFQsTUFBTXJFLGtCQUNYelAsS0FBSzBVLFFBQVFqRixrQkFFYixZQUFNckQsT0FBTSxXQUNkLEVBRVEsWUFBQTBJLHVCQUFSLHNCQUNNOVUsS0FBSzhSLFNBQVM3QixZQUFZN0YsS0FDeEJwSyxLQUFLNFUseUJBQ1A1VSxLQUFLMlUsU0FBVzNVLEtBQUsyVSxTQUd2QjNVLEtBQUs0VSx3QkFBeUIsRUFFOUI5QixhQUFhOVMsS0FBSzZVLGdCQUNsQjdVLEtBQUs2VSxlQUFpQnhCLFlBQVcsV0FDL0IsRUFBS3VCLHdCQUF5QixDQUNoQyxHcEN2RHFCLElvQ3lEekIsRUFDUSxZQUFBRyx1QkFBUixXQUNFL1UsS0FBSzJRLGFBQWFOLDZCQUNsQnJRLEtBQUsyUSxhQUFhRyxRQUFReEUsU0FBUSxTQUFDaUUsR0FDakNBLEVBQU9kLGlCQUNULEdBQ0YsRUFDRixFQTdEQSxDQUEwQyxJQ05uQyxJQUFNdUYsR0FBdUMsQ0FBQyxXQUFZLFlBRXBEQyxHQUFlLE9BQ2ZDLEdBQWdCLE9DRmhCQyxHQUFhLElBQUksRUFBTSxHQUFJLEtBQzNCQyxHQUFZLElBQUksRUFBSyxJQUFLLElDRTFCQyxHQUFPLElBQUksR0FBVyxDQUNqQzlKLEtBQU0sa0NBQ05DLE1BQU8ySixHQUFXdE0sUUFDbEI0QyxLQUFNMkosR0FBVXZNLFVBR0x5TSxHQUFTLElBQUksR0FBVyxDQUNuQy9KLEtBQU0sZUFDTkMsTUFBTyxJQUFJLEVBQU0sSUFBSyxLQUN0QkMsS0FBTSxJQUFJLEVBQUssSUFBSyxNQUdUOEosR0FBa0IsSUFBSSxHQUFXLENBQzVDaEssS0FBTSxhQUNOQyxNQUFPLElBQUksRUFBTSxJQUFLLEtBQ3RCQyxLQUFNLElBQUksRUFBSyxJQUFLLE1BR1QrSixHQUFrQixJQUFJLEdBQVcsQ0FDNUNqSyxLQUFNLFlBQ05DLE1BQU8sSUFBSSxFQUFNLElBQUssS0FDdEJDLEtBQU0sSUFBSSxFQUFLLElBQUssTSxvZUNwQnRCLFlBS0UsYUFDRSxRQUFLLFlBQUUsSyxPQUNQLEVBQUtvRyxVQUFZLE9BQ2pCLEVBQUs0RCxnQkFBa0IsRUFDdkIsRUFBS0MsY0FBZ0JILEdBQWdCMU0sUUFDckMsRUFBSzhNLGVBQWlCSCxHQUFnQjNNLFEsQ0FDeEMsQ0FxREYsT0FoRXVDLFFBYXJDLHNCQUFZLDJCQUFZLEMsSUFBeEIsV0FDRSxPQUFPbU0sR0FBYWhWLEtBQUt5VixnQkFDM0IsRSxnQ0FFTyxZQUFBaEcsZ0JBQVAsV0FDRXpQLEtBQUs0VixrQkFDTDVWLEtBQUs2VixxQ0FDTDdWLEtBQUs4VixzQkFDTCxZQUFNMUosT0FBTSxVQUNkLEVBRVEsWUFBQTBKLG9CQUFSLFdBQ0U5VixLQUFLc1AsV0FBV2QsV0FBVzZHLElBQzNCclYsS0FBS3NQLFdBQVdkLFdBQVc4RyxJQUMzQnRWLEtBQUtzUCxXQUFXZCxXQUFXeE8sS0FBSzBWLGVBQ2hDMVYsS0FBS3NQLFdBQVdkLFdBQVd4TyxLQUFLMlYsZUFDbEMsRUFDUSxZQUFBQyxnQkFBUixXQUNFNVYsS0FBSytWLHVCQUNML1YsS0FBS2dXLDhCQUNQLEVBQ1EsWUFBQUQscUJBQVIsV0FDTS9WLEtBQUs4UixTQUFTN0IsWXhDR0csV3dDRk8sYUFBdEJqUSxLQUFLaVcsZUFDUGpXLEtBQUs2UixVQUFZLFdBRU8sYUFBdEI3UixLQUFLaVcsZUFDUGpXLEtBQUs2UixVQUFZLFlBR3ZCLEVBQ1EsWUFBQW1FLDZCQUFSLFdBQ0VoVyxLQUFLa1csOEJBQ0xsVyxLQUFLbVcsZ0NBQ1AsRUFDUSxZQUFBRCw0QkFBUixZQUNNbFcsS0FBSzhSLFNBQVM3QixZeENUTSxZd0NTdUJqUSxLQUFLOFIsU0FBUzdCLFlBQVlwRyxNQUN2RTdKLEtBQUt5VixnQkFBa0J6VixLQUFLeVYsaUJBQW1CLEVBQUksRUFBSXpWLEtBQUt5VixnQkFBa0IsRUFFbEYsRUFDUSxZQUFBVSwrQkFBUixXQUNFLEdBQUluVyxLQUFLOFIsU0FBUzdCLFl4Q2JRLGN3Q2F1QmpRLEtBQUs4UixTQUFTN0IsWUFBWWhHLEdBQWEsQ0FDdEYsSUFBTW1NLEVBQVVwQixHQUFhMVUsT0FBUyxFQUV0Q04sS0FBS3lWLGdCQUFrQnpWLEtBQUt5VixpQkFBbUJXLEVBQVVBLEVBQVVwVyxLQUFLeVYsZ0JBQWtCLENBQzVGLENBQ0YsRUFDUSxZQUFBSSxtQ0FBUixXQUNFN1YsS0FBSzBWLGNBQWMvSixVQUFrQyxhQUF0QjNMLEtBQUtpVyxhQUE4QmhCLEdBQWVDLEdBQ2pGbFYsS0FBSzJWLGVBQWVoSyxVQUFrQyxhQUF0QjNMLEtBQUtpVyxhQUE4QmhCLEdBQWVDLEVBQ3BGLEVBQ0YsRUFoRUEsQ0FBdUMsSUNIaEMsSUFBTSxHQUFPLElBQUksR0FBVyxDQUNqQzNKLEtBQU0sMkNBQ05DLE1BQU8ySixHQUFXdE0sUUFDbEI0QyxLQUFNMkosR0FBVXZNLFUsb2VDRmxCLFlBQ0UsYUFDRSxRQUFLLFlBQUUsSyxPQUNQLEVBQUtnSixVQUFZLFcsQ0FDbkIsQ0FpQkYsT0FyQjJDLFFBTWxDLFlBQUFwQyxnQkFBUCxXQUNFelAsS0FBSzRWLGtCQUNMNVYsS0FBSzhWLHNCQUVMLFlBQU0xSixPQUFNLFVBQ2QsRUFFUSxZQUFBMEosb0JBQVIsV0FDRTlWLEtBQUtzUCxXQUFXZCxXQUFXLEdBQzdCLEVBQ1EsWUFBQW9ILGdCQUFSLFdBQ001VixLQUFLOFIsU0FBUzdCLFkxQ3dCSSxZMEN2QnBCalEsS0FBSzZSLFVBQVksT0FFckIsRUFDRixFQXJCQSxDQUEyQyxLQ0QvQixJQ09aLFdBUUUsYUFXRSxPQVZLd0UsRUFBSXRLLFdBQ1AvTCxLQUFLMk4sVUFBWWIsS0FDakI5TSxLQUFLc1csU0FBVyxJQUFJLEdBRXBCdFcsS0FBSzZSLFVBQVksT0FDakI3UixLQUFLNFMsZ0JBQWtCNVMsS0FBS2lULE1BQU1wQixVQUVsQ3dFLEVBQUl0SyxTQUFXL0wsTUFHVnFXLEVBQUl0SyxRQUNiLENBdUNGLE9BckNFLHNCQUFZLHdCQUFTLEMsSUFBckIsV0FDRSxPQUFPL0wsS0FBS2lULE1BQU1wQixTQUNwQixFLElBQ0EsU0FBc0J1QixHQUNwQixPQUFRQSxHQUNOLElBQUssVUFDSHBULEtBQUtpVCxNQUFRLElBQUksR0FDakIsTUFFRixJQUFLLFdBQ0hqVCxLQUFLaVQsTUFBUSxJQUFJLEdBQ2pCLE1BRUYsSUFBSyxPQUNIalQsS0FBS2lULE1BQVEsSUFBSSxHQUl2QixFLGdDQUVPLFlBQUEzRixNQUFQLHNCQUNxQixJQUFJLEdBQVd0TixLQUFLMk4sV0FFNUJ2QixTQUVYcE0sS0FBS3NXLFNBQVNoSixPQUFNLFdBQ2xCLEVBQUsyRixNQUFNeEQsa0JBQ1gsRUFBSzBELGVBQ1AsR0FDRixFQUVRLFlBQUFBLGNBQVIsV0FDTW5ULEtBQUs2UixZQUFjN1IsS0FBSzRTLGtCQUMxQjVTLEtBQUs0UyxnQkFBa0I1UyxLQUFLaVQsTUFBTXBCLFVBQ2xDN1IsS0FBSzZSLFVBQVk3UixLQUFLaVQsTUFBTXBCLFVBRWhDLEVBQ0YsRUEzREEsS0RMSXZFLE8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2Fzc2V0cy9mb250cy9zdHlsZXNoZWV0LmNzcyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2luZGV4LmNzcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9nYW1lLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2dhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2dhbWUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9nYW1lL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9nYW1lL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2dhbWUvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vZ2FtZS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9pbmRleC5jc3M/Y2ZlNCIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2Fzc2V0cy9mb250cy9zdHlsZXNoZWV0LmNzcz80ZWM3Iiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL2NvbnN0cy50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL1JlbmRlckFQSS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL3N0cnVjdHMvUG9pbnQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9zdHJ1Y3RzL1NpemUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9zdHJ1Y3RzL1NwZWVkL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29uc3RzLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL0Jyb3dzZXJBUEkvY3NzLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL0Jyb3dzZXJBUEkvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL0Jyb3dzZXJBUEkvQnJvd3NlckFQSVZpZXcudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9SZW5kZXJBUEkvQnJvd3NlckFQSS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL1JlbmRlckFQSS9GYWtlQVBJLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvUmVuZGVyQVBJL2dldFJlbmRlckFQSS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9HYW1lTG9vcC9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9HYW1lV2luZG93L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvc2hhcmVkL2dldFVuaXF1ZUlkLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvc3RydWN0cy9HYW1lT2JqZWN0L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvekluZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9QbGF5ZXIvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvVmlydHVhbERPTS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvQnVsbGV0L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29udHJvbGxlcnMvS2V5Ym9hcmQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9zdG9yZXMvQnVsbGV0c1N0b3JlL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29sbGlkZXJzL0J1bGxldHNDb2xsaWRlci9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbGxpZGVycy9CdWxsZXRzQ29sbGlkZXIvaGVscGVyLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9QbGF5ZXIvUGxheWVyU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL1BsYXllci9CZWZvcmVQbGF5aW5nU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL1BsYXllci9QbGF5aW5nU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL1BsYXllci9QbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvUGxheWVyL0JlZm9yZURlYWRTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvUGxheWVyL0RlYWRTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvUGxheWVyL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9FbmVteS9FbmVteVN0YXRlLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9FbmVteS9oZWxwZXIudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL0VuZW15L0JlZm9yZVBsYXlpbmdTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvRW5lbXkvUGxheWluZ1N0YXRlLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9FbmVteS9QbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL2NvbXBvbmVudHMvRW5lbXkvQmVmb3JlRGVhZFN0YXRlLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9FbmVteS9EZWFkU3RhdGUudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9jb21wb25lbnRzL0VuZW15L2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvY29tcG9uZW50cy9MaWZlYmFyL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQXBwL0FwcFN0YXRlL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQXBwL0FwcFN0YXRlL1BsYXlpbmdTdGF0ZS50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9BcHBTdGF0ZS9NZW51U3RhdGUvY29uc3RzLnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQXBwL0FwcFN0YXRlL2NvbnN0cy50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9BcHBTdGF0ZS9NZW51U3RhdGUvbGF5b3V0LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvQXBwL0FwcFN0YXRlL01lbnVTdGF0ZS9pbmRleC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9BcHBTdGF0ZS9TZXR0aW5nc1N0YXRlL2xheW91dC50cyIsIndlYnBhY2s6Ly9nYW1lLy4vc3JjL0FwcC9BcHBTdGF0ZS9TZXR0aW5nc1N0YXRlL2luZGV4LnRzIiwid2VicGFjazovL2dhbWUvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vZ2FtZS8uL3NyYy9BcHAvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIlJvYm90by1CbGFja0l0YWxpYy5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQmxhY2tJdGFsaWMud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQmxhY2tJdGFsaWMud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fID0gbmV3IFVSTChcIlJvYm90by1CbGFja0l0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZC5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZC53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF82X19fID0gbmV3IFVSTChcIlJvYm90by1Cb2xkLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfN19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZC50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZEl0YWxpYy5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZEl0YWxpYy53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQm9sZEl0YWxpYy53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzExX19fID0gbmV3IFVSTChcIlJvYm90by1Cb2xkSXRhbGljLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTGlnaHRJdGFsaWMuZW90XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEzX19fID0gbmV3IFVSTChcIlJvYm90by1MaWdodEl0YWxpYy53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTGlnaHRJdGFsaWMud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTGlnaHRJdGFsaWMudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE2X19fID0gbmV3IFVSTChcIlJvYm90by1SZWd1bGFyLmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xN19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tUmVndWxhci53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tUmVndWxhci53b2ZmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE5X19fID0gbmV3IFVSTChcIlJvYm90by1SZWd1bGFyLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tVGhpbkl0YWxpYy5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjFfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW5JdGFsaWMud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjJfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW5JdGFsaWMud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yM19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tVGhpbkl0YWxpYy50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrLmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tQmxhY2sud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjZfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrLndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjdfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUJsYWNrLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yOF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtSXRhbGljLmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yOV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtSXRhbGljLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMwX19fID0gbmV3IFVSTChcIlJvYm90by1NZWRpdW1JdGFsaWMud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtSXRhbGljLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMl9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tVGhpbi5lb3RcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzNfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW4ud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzRfX18gPSBuZXcgVVJMKFwiUm9ib3RvLVRoaW4ud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tVGhpbi50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzZfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0LmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zN19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTGlnaHQud29mZjJcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzhfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0LndvZmZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzlfX18gPSBuZXcgVVJMKFwiUm9ib3RvLUxpZ2h0LnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80MF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tSXRhbGljLmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80MV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tSXRhbGljLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQyX19fID0gbmV3IFVSTChcIlJvYm90by1JdGFsaWMud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80M19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tSXRhbGljLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80NF9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtLmVvdFwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80NV9fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtLndvZmYyXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ2X19fID0gbmV3IFVSTChcIlJvYm90by1NZWRpdW0ud29mZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80N19fXyA9IG5ldyBVUkwoXCJSb2JvdG8tTWVkaXVtLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfN19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzVfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzhfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF82X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF85X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfN19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF84X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzhfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF85X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEwX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzExX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEyX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEyX19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE3X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTNfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE4X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE5X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTVfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIwX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTZfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIxX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTZfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xN19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMF9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yN19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIxX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yOF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIyX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yOV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIzX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI0X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI0X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMyX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjVfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMzX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjZfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM0X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM1X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjhfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM2X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjhfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzdfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yOV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzhfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzlfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMl9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80Ml9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMzX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80M19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM0X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM1X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM2X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80Nl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM2X19fLCB7IGhhc2g6IFwiPyNpZWZpeFwiIH0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ3X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ4X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzhfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ5X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUwX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUxX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDBfX18sIHsgaGFzaDogXCI/I2llZml4XCIgfSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80MV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80Ml9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80M19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80NF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80NF9fXywgeyBoYXNoOiBcIj8jaWVmaXhcIiB9KTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81N19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ1X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81OF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ2X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81OV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzQ3X19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCbGFjayBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1CbGFja0l0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzRfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQm9sZCcpLCBsb2NhbCgnUm9ib3RvLUJvbGQnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNl9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfN19fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOF9fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF85X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTBfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQm9sZCBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1Cb2xkSXRhbGljJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzExX19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMl9fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTNfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTRfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNV9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBMaWdodCBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1MaWdodEl0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNl9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE4X19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE5X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMF9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90bycpLCBsb2NhbCgnUm9ib3RvLVJlZ3VsYXInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjFfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIyX19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yM19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yNF9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gVGhpbiBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1UaGluSXRhbGljJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI2X19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yN19fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjhfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjlfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMwX19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJsYWNrJyksIGxvY2FsKCdSb2JvdG8tQmxhY2snKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzFfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMyX19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zM19fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNF9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogOTAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICAgIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzVfX199KTtcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTWVkaXVtIEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLU1lZGl1bUl0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNl9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzdfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM4X19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM5X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80MF9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBUaGluJyksIGxvY2FsKCdSb2JvdG8tVGhpbicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80MV9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDJfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQzX19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ0X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NV9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBMaWdodCcpLCBsb2NhbCgnUm9ib3RvLUxpZ2h0JyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ2X19ffSkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80N19fX30pIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDhfX199KSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDlfX199KSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUwX19ffSk7XG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLUl0YWxpYycpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MV9fX30pIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTJfX199KSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUzX19ffSkgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU0X19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81NV9fX30pO1xuICAgIHNyYzogbG9jYWwoJ1JvYm90byBNZWRpdW0nKSwgbG9jYWwoJ1JvYm90by1NZWRpdW0nKSxcbiAgICAgICAgdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTZfX199KSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU3X19ffSkgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81OF9fX30pIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81OV9fX30pIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL2ZvbnRzL3N0eWxlc2hlZXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLDRDQUFrQztJQUNsQzs7OztrRUFJb0Q7SUFDcEQsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw0Q0FBMkI7SUFDM0I7Ozs7a0VBSTZDO0lBQzdDLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQWlDO0lBQ2pDOzs7O21FQUltRDtJQUNuRCxpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUFrQztJQUNsQzs7OzttRUFJb0Q7SUFDcEQsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBOEI7SUFDOUI7Ozs7bUVBSWdEO0lBQ2hELG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQWlDO0lBQ2pDOzs7O21FQUltRDtJQUNuRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUE0QjtJQUM1Qjs7OzttRUFJOEM7SUFDOUMsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBbUM7SUFDbkM7Ozs7bUVBSXFEO0lBQ3JELGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQTJCO0lBQzNCOzs7O21FQUk2QztJQUM3QyxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDZDQUE0QjtJQUM1Qjs7OzttRUFJOEM7SUFDOUMsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQiw2Q0FBNkI7SUFDN0I7Ozs7bUVBSStDO0lBQy9DLG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkNBQTZCO0lBQzdCOzs7O21FQUkrQztJQUMvQyxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCbGFjayBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1CbGFja0l0YWxpYycpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUJsYWNrSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2tJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tQm9sZC5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIEJvbGQnKSwgbG9jYWwoJ1JvYm90by1Cb2xkJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gQm9sZCBJdGFsaWMnKSwgbG9jYWwoJ1JvYm90by1Cb2xkSXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQm9sZEl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1Cb2xkSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIExpZ2h0IEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLUxpZ2h0SXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHRJdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1MaWdodEl0YWxpYy50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1SZWd1bGFyLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8nKSwgbG9jYWwoJ1JvYm90by1SZWd1bGFyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1SZWd1bGFyLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1SZWd1bGFyLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLVRoaW5JdGFsaWMuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBUaGluIEl0YWxpYycpLCBsb2NhbCgnUm9ib3RvLVRoaW5JdGFsaWMnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVRoaW5JdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVRoaW5JdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLVRoaW5JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogMTAwO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tQmxhY2suZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBCbGFjaycpLCBsb2NhbCgnUm9ib3RvLUJsYWNrJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1CbGFjay5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tQmxhY2sud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1CbGFjay53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1CbGFjay50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gICAgc3JjOiB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMuZW90Jyk7XFxuICAgIHNyYzogbG9jYWwoJ1JvYm90byBNZWRpdW0gSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tTWVkaXVtSXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bUl0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW1JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tVGhpbi5lb3QnKTtcXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvIFRoaW4nKSwgbG9jYWwoJ1JvYm90by1UaGluJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tVGhpbi53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1UaGluLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnUm9ib3RvLUxpZ2h0LmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTGlnaHQnKSwgbG9jYWwoJ1JvYm90by1MaWdodCcpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUxpZ2h0LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHQud29mZicpIGZvcm1hdCgnd29mZicpLFxcbiAgICAgICAgdXJsKCdSb2JvdG8tTGlnaHQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogMzAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tSXRhbGljLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gSXRhbGljJyksIGxvY2FsKCdSb2JvdG8tSXRhbGljJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1JdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUl0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCdSb2JvdG8tTWVkaXVtLmVvdCcpO1xcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8gTWVkaXVtJyksIGxvY2FsKCdSb2JvdG8tTWVkaXVtJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW0uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcXG4gICAgICAgIHVybCgnUm9ib3RvLU1lZGl1bS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXFxuICAgICAgICB1cmwoJ1JvYm90by1NZWRpdW0udHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgaHRtbCwgYm9keSB7XG4gIG1hcmdpbjogMDtcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9pbmRleC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxTQUFTO0FBQ1hcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCwgYm9keSB7XFxuICBtYXJnaW46IDA7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCAmJiBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PT0gJ1NDUklQVCcpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDc5MjogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXNoZWV0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlc2hlZXQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGNvbnN0IFJPT1RfSUQgPSAncm9vdCc7XG5leHBvcnQgY29uc3QgR0FNRV9XSU5ET1dfSUQgPSAnZ2FtZS13aW5kb3cnO1xuIiwiaW1wb3J0IHsgVmlydHVhbERPTUNoYW5nZSB9IGZyb20gJ34vVmlydHVhbERPTS90eXBlcyc7XG5cbmV4cG9ydCB0eXBlIFJlbmRlckFQSVR5cGUgPSAnYnJvd3NlcicgfCAnZmFrZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIFJlbmRlckFQSSB7XG4gIHB1YmxpYyBhYnN0cmFjdCByZW5kZXJHYW1lV2luZG93KCk6IHZvaWQ7XG4gIHB1YmxpYyBhYnN0cmFjdCBjbGVhckFsbCgpOiB2b2lkO1xuICBwdWJsaWMgYWJzdHJhY3QgcmVuZGVyKGNoYW5nZXM6IFZpcnR1YWxET01DaGFuZ2VbXSk6IHZvaWQ7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb2ludCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSB4OiBudW1iZXIsIHB1YmxpYyByZWFkb25seSB5OiBudW1iZXIpIHt9XG5cbiAgcHVibGljIGNsb25lKCk6IFBvaW50IHtcbiAgICByZXR1cm4gbmV3IFBvaW50KHRoaXMueCwgdGhpcy55KTtcbiAgfVxuXG4gIHB1YmxpYyB2YWx1ZU9mKCkge1xuICAgIHJldHVybiB0aGlzLnggKyAnICcgKyB0aGlzLnk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNpemUge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgd2lkdGg6IG51bWJlciwgcHVibGljIHJlYWRvbmx5IGhlaWdodDogbnVtYmVyKSB7fVxuXG4gIHB1YmxpYyBjbG9uZSgpOiBTaXplIHtcbiAgICByZXR1cm4gbmV3IFNpemUodGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xuICB9XG5cbiAgcHVibGljIHZhbHVlT2YoKSB7XG4gICAgcmV0dXJuIHRoaXMud2lkdGggKyAnICcgKyB0aGlzLmhlaWdodDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BlZWQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgeDogbnVtYmVyLCBwdWJsaWMgcmVhZG9ubHkgeTogbnVtYmVyKSB7fVxuXG4gIHB1YmxpYyBjbG9uZSgpOiBTcGVlZCB7XG4gICAgcmV0dXJuIG5ldyBTcGVlZCh0aGlzLngsIHRoaXMueSk7XG4gIH1cblxuICBwdWJsaWMgdmFsdWVPZigpIHtcbiAgICByZXR1cm4gdGhpcy54ICsgJyAnICsgdGhpcy55O1xuICB9XG59XG4iLCJpbXBvcnQgUG9pbnQgZnJvbSAnfi9zdHJ1Y3RzL1BvaW50JztcbmltcG9ydCBTaXplIGZyb20gJ34vc3RydWN0cy9TaXplJztcbmltcG9ydCBTcGVlZCBmcm9tICd+L3N0cnVjdHMvU3BlZWQnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9ERUJPVU5DRSA9IDMwMDtcbmV4cG9ydCBjb25zdCBQQVVTRV9ERUxBWSA9IDUwO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfRlJBTUVfRFVSQVRJT04gPSAzMztcbmV4cG9ydCBjb25zdCBHQU1FX1dJTkRPV19XSURUSCA9IDgwMDtcbmV4cG9ydCBjb25zdCBHQU1FX1dJTkRPV19IRUlHSFQgPSA2MDA7XG5cbmV4cG9ydCBjb25zdCBQTEFZRVJfSU5JVElBTF9QT0lOVCA9IG5ldyBQb2ludCgzODAsIDUwMCk7XG5leHBvcnQgY29uc3QgUExBWUVSX0lOSVRJQUxfU0laRSA9IG5ldyBTaXplKDM0LCA0Nyk7XG5leHBvcnQgY29uc3QgUExBWUVSX0lOSVRJQUxfU1BFRUQgPSBuZXcgU3BlZWQoMCwgMCk7XG5leHBvcnQgY29uc3QgUExBWUVSX01PVkVNRU5UX1NQRUVEID0gNDtcbmV4cG9ydCBjb25zdCBQTEFZRVJfTUlOX1RPUCA9IDM1MDtcbmV4cG9ydCBjb25zdCBQTEFZRVJfQVRUQUNLX0RFTEFZID0gNTAwO1xuZXhwb3J0IGNvbnN0IFBMQVlFUl9BRlRFUl9EQU1BR0VfRFVSQVRJT04gPSAzMDAwO1xuXG5leHBvcnQgY29uc3QgRU5FTVlfSU5JVElBTF9QT0lOVCA9IG5ldyBQb2ludCgzNTAsIDUwKTtcbmV4cG9ydCBjb25zdCBFTkVNWV9JTklUSUFMX1NJWkUgPSBuZXcgU2l6ZSgxMDAsIDEwMCk7XG5leHBvcnQgY29uc3QgRU5FTVlfSU5JVElBTF9TUEVFRCA9IG5ldyBTcGVlZCg0LCAwKTtcbmV4cG9ydCBjb25zdCBFTkVNWV9MRUZUX0JPUkRFUiA9IDUwO1xuZXhwb3J0IGNvbnN0IEVORU1ZX1JJR0hUX0JPUkRFUiA9IDUwO1xuZXhwb3J0IGNvbnN0IEVORU1ZX1JFQ0VJVklOR19EQU1BR0UgPSAxMDtcbmV4cG9ydCBjb25zdCBFTkVNWV9BVFRBQ0tfREVMQVkgPSAyMDA7XG5leHBvcnQgY29uc3QgRU5FTVlfQUZURVJfREFNQUdFX0RVUkFUSU9OID0gNTAwO1xuXG5leHBvcnQgY29uc3QgUExBWUVSX01BWF9IRUFMVEggPSAzO1xuZXhwb3J0IGNvbnN0IEVORU1ZX01BWF9IRUFMVEggPSA0MDA7XG5cbmV4cG9ydCBjb25zdCBMSUZFQkFSX0hFSUdIVCA9IDI5O1xuZXhwb3J0IGNvbnN0IExJRkVCQVJfQ09MT1IgPSAnIzAwOSc7XG5leHBvcnQgY29uc3QgTElGRUJBUl9FTkVNWV9FTVBUWV9IRUFMVEhfQ09MT1IgPSAnIzAwMCc7XG5leHBvcnQgY29uc3QgTElGRUJBUl9FTkVNWV9GVUxMX0hFQUxUSF9DT0xPUiA9ICcjZjAwJztcblxuZXhwb3J0IGNvbnN0IFBMQVlFUl9IRUFMVEhfSUNPTl9TSVpFID0gbmV3IFNpemUoMzAsIDI3KTtcblxuZXhwb3J0IGNvbnN0IEJVTExFVF9TSVpFID0gbmV3IFNpemUoMTQsIDE0KTtcblxuZXhwb3J0IGNvbnN0IEtFWV9UT1AgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnS0VZX1RPUCcpID8/ICdXJztcbmV4cG9ydCBjb25zdCBLRVlfTEVGVCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdLRVlfTEVGVCcpID8/ICdBJztcbmV4cG9ydCBjb25zdCBLRVlfQk9UVE9NID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ0tFWV9CT1RUT00nKSA/PyAnUyc7XG5leHBvcnQgY29uc3QgS0VZX1JJR0hUID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ0tFWV9SSUdIVCcpID8/ICdEJztcbmV4cG9ydCBjb25zdCBLRVlfQVRUQUNLID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ0tFWV9BVFRBQ0snKSA/PyAnSyc7XG5leHBvcnQgY29uc3QgS0VZX1BBVVNFID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ0tFWV9QQVVTRScpID8/ICdQJztcbmV4cG9ydCBjb25zdCBLRVlfRU5URVIgPSAnRW50ZXInO1xuZXhwb3J0IGNvbnN0IEtFWV9FU0NBUEUgPSAnRXNjYXBlJztcbmV4cG9ydCBjb25zdCBLRVlfQVJST1dfVVAgPSAnQXJyb3dVcCc7XG5leHBvcnQgY29uc3QgS0VZX0FSUk9XX0RPV04gPSAnQXJyb3dEb3duJztcblxuY29uc29sZS5sb2coJ2tleXMnLCBLRVlfVE9QLCBLRVlfTEVGVCwgS0VZX0JPVFRPTSwgS0VZX1JJR0hULCBLRVlfQVRUQUNLLCBLRVlfUEFVU0UpO1xuIiwiaW1wb3J0IHsgR0FNRV9XSU5ET1dfV0lEVEgsIEdBTUVfV0lORE9XX0hFSUdIVCB9IGZyb20gJ34vY29uc3RzJztcblxuY29uc3QgZm9udENTUyA9IGBcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTZweDtcbmA7XG5cbmV4cG9ydCBjb25zdCByb290Q1NTID0gYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICR7Zm9udENTU31cbmA7XG5cbmV4cG9ydCBjb25zdCB3aW5kb3dDU1MgPSBgXG4gIHdpZHRoOiAke0dBTUVfV0lORE9XX1dJRFRIfXB4O1xuICBoZWlnaHQ6ICR7R0FNRV9XSU5ET1dfSEVJR0hUfXB4O1xuICBiYWNrZ3JvdW5kOiAjYmJmO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuYDtcbiIsImltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICd+L1JlbmRlckFQSS9jb25zdHMnO1xuXG5pbXBvcnQgKiBhcyBjc3MgZnJvbSAnLi9jc3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkSWQoZWxlbWVudDogSFRNTEVsZW1lbnQsIGlkOiBzdHJpbmcpOiB2b2lkIHtcbiAgZWxlbWVudC5pZCA9IGlkO1xuXG4gIGlmIChwcm9jZXNzLmVudi5JU19URVNUX01PREUpIHtcbiAgICBlbGVtZW50LmRhdGFzZXQudGVzdGlkID0gaWQ7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3QoKSB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykgYXMgSFRNTEJvZHlFbGVtZW50O1xuICBjb25zdCByb290ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgYWRkSWQocm9vdCwgY29uc3RzLlJPT1RfSUQpO1xuICByb290LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCBjc3Mucm9vdENTUyk7XG4gIGJvZHkuYXBwZW5kQ2hpbGQocm9vdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVXaW5kb3coKSB7XG4gIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb25zdHMuUk9PVF9JRCk7XG5cbiAgaWYgKCFyb290KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEJyb3dzZXJBUEkgRXJyb3I6IG1ldGhvZCBcIiR7Y3JlYXRlV2luZG93Lm5hbWV9XCIgLSByb290IG5vdCBmb3VuZGBcbiAgICApO1xuICB9XG5cbiAgY29uc3Qgd2luZG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgYWRkSWQod2luZG93LCBjb25zdHMuR0FNRV9XSU5ET1dfSUQpO1xuICB3aW5kb3cuc2V0QXR0cmlidXRlKCdzdHlsZScsIGNzcy53aW5kb3dDU1MpO1xuICByb290LmFwcGVuZENoaWxkKHdpbmRvdyk7XG59XG4iLCJpbXBvcnQgeyBHYW1lT2JqZWN0U3RydWN0IH0gZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QvdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCcm93c2VyQVBJVmlldyB7XG4gIHByaXZhdGUgZ2FtZU9iamVjdDogR2FtZU9iamVjdFN0cnVjdDtcbiAgcHJpdmF0ZSBpbm5lckVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBwdWJsaWMgZ2V0IGVsZW1lbnQoKTogSFRNTEVsZW1lbnQge1xuICAgIHJldHVybiB0aGlzLmlubmVyRWxlbWVudDtcbiAgfVxuICBwdWJsaWMgZ2V0IGlkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZ2FtZU9iamVjdC5pZDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3RTdHJ1Y3QpIHtcbiAgICB0aGlzLmdhbWVPYmplY3QgPSBnYW1lT2JqZWN0O1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIHB1YmxpYyBjcmVhdGVFbGVtZW50KCkge1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIH1cblxuICBwdWJsaWMgc2V0RWxlbWVudChodG1sOiBIVE1MRWxlbWVudCkge1xuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gaHRtbDtcbiAgfVxuXG4gIHB1YmxpYyBhcHBseUFjdHVhbENoYW5nZSgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdHlsZScsIHRoaXMuY3NzKTtcbiAgICB0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gdGhpcy5nYW1lT2JqZWN0LnRleHQ7XG4gIH1cblxuICBwcml2YXRlIGdldCBjc3MoKTogc3RyaW5nIHtcbiAgICBjb25zdCB7IHBvaW50LCBzaXplLCBiYWNrZ3JvdW5kLCB0ZXh0Q29sb3IsIHpJbmRleCB9ID0gdGhpcy5nYW1lT2JqZWN0O1xuXG4gICAgcmV0dXJuIGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAke3BvaW50Lnl9cHg7XG4gICAgbGVmdDogJHtwb2ludC54fXB4O1xuICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICB3aWR0aDogJHtzaXplLndpZHRofXB4O1xuICAgIGhlaWdodDogJHtzaXplLmhlaWdodH1weDtcbiAgICBiYWNrZ3JvdW5kOiAke2JhY2tncm91bmR9O1xuICAgIGNvbG9yOiAke3RleHRDb2xvcn07XG4gICAgYDtcbiAgfVxufVxuIiwiaW1wb3J0ICogYXMgY29uc3RzIGZyb20gJ34vUmVuZGVyQVBJL2NvbnN0cyc7XG5pbXBvcnQgUmVuZGVyQVBJIGZyb20gJ34vUmVuZGVyQVBJJztcbmltcG9ydCB7IEdhbWVPYmplY3RTdHJ1Y3QgfSBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdC90eXBlcyc7XG5pbXBvcnQgeyBWaXJ0dWFsRE9NQ2hhbmdlIH0gZnJvbSAnfi9WaXJ0dWFsRE9NL3R5cGVzJztcblxuaW1wb3J0ICogYXMgSGVscGVyIGZyb20gJy4vaGVscGVyJztcbmltcG9ydCBCcm93c2VyQVBJVmlldyBmcm9tICcuL0Jyb3dzZXJBUElWaWV3JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnJvd3NlckFQSSBleHRlbmRzIFJlbmRlckFQSSB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBCcm93c2VyQVBJIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgZWxlbWVudHNNYXA6IFJlY29yZDxHYW1lT2JqZWN0U3RydWN0WydpZCddLCBCcm93c2VyQVBJVmlldz4gPSB7fTtcbiAgcHJpdmF0ZSBnZXQgd2luZG93KCk6IEhUTUxFbGVtZW50IHtcbiAgICBjb25zdCB3aW5kb3dOb2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29uc3RzLkdBTUVfV0lORE9XX0lEKTtcblxuICAgIGlmICghd2luZG93Tm9kZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdCcm93c2VyQVBJIEVycm9yOiB5b3UgY2FuXFwndCB1c2UgcHJvcGVydHkgXCJ3aW5kb3dcIiBiZWZvcmUgY2FsbCBvZiBtZXRob2QgXCJyZW5kZXJHYW1lV2luZG93XCInKTtcbiAgICB9XG5cbiAgICByZXR1cm4gd2luZG93Tm9kZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBpZiAoIUJyb3dzZXJBUEkuaW5zdGFuY2UpIHtcbiAgICAgIEJyb3dzZXJBUEkuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBCcm93c2VyQVBJLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIHJlbmRlckdhbWVXaW5kb3coKTogdm9pZCB7XG4gICAgSGVscGVyLmNyZWF0ZVJvb3QoKTtcbiAgICBIZWxwZXIuY3JlYXRlV2luZG93KCk7XG4gIH1cbiAgcHVibGljIGNsZWFyQWxsKCk6IHZvaWQge1xuICAgIGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gJyc7XG4gIH1cbiAgcHVibGljIHJlbmRlcihjaGFuZ2VzOiBWaXJ0dWFsRE9NQ2hhbmdlW10pOiB2b2lkIHtcbiAgICBjaGFuZ2VzLmZvckVhY2goKGNoYW5nZSkgPT4ge1xuICAgICAgc3dpdGNoIChjaGFuZ2UuYWN0aW9uKSB7XG4gICAgICAgIGNhc2UgJ21vdW50Jzoge1xuICAgICAgICAgIHRoaXMubW91bnQoY2hhbmdlLmdhbWVPYmplY3QpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ3VubW91bnQnOiB7XG4gICAgICAgICAgdGhpcy51bm1vdW50KGNoYW5nZS5nYW1lT2JqZWN0KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICd1cGRhdGUnOiB7XG4gICAgICAgICAgdGhpcy51cGRhdGUoY2hhbmdlLmdhbWVPYmplY3QpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIG1vdW50KGdhbWVPYmplY3Q6IEdhbWVPYmplY3RTdHJ1Y3QpOiB2b2lkIHtcbiAgICBjb25zdCB2aWV3ID0gbmV3IEJyb3dzZXJBUElWaWV3KGdhbWVPYmplY3QpO1xuXG4gICAgdmlldy5jcmVhdGVFbGVtZW50KCk7XG4gICAgdmlldy5hcHBseUFjdHVhbENoYW5nZSgpO1xuXG4gICAgdGhpcy53aW5kb3cuYXBwZW5kQ2hpbGQodmlldy5lbGVtZW50KTtcbiAgICB0aGlzLmVsZW1lbnRzTWFwW3ZpZXcuaWRdID0gdmlldztcbiAgfVxuICBwcml2YXRlIHVwZGF0ZShnYW1lT2JqZWN0OiBHYW1lT2JqZWN0U3RydWN0KSB7XG4gICAgY29uc3QgbmV3VmlldyA9IG5ldyBCcm93c2VyQVBJVmlldyhnYW1lT2JqZWN0KTtcbiAgICBjb25zdCBvbGRWaWV3ID0gdGhpcy5lbGVtZW50c01hcFtnYW1lT2JqZWN0LmlkXTtcblxuICAgIG5ld1ZpZXcuc2V0RWxlbWVudChvbGRWaWV3LmVsZW1lbnQpO1xuICAgIG5ld1ZpZXcuYXBwbHlBY3R1YWxDaGFuZ2UoKTtcblxuICAgIHRoaXMud2luZG93LmFwcGVuZENoaWxkKG5ld1ZpZXcuZWxlbWVudCk7XG4gICAgdGhpcy5lbGVtZW50c01hcFtnYW1lT2JqZWN0LmlkXSA9IG5ld1ZpZXc7XG4gIH1cbiAgcHJpdmF0ZSB1bm1vdW50KGdhbWVPYmplY3Q6IEdhbWVPYmplY3RTdHJ1Y3QpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnRzTWFwW2dhbWVPYmplY3QuaWRdLmVsZW1lbnQucmVtb3ZlKCk7XG4gICAgZGVsZXRlIHRoaXMuZWxlbWVudHNNYXBbZ2FtZU9iamVjdC5pZF07XG4gIH1cbn1cbiIsImltcG9ydCB7IFZpcnR1YWxET01DaGFuZ2UgfSBmcm9tICd+L1ZpcnR1YWxET00vdHlwZXMnO1xuXG5pbXBvcnQgUmVuZGVyQVBJIGZyb20gJy4nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYWtlQVBJIGV4dGVuZHMgUmVuZGVyQVBJIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyByZW5kZXJHYW1lV2luZG93KCkge1xuICAgIGNvbnNvbGUubG9nKCdyZW5kZXJHYW1lV2luZG93Jyk7XG4gIH1cbiAgcHVibGljIGNsZWFyQWxsKCkge1xuICAgIGNvbnNvbGUubG9nKCdjbGVhckFsbCcpO1xuICB9XG4gIHB1YmxpYyByZW5kZXIoY2hhbmdlczogVmlydHVhbERPTUNoYW5nZVtdKTogdm9pZCB7XG4gICAgY29uc29sZS5sb2coJ3JlbmRlcicpO1xuICB9XG59XG4iLCJpbXBvcnQgQnJvd3NlckFQSSBmcm9tICcuL0Jyb3dzZXJBUEknO1xuaW1wb3J0IEZha2VBUEkgZnJvbSAnLi9GYWtlQVBJJztcbmltcG9ydCBSZW5kZXJBUEksIHsgUmVuZGVyQVBJVHlwZSB9IGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRSZW5kZXJBUEkoKTogUmVuZGVyQVBJIHtcbiAgY29uc3QgdHlwZTogUmVuZGVyQVBJVHlwZSA9XG4gICAgKHByb2Nlc3MuZW52LlJFTkRFUl9BUEkgYXMgUmVuZGVyQVBJVHlwZSkgPz8gJ2Jyb3dzZXInO1xuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ2Jyb3dzZXInOlxuICAgICAgcmV0dXJuIG5ldyBCcm93c2VyQVBJKCk7XG4gICAgY2FzZSAnZmFrZSc6XG4gICAgICByZXR1cm4gbmV3IEZha2VBUEkoKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGVudiBSRU5ERVJfQVBJOiAke3R5cGV9YCk7XG4gIH1cbn1cbiIsImltcG9ydCB7IERFRkFVTFRfRlJBTUVfRFVSQVRJT04gfSBmcm9tICd+L2NvbnN0cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVMb29wIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEdhbWVMb29wO1xuICBwcml2YXRlIGZyYW1lRHVyYXRpb246IG51bWJlcjtcbiAgcHJpdmF0ZSBsYXN0RnJhbWVUaW1lOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoZnJhbWVEdXJhdGlvbjogbnVtYmVyID0gREVGQVVMVF9GUkFNRV9EVVJBVElPTikge1xuICAgIGlmICghR2FtZUxvb3AuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMubGFzdEZyYW1lVGltZSA9IERhdGUubm93KCk7XG4gICAgICB0aGlzLmZyYW1lRHVyYXRpb24gPSBmcmFtZUR1cmF0aW9uO1xuICAgICAgR2FtZUxvb3AuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBHYW1lTG9vcC5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyBzdGFydChmbjogRnVuY3Rpb24pIHtcbiAgICBjb25zdCBsb29wID0gKCkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudFRpbWUgPSBEYXRlLm5vdygpO1xuXG4gICAgICBpZiAodGhpcy5sYXN0RnJhbWVUaW1lICsgdGhpcy5mcmFtZUR1cmF0aW9uIDw9IGN1cnJlbnRUaW1lKSB7XG4gICAgICAgIHRoaXMubGFzdEZyYW1lVGltZSA9IGN1cnJlbnRUaW1lO1xuICAgICAgICBmbigpO1xuICAgICAgfVxuXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XG4gICAgfTtcblxuICAgIGxvb3AoKTtcbiAgfVxufVxuIiwiaW1wb3J0IFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVXaW5kb3cge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogR2FtZVdpbmRvdyB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIHJlbmRlckFQSTogUmVuZGVyQVBJIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IocmVuZGVyQVBJOiBSZW5kZXJBUEkpIHtcbiAgICBpZiAoIUdhbWVXaW5kb3cuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMucmVuZGVyQVBJID0gcmVuZGVyQVBJO1xuICAgICAgR2FtZVdpbmRvdy5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIEdhbWVXaW5kb3cuaW5zdGFuY2U7XG4gIH1cblxuICBwdWJsaWMgcmVuZGVyKCkge1xuICAgIHRoaXMucmVuZGVyQVBJLnJlbmRlckdhbWVXaW5kb3coKTtcbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95KCkge1xuICAgIHRoaXMuaGFuZGxlRXJyb3JzRm9yRGVzdHJveSgpO1xuICAgIHRoaXMucmVuZGVyQVBJLmNsZWFyQWxsKCk7XG4gICAgdGhpcy5yZW5kZXJBUEkgPSBudWxsO1xuICAgIEdhbWVXaW5kb3cuaW5zdGFuY2UgPSBudWxsO1xuICB9XG5cbiAgcHJpdmF0ZSBoYW5kbGVFcnJvcnNGb3JEZXN0cm95KCkge1xuICAgIGlmICghcHJvY2Vzcy5lbnYuSVNfVEVTVF9NT0RFKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdHYW1lV2luZG93IEVycm9yOiBjYWxsZWQgbWV0aG9kIFwiZGVzdHJveVwiICh3aGljaCBmb3IgdGVzdHMgb25seSEpIG5vdCBpbiB0ZXN0cydcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLnJlbmRlckFQSSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnR2FtZVdpbmRvdyBFcnJvcjogY2FsbGVkIG1ldGhvZCBcImRlc3Ryb3lcIiB3aXRob3V0IGFkZGluZyBvZiByZW5kZXJBUEknXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuIiwiY29uc3QgZ2V0VW5pcXVlSWQgPSAoZnVuY3Rpb24gKCkge1xuICBsZXQgbGFzdFVuaXF1ZUlkOiBzdHJpbmcgPSAnJztcbiAgbGV0IGFtb3VudEdpdmVuU2FtZUlkID0gMDtcblxuICByZXR1cm4gZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XG4gICAgY29uc3QgaWQgPSBEYXRlLm5vdygpICsgJyc7XG5cbiAgICBpZiAobGFzdFVuaXF1ZUlkID09PSBpZCkge1xuICAgICAgYW1vdW50R2l2ZW5TYW1lSWQrKztcblxuICAgICAgcmV0dXJuIGxhc3RVbmlxdWVJZCArICcgJyArIGFtb3VudEdpdmVuU2FtZUlkO1xuICAgIH1cblxuICAgIGxhc3RVbmlxdWVJZCA9IGlkO1xuXG4gICAgcmV0dXJuIGlkO1xuICB9O1xufSkoKTtcblxuZXhwb3J0IGRlZmF1bHQgZ2V0VW5pcXVlSWQ7XG4iLCJpbXBvcnQgUG9pbnQgZnJvbSAnfi9zdHJ1Y3RzL1BvaW50JztcbmltcG9ydCBTaXplIGZyb20gJ34vc3RydWN0cy9TaXplJztcbmltcG9ydCBTcGVlZCBmcm9tICd+L3N0cnVjdHMvU3BlZWQnO1xuaW1wb3J0IGdldFVuaXF1ZUlkIGZyb20gJ34vc2hhcmVkL2dldFVuaXF1ZUlkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU9iamVjdCB7XG4gIHB1YmxpYyBwb2ludDogUG9pbnQ7XG4gIHB1YmxpYyBzaXplOiBTaXplO1xuICBwdWJsaWMgekluZGV4OiBudW1iZXI7XG4gIHB1YmxpYyBzcGVlZDogU3BlZWQ7XG4gIHB1YmxpYyB0ZXh0OiBzdHJpbmc7XG4gIHB1YmxpYyB0ZXh0Q29sb3I6IHN0cmluZztcbiAgcHVibGljIGJhY2tncm91bmQ6IHN0cmluZztcbiAgcHVibGljIHJlYWRvbmx5IGlkOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgc3RydWN0PzogUGFydGlhbDx7XG4gICAgICBpZDogc3RyaW5nO1xuICAgICAgcG9pbnQ6IFBvaW50O1xuICAgICAgc2l6ZTogU2l6ZTtcbiAgICAgIHNwZWVkOiBTcGVlZDtcbiAgICAgIHpJbmRleDogbnVtYmVyO1xuICAgICAgYmFja2dyb3VuZDogc3RyaW5nO1xuICAgICAgdGV4dDogc3RyaW5nO1xuICAgICAgdGV4dENvbG9yOiBzdHJpbmc7XG4gICAgfT5cbiAgKSB7XG4gICAgdGhpcy5pZCA9IHN0cnVjdD8uaWQgPz8gZ2V0VW5pcXVlSWQoKTtcbiAgICB0aGlzLnBvaW50ID0gc3RydWN0Py5wb2ludCA/PyBuZXcgUG9pbnQoMCwgMCk7XG4gICAgdGhpcy5zaXplID0gc3RydWN0Py5zaXplID8/IG5ldyBTaXplKDEsIDEpO1xuICAgIHRoaXMuc3BlZWQgPSBzdHJ1Y3Q/LnNwZWVkID8/IG5ldyBTcGVlZCgwLCAwKTtcbiAgICB0aGlzLnpJbmRleCA9IHN0cnVjdD8uekluZGV4ID8/IDE7XG4gICAgdGhpcy50ZXh0ID0gc3RydWN0Py50ZXh0ID8/ICcnO1xuICAgIHRoaXMudGV4dENvbG9yID0gc3RydWN0Py50ZXh0Q29sb3IgPz8gJyMwMDAnO1xuICAgIHRoaXMuYmFja2dyb3VuZCA9IHN0cnVjdD8uYmFja2dyb3VuZCA/PyAndHJhbnNwYXJlbnQnO1xuICB9XG5cbiAgcHVibGljIG1vdmUoKSB7XG4gICAgdGhpcy5wb2ludCA9IG5ldyBQb2ludCh0aGlzLnBvaW50LnggKyB0aGlzLnNwZWVkLngsIHRoaXMucG9pbnQueSArIHRoaXMuc3BlZWQueSk7XG4gIH1cblxuICBwdWJsaWMgY2xvbmUoKSB7XG4gICAgcmV0dXJuIG5ldyBHYW1lT2JqZWN0KHRoaXMpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIHBsYXllclN0YXRlOiAyLFxuICBlbmVteVN0YXRlOiAyLFxuICBidWxsZXRTdGF0ZTogMyxcbiAgbGlmZWJhcjoge1xuICAgIGVtcHR5TGlmZWJhcjogNCxcbiAgICBlbmVteUVtcHR5SGVhbHRoOiA1LFxuICAgIGVuZW15SGVhbHRoOiA2LFxuICAgIHBsYXllckhlYWx0aDogNyxcbiAgfSxcbn07XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5pbXBvcnQgS2V5Ym9hcmQgZnJvbSAnfi9jb250cm9sbGVycy9LZXlib2FyZCc7XG5pbXBvcnQgU3BlZWQgZnJvbSAnfi9zdHJ1Y3RzL1NwZWVkJztcbmltcG9ydCBwbGF5ZXJQbmcgZnJvbSAnfi9hc3NldHMvaW1nL3dpemFyZC5wbmcnO1xuaW1wb3J0IHtcbiAgUExBWUVSX0lOSVRJQUxfUE9JTlQsXG4gIFBMQVlFUl9JTklUSUFMX1NJWkUsXG4gIFBMQVlFUl9JTklUSUFMX1NQRUVELFxuICBQTEFZRVJfTUlOX1RPUCxcbiAgR0FNRV9XSU5ET1dfSEVJR0hULFxuICBHQU1FX1dJTkRPV19XSURUSCxcbiAgUExBWUVSX01PVkVNRU5UX1NQRUVELFxuICBLRVlfVE9QLFxuICBLRVlfTEVGVCxcbiAgS0VZX1JJR0hULFxuICBLRVlfQk9UVE9NLFxufSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgekluZGV4IGZyb20gJ34vekluZGV4JztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUluaXRpYWxHYW1lT2JqZWN0ID0gKCkgPT4ge1xuICByZXR1cm4gbmV3IEdhbWVPYmplY3Qoe1xuICAgIHBvaW50OiBQTEFZRVJfSU5JVElBTF9QT0lOVC5jbG9uZSgpLFxuICAgIHNpemU6IFBMQVlFUl9JTklUSUFMX1NJWkUuY2xvbmUoKSxcbiAgICBzcGVlZDogUExBWUVSX0lOSVRJQUxfU1BFRUQuY2xvbmUoKSxcbiAgICBiYWNrZ3JvdW5kOiBgdXJsKCR7cGxheWVyUG5nfSlgLFxuICAgIHpJbmRleDogekluZGV4LnBsYXllclN0YXRlLFxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRTcGVlZEJ5S2V5Ym9hcmRzS2V5cyA9IChvYmo6IEdhbWVPYmplY3QsIGtleWJvYXJkOiBLZXlib2FyZCkgPT4ge1xuICBjb25zdCBuZWVkUHJldmVudFRvcCA9IG9iai5wb2ludC55IDw9IFBMQVlFUl9NSU5fVE9QO1xuICBjb25zdCBuZWVkUHJldmVudExlZnQgPSBvYmoucG9pbnQueCA8PSAwO1xuICBjb25zdCBuZWVkUHJldmVudEJvdHRvbSA9IG9iai5wb2ludC55ID49IEdBTUVfV0lORE9XX0hFSUdIVCAtIG9iai5zaXplLmhlaWdodDtcbiAgY29uc3QgbmVlZFByZXZlbnRSaWdodCA9IG9iai5wb2ludC54ID49IEdBTUVfV0lORE9XX1dJRFRIIC0gb2JqLnNpemUud2lkdGg7XG5cbiAgbGV0IHNwZWVkWCA9IDA7XG4gIGxldCBzcGVlZFkgPSAwO1xuXG4gIGlmIChrZXlib2FyZC5pc0FjdGl2ZUtleShLRVlfVE9QKSAmJiAhbmVlZFByZXZlbnRUb3ApIHtcbiAgICBzcGVlZFkgPSAtUExBWUVSX01PVkVNRU5UX1NQRUVEO1xuICB9XG4gIGlmIChrZXlib2FyZC5pc0FjdGl2ZUtleShLRVlfTEVGVCkgJiYgIW5lZWRQcmV2ZW50TGVmdCkge1xuICAgIHNwZWVkWCA9IC1QTEFZRVJfTU9WRU1FTlRfU1BFRUQ7XG4gIH1cbiAgaWYgKGtleWJvYXJkLmlzQWN0aXZlS2V5KEtFWV9CT1RUT00pICYmICFuZWVkUHJldmVudEJvdHRvbSkge1xuICAgIHNwZWVkWSA9IFBMQVlFUl9NT1ZFTUVOVF9TUEVFRDtcbiAgfVxuICBpZiAoa2V5Ym9hcmQuaXNBY3RpdmVLZXkoS0VZX1JJR0hUKSAmJiAhbmVlZFByZXZlbnRSaWdodCkge1xuICAgIHNwZWVkWCA9IFBMQVlFUl9NT1ZFTUVOVF9TUEVFRDtcbiAgfVxuXG4gIHJldHVybiBuZXcgU3BlZWQoc3BlZWRYLCBzcGVlZFkpO1xufTtcbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcbmltcG9ydCB7IEdhbWVPYmplY3RTdHJ1Y3QgfSBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdC90eXBlcyc7XG5cbmltcG9ydCB7IFZpcnR1YWxET01DaGFuZ2UsIFZpcnR1YWxET01HYW1lT2JqZWN0c01hcCB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaXJ0dWFsRE9NIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFZpcnR1YWxET007XG4gIHByaXZhdGUgcHJldkVsZW1lbnRzOiBWaXJ0dWFsRE9NR2FtZU9iamVjdHNNYXA7XG4gIHByaXZhdGUgbmV4dEVsZW1lbnRzOiBWaXJ0dWFsRE9NR2FtZU9iamVjdHNNYXA7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFWaXJ0dWFsRE9NLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLnByZXZFbGVtZW50cyA9IHt9O1xuICAgICAgdGhpcy5uZXh0RWxlbWVudHMgPSB7fTtcbiAgICAgIFZpcnR1YWxET00uaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBWaXJ0dWFsRE9NLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGFkZEVsZW1lbnQoZWxlbWVudDogR2FtZU9iamVjdFN0cnVjdCk6IHZvaWQge1xuICAgIHRoaXMubmV4dEVsZW1lbnRzW2VsZW1lbnQuaWRdID0gZWxlbWVudDtcbiAgfVxuICBwdWJsaWMgcHJlcGFyZUZvck5ld0ZyYW1lKCkge1xuICAgIHRoaXMucHJldkVsZW1lbnRzID0ge307XG4gICAgdGhpcy5jbG9uZU5leHRFbGVtZW50c0ludG9QcmV2RWxlbWVudHMoKTtcbiAgICB0aGlzLm5leHRFbGVtZW50cyA9IHt9O1xuICB9XG4gIHB1YmxpYyBnZXRDaGFuZ2VzKCk6IFZpcnR1YWxET01DaGFuZ2VbXSB7XG4gICAgY29uc3QgYWxsSWRzID0gdGhpcy5nZXRBbGxJZHNGcm9tTWFwcygpO1xuICAgIGNvbnN0IGNoYW5nZXM6IFZpcnR1YWxET01DaGFuZ2VbXSA9IFtdO1xuXG4gICAgYWxsSWRzLmZvckVhY2goKGlkOiBHYW1lT2JqZWN0U3RydWN0WydpZCddKSA9PiB7XG4gICAgICBjaGFuZ2VzLnB1c2godGhpcy5nZXRDaGFuZ2VGb3JFbGVtZW50QnlJZChpZCkpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNoYW5nZXM7XG4gIH1cbiAgcHVibGljIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5oYW5kbGVFcnJvcnNGb3JEZXN0cm95KCk7XG4gICAgdGhpcy5wcmV2RWxlbWVudHMgPSBudWxsO1xuICAgIHRoaXMubmV4dEVsZW1lbnRzID0gbnVsbDtcbiAgICBWaXJ0dWFsRE9NLmluc3RhbmNlID0gbnVsbDtcbiAgfVxuXG4gIHByaXZhdGUgY2xvbmVOZXh0RWxlbWVudHNJbnRvUHJldkVsZW1lbnRzKCk6IHZvaWQge1xuICAgIGZvciAoY29uc3QgaWQgaW4gdGhpcy5uZXh0RWxlbWVudHMpIHtcbiAgICAgIHRoaXMucHJldkVsZW1lbnRzW2lkXSA9IHRoaXMubmV4dEVsZW1lbnRzW2lkXS5jbG9uZSgpO1xuICAgIH1cbiAgfVxuICBwcml2YXRlIGhhbmRsZUVycm9yc0ZvckRlc3Ryb3koKSB7XG4gICAgaWYgKCFwcm9jZXNzLmVudi5JU19URVNUX01PREUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVmlydHVhbERPTSBFcnJvcjogY2FsbGVkIG1ldGhvZCBcImRlc3Ryb3lcIiAod2hpY2ggZm9yIHRlc3RzIG9ubHkhKSBub3QgaW4gdGVzdHMnKTtcbiAgICB9XG4gIH1cbiAgcHJpdmF0ZSBnZXRBbGxJZHNGcm9tTWFwcygpOiBTZXQ8R2FtZU9iamVjdFsnaWQnXT4ge1xuICAgIGNvbnN0IGFsbElkc1NldCA9IG5ldyBTZXQ8R2FtZU9iamVjdFsnaWQnXT4oKTtcblxuICAgIGZvciAoY29uc3QgaWQgaW4gdGhpcy5wcmV2RWxlbWVudHMpIHtcbiAgICAgIGFsbElkc1NldC5hZGQoaWQpO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgaWQgaW4gdGhpcy5uZXh0RWxlbWVudHMpIHtcbiAgICAgIGFsbElkc1NldC5hZGQoaWQpO1xuICAgIH1cblxuICAgIHJldHVybiBhbGxJZHNTZXQ7XG4gIH1cbiAgcHJpdmF0ZSBnZXRDaGFuZ2VGb3JFbGVtZW50QnlJZChpZDogR2FtZU9iamVjdFN0cnVjdFsnaWQnXSk6IFZpcnR1YWxET01DaGFuZ2Uge1xuICAgIGNvbnN0IHByZXZFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0IHwgbnVsbCA9IHRoaXMucHJldkVsZW1lbnRzW2lkXSA/PyBudWxsO1xuICAgIGNvbnN0IG5leHRFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0IHwgbnVsbCA9IHRoaXMubmV4dEVsZW1lbnRzW2lkXSA/PyBudWxsO1xuXG4gICAgaWYgKCFwcmV2RWxlbWVudCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2FtZU9iamVjdDogbmV4dEVsZW1lbnQsXG4gICAgICAgIGFjdGlvbjogJ21vdW50JyxcbiAgICAgIH07XG4gICAgfVxuICAgIGlmICghbmV4dEVsZW1lbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdhbWVPYmplY3Q6IHByZXZFbGVtZW50LFxuICAgICAgICBhY3Rpb246ICd1bm1vdW50JyxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGdhbWVPYmplY3Q6IG5leHRFbGVtZW50LFxuICAgICAgYWN0aW9uOiB0aGlzLmlzRWxlbWVudFVwZGF0ZWQoaWQpID8gJ3VwZGF0ZScgOiAnbm90LWEtY2hhbmdlJyxcbiAgICB9O1xuICB9XG4gIHByaXZhdGUgaXNFbGVtZW50VXBkYXRlZChpZDogR2FtZU9iamVjdFN0cnVjdFsnaWQnXSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHByZXZFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0ID0gdGhpcy5wcmV2RWxlbWVudHNbaWRdO1xuICAgIGNvbnN0IG5leHRFbGVtZW50OiBHYW1lT2JqZWN0U3RydWN0ID0gdGhpcy5uZXh0RWxlbWVudHNbaWRdO1xuXG4gICAgZm9yIChjb25zdCBrZXkgaW4gcHJldkVsZW1lbnQpIHtcbiAgICAgIGNvbnN0IHByb3BLZXkgPSBrZXkgYXMga2V5b2YgdHlwZW9mIHByZXZFbGVtZW50O1xuXG4gICAgICBpZiAocHJldkVsZW1lbnRbcHJvcEtleV0udmFsdWVPZigpICE9PSBuZXh0RWxlbWVudFtwcm9wS2V5XS52YWx1ZU9mKCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iLCJpbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IHsgQlVMTEVUX1NJWkUgfSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgekluZGV4IGZyb20gJ34vekluZGV4JztcbmltcG9ydCBlbmVteUJ1bGxldFBuZyBmcm9tICd+L2Fzc2V0cy9pbWcvd2ViLnBuZyc7XG5pbXBvcnQgcGxheWVyQnVsbGV0UG5nIGZyb20gJ34vYXNzZXRzL2ltZy9maXJlYmFsbC5wbmcnO1xuaW1wb3J0IFBvaW50IGZyb20gJ34vc3RydWN0cy9Qb2ludCc7XG5pbXBvcnQgU3BlZWQgZnJvbSAnfi9zdHJ1Y3RzL1NwZWVkJztcblxuaW1wb3J0IHsgQnVsbGV0VHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXQge1xuICBwcml2YXRlIGdhbWVPYmplY3Q6IEdhbWVPYmplY3Q7XG4gIHByaXZhdGUgdmlydHVhbERPTTogVmlydHVhbERPTTtcblxuICBnZXQgcG9pbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2FtZU9iamVjdC5wb2ludDtcbiAgfVxuICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nYW1lT2JqZWN0LnNpemU7XG4gIH1cbiAgZ2V0IGlkKCkge1xuICAgIHJldHVybiB0aGlzLmdhbWVPYmplY3QuaWQ7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgdHlwZTogQnVsbGV0VHlwZSwgcG9pbnQ6IFBvaW50LCBzcGVlZDogU3BlZWQpIHtcbiAgICB0aGlzLnZpcnR1YWxET00gPSBuZXcgVmlydHVhbERPTSgpO1xuICAgIHRoaXMuZ2FtZU9iamVjdCA9IEJ1bGxldC5jcmVhdGVJbml0aWFsU3ByaXRlKHRoaXMudHlwZSwgcG9pbnQsIHNwZWVkKTtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5wcm9jZXNzTW92ZW1lbnQoKTtcbiAgICB0aGlzLmFkZFRvTmV4dFJlbmRlcigpO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgY3JlYXRlSW5pdGlhbFNwcml0ZSh0eXBlOiBCdWxsZXRUeXBlLCBwb2ludDogUG9pbnQsIHNwZWVkOiBTcGVlZCkge1xuICAgIHJldHVybiBuZXcgR2FtZU9iamVjdCh7XG4gICAgICBwb2ludDogcG9pbnQuY2xvbmUoKSxcbiAgICAgIHNpemU6IEJVTExFVF9TSVpFLmNsb25lKCksXG4gICAgICBzcGVlZDogc3BlZWQuY2xvbmUoKSxcbiAgICAgIHpJbmRleDogekluZGV4LmJ1bGxldFN0YXRlLFxuICAgICAgYmFja2dyb3VuZDogYHVybCgke3R5cGUgPT09ICdlbmVteScgPyBlbmVteUJ1bGxldFBuZyA6IHBsYXllckJ1bGxldFBuZ30pYCxcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgcHJvY2Vzc01vdmVtZW50KCkge1xuICAgIHRoaXMuZ2FtZU9iamVjdC5tb3ZlKCk7XG4gIH1cbiAgcHJpdmF0ZSBhZGRUb05leHRSZW5kZXIoKSB7XG4gICAgdGhpcy52aXJ0dWFsRE9NLmFkZEVsZW1lbnQodGhpcy5nYW1lT2JqZWN0KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgS2V5Ym9hcmQge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogS2V5Ym9hcmQ7XG4gIHByaXZhdGUga2V5czogU2V0PHN0cmluZz47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFLZXlib2FyZC5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5rZXlzID0gbmV3IFNldCgpO1xuICAgICAgS2V5Ym9hcmQuaW5zdGFuY2UgPSB0aGlzO1xuXG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2dCkgPT4ge1xuICAgICAgICB0aGlzLmtleXMuYWRkKGV2dC5rZXkudG9VcHBlckNhc2UoKSk7XG4gICAgICB9KTtcblxuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZXZ0KSA9PiB7XG4gICAgICAgIHRoaXMua2V5cy5kZWxldGUoZXZ0LmtleS50b1VwcGVyQ2FzZSgpKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBLZXlib2FyZC5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyBpc0FjdGl2ZUtleShrZXk6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmtleXMuaGFzKGtleS50b1VwcGVyQ2FzZSgpKTtcbiAgfVxufVxuIiwiaW1wb3J0IEJ1bGxldCBmcm9tICd+L2NvbXBvbmVudHMvQnVsbGV0JztcbmltcG9ydCB7IEdBTUVfV0lORE9XX0hFSUdIVCwgR0FNRV9XSU5ET1dfV0lEVEggfSBmcm9tICd+L2NvbnN0cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldHNTdG9yZSB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBCdWxsZXRzU3RvcmU7XG4gIHByaXZhdGUgaW5uZXJCdWxsZXRzOiBCdWxsZXRbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIUJ1bGxldHNTdG9yZS5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5pbm5lckJ1bGxldHMgPSBbXTtcbiAgICAgIEJ1bGxldHNTdG9yZS5pbnN0YW5jZSA9IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIEJ1bGxldHNTdG9yZS5pbnN0YW5jZTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVCdWxsZXRzT3V0c2lkZVNjcmVlbigpOiB2b2lkIHtcbiAgICB0aGlzLmlubmVyQnVsbGV0cyA9IHRoaXMuaW5uZXJCdWxsZXRzLmZpbHRlcigoYnVsbGV0KSA9PiB7XG4gICAgICBpZiAoYnVsbGV0LnBvaW50LnggKyBidWxsZXQuc2l6ZS53aWR0aCA8IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGJ1bGxldC5wb2ludC54ID4gR0FNRV9XSU5ET1dfV0lEVEgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGJ1bGxldC5wb2ludC55ICsgYnVsbGV0LnNpemUuaGVpZ2h0IDwgMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoYnVsbGV0LnBvaW50LnkgPiBHQU1FX1dJTkRPV19IRUlHSFQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRFbGVtZW50KGJ1bGxldDogQnVsbGV0KTogdm9pZCB7XG4gICAgdGhpcy5pbm5lckJ1bGxldHMucHVzaChidWxsZXQpO1xuICB9XG4gIHB1YmxpYyByZW1vdmVFbGVtZW50KGJ1bGxldDogQnVsbGV0KTogdm9pZCB7XG4gICAgdGhpcy5pbm5lckJ1bGxldHMgPSB0aGlzLmlubmVyQnVsbGV0cy5maWx0ZXIoXG4gICAgICAoaW5uZXJCdWxsZXQpID0+IGlubmVyQnVsbGV0LmlkICE9PSBidWxsZXQuaWRcbiAgICApO1xuICB9XG5cbiAgZ2V0IGJ1bGxldHMoKTogUmVhZG9ubHk8QnVsbGV0W10+IHtcbiAgICByZXR1cm4gdGhpcy5pbm5lckJ1bGxldHM7XG4gIH1cbn1cbiIsImltcG9ydCB7IEJ1bGxldFR5cGUgfSBmcm9tICd+L2NvbXBvbmVudHMvQnVsbGV0L3R5cGVzJztcbmltcG9ydCBCdWxsZXRzU3RvcmUgZnJvbSAnfi9zdG9yZXMvQnVsbGV0c1N0b3JlJztcbmltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcblxuaW1wb3J0ICogYXMgSGVscGVyIGZyb20gJy4vaGVscGVyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0c0NvbGxpZGVyIHtcbiAgcHJpdmF0ZSBidWxsZXRzU3RvcmU6IEJ1bGxldHNTdG9yZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRhcmdldDogR2FtZU9iamVjdCwgcHJpdmF0ZSBidWxsZXRUeXBlOiBCdWxsZXRUeXBlKSB7XG4gICAgdGhpcy5idWxsZXRzU3RvcmUgPSBuZXcgQnVsbGV0c1N0b3JlKCk7XG4gIH1cblxuICBwdWJsaWMgdHJ5VG9Db2xsaWRlKGFjdGlvbldoZW5Db2xsaWRlOiAoKSA9PiB2b2lkKSB7XG4gICAgdGhpcy5idWxsZXRzU3RvcmUuYnVsbGV0cy5mb3JFYWNoKChidWxsZXQpID0+IHtcbiAgICAgIGlmICh0aGlzLmJ1bGxldFR5cGUgIT09IGJ1bGxldC50eXBlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKEhlbHBlci5oYXNDb2xsdXNpb24oYnVsbGV0LCB0aGlzLnRhcmdldCkpIHtcbiAgICAgICAgYWN0aW9uV2hlbkNvbGxpZGUoKTtcbiAgICAgICAgdGhpcy5idWxsZXRzU3RvcmUucmVtb3ZlRWxlbWVudChidWxsZXQpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgeyBHYW1lT2JqZWN0U3RydWN0IH0gZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QvdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgaGFzQ29sbHVzaW9uID0gKFxuICBvYmoxOiBQaWNrPEdhbWVPYmplY3RTdHJ1Y3QsICdwb2ludCcgfCAnc2l6ZSc+LFxuICBvYmoyOiBQaWNrPEdhbWVPYmplY3RTdHJ1Y3QsICdwb2ludCcgfCAnc2l6ZSc+XG4pID0+IHtcbiAgY29uc3QgbGVmdDEgPSBvYmoxLnBvaW50Lng7XG4gIGNvbnN0IHJpZ2h0MSA9IG9iajEucG9pbnQueCArIG9iajEuc2l6ZS53aWR0aDtcblxuICBjb25zdCBsZWZ0MiA9IG9iajIucG9pbnQueDtcbiAgY29uc3QgcmlnaHQyID0gb2JqMi5wb2ludC54ICsgb2JqMi5zaXplLndpZHRoO1xuXG4gIGlmIChcbiAgICAobGVmdDEgPj0gbGVmdDIgJiYgbGVmdDEgPD0gcmlnaHQyKSB8fFxuICAgIChyaWdodDEgPj0gbGVmdDIgJiYgcmlnaHQxIDw9IHJpZ2h0MilcbiAgKSB7XG4gICAgY29uc3QgdG9wMSA9IG9iajEucG9pbnQueTtcbiAgICBjb25zdCBib3R0b20xID0gb2JqMS5wb2ludC55ICsgb2JqMS5zaXplLmhlaWdodDtcblxuICAgIGNvbnN0IHRvcDIgPSBvYmoyLnBvaW50Lnk7XG4gICAgY29uc3QgYm90dG9tMiA9IG9iajIucG9pbnQueSArIG9iajIuc2l6ZS5oZWlnaHQ7XG5cbiAgICBpZiAoXG4gICAgICAodG9wMSA+PSB0b3AyICYmIHRvcDEgPD0gYm90dG9tMikgfHxcbiAgICAgIChib3R0b20xID49IHRvcDIgJiYgYm90dG9tMSA8PSBib3R0b20yKVxuICAgICkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufTtcbiIsImltcG9ydCB7IFBMQVlFUl9BVFRBQ0tfREVMQVksIEtFWV9BVFRBQ0sgfSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IEJ1bGxldCBmcm9tICd+L2NvbXBvbmVudHMvQnVsbGV0JztcbmltcG9ydCBLZXlib2FyZCBmcm9tICd+L2NvbnRyb2xsZXJzL0tleWJvYXJkJztcbmltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcbmltcG9ydCBCdWxsZXRzQ29sbGlkZXIgZnJvbSAnfi9jb2xsaWRlcnMvQnVsbGV0c0NvbGxpZGVyJztcbmltcG9ydCBCdWxsZXRzU3RvcmUgZnJvbSAnfi9zdG9yZXMvQnVsbGV0c1N0b3JlJztcbmltcG9ydCBTcGVlZCBmcm9tICd+L3N0cnVjdHMvU3BlZWQnO1xuXG5pbXBvcnQgKiBhcyBIZWxwZXIgZnJvbSAnLi9oZWxwZXInO1xuaW1wb3J0IHsgUGxheWVyU3RhdGVOYW1lIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIFBsYXllclN0YXRlIHtcbiAgcHJvdGVjdGVkIGtleWJvYXJkQ29udHJvbGxlcjogS2V5Ym9hcmQ7XG4gIHByb3RlY3RlZCBnYW1lT2JqZWN0OiBHYW1lT2JqZWN0O1xuICBwcm90ZWN0ZWQgdmlydHVhbERPTTogVmlydHVhbERPTTtcbiAgcHJvdGVjdGVkIGJ1bGxldHNDb2xsaWRlcjogQnVsbGV0c0NvbGxpZGVyO1xuICBwcm90ZWN0ZWQgYnVsbGV0c1N0b3JlOiBCdWxsZXRzU3RvcmU7XG4gIHByb3RlY3RlZCBsYXN0QXR0YWNrVGltZTogbnVtYmVyO1xuXG4gIHB1YmxpYyBoZWFsdGg6IG51bWJlcjtcbiAgcHVibGljIHN0YXRlTmFtZTogUGxheWVyU3RhdGVOYW1lO1xuXG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QsIGhlYWx0aDogbnVtYmVyKSB7XG4gICAgdGhpcy5rZXlib2FyZENvbnRyb2xsZXIgPSBuZXcgS2V5Ym9hcmQoKTtcbiAgICB0aGlzLmdhbWVPYmplY3QgPSBnYW1lT2JqZWN0O1xuICAgIHRoaXMudmlydHVhbERPTSA9IG5ldyBWaXJ0dWFsRE9NKCk7XG4gICAgdGhpcy5idWxsZXRzQ29sbGlkZXIgPSBuZXcgQnVsbGV0c0NvbGxpZGVyKHRoaXMuZ2FtZU9iamVjdCwgJ2VuZW15Jyk7XG4gICAgdGhpcy5idWxsZXRzU3RvcmUgPSBuZXcgQnVsbGV0c1N0b3JlKCk7XG4gICAgdGhpcy5sYXN0QXR0YWNrVGltZSA9IERhdGUubm93KCkgLSBQTEFZRVJfQVRUQUNLX0RFTEFZO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1wbGF5aW5nJztcbiAgICB0aGlzLmhlYWx0aCA9IGhlYWx0aDtcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7XG4gICAgdGhpcy5nYW1lT2JqZWN0LnNwZWVkID0gSGVscGVyLmdldFNwZWVkQnlLZXlib2FyZHNLZXlzKFxuICAgICAgdGhpcy5nYW1lT2JqZWN0LFxuICAgICAgdGhpcy5rZXlib2FyZENvbnRyb2xsZXJcbiAgICApO1xuICAgIHRoaXMuZ2FtZU9iamVjdC5tb3ZlKCk7XG4gIH1cbiAgcHVibGljIGFkZFRvTmV4dFJlbmRlcigpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudCh0aGlzLmdhbWVPYmplY3QpO1xuICB9XG4gIHB1YmxpYyByZWdpc3RlckRhbWFnZSgpIHtcbiAgICB0aGlzLmJ1bGxldHNDb2xsaWRlci50cnlUb0NvbGxpZGUoKCkgPT4ge1xuICAgICAgdGhpcy5oZWFsdGggLT0gMTtcblxuICAgICAgaWYgKHRoaXMuaGVhbHRoKSB7XG4gICAgICAgIHRoaXMuc3RhdGVOYW1lID0gJ3BsYXlpbmctYWZ0ZXItZGFtYWdlJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1kZWFkJztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBwdWJsaWMgYXR0YWNrKCkge1xuICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCByZWFkeVRvQXR0YWNrID1cbiAgICAgIGN1cnJlbnRUaW1lID4gdGhpcy5sYXN0QXR0YWNrVGltZSArIFBMQVlFUl9BVFRBQ0tfREVMQVk7XG5cbiAgICBpZiAocmVhZHlUb0F0dGFjayAmJiB0aGlzLmtleWJvYXJkQ29udHJvbGxlci5pc0FjdGl2ZUtleShLRVlfQVRUQUNLKSkge1xuICAgICAgdGhpcy5sYXN0QXR0YWNrVGltZSA9IGN1cnJlbnRUaW1lO1xuICAgICAgdGhpcy5idWxsZXRzU3RvcmUuYWRkRWxlbWVudChcbiAgICAgICAgbmV3IEJ1bGxldCgncGxheWVyJywgdGhpcy5nYW1lT2JqZWN0LnBvaW50LmNsb25lKCksIG5ldyBTcGVlZCgwLCAtNCkpXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgUGxheWVyU3RhdGUgZnJvbSAnLi9QbGF5ZXJTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJlZm9yZVBsYXlpbmdTdGF0ZSBleHRlbmRzIFBsYXllclN0YXRlIHtcbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcihnYW1lT2JqZWN0LCBoZWFsdGgpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1wbGF5aW5nJztcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7fVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge31cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge31cbiAgcHVibGljIGF0dGFjaygpIHt9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBQbGF5ZXJTdGF0ZSBmcm9tICcuL1BsYXllclN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWluZ1N0YXRlIGV4dGVuZHMgUGxheWVyU3RhdGUge1xuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZyc7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge1xuICAgIHN1cGVyLnByb2Nlc3NNb3ZlbWVudCgpO1xuICB9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7XG4gICAgc3VwZXIuYWRkVG9OZXh0UmVuZGVyKCk7XG4gIH1cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge1xuICAgIHN1cGVyLnJlZ2lzdGVyRGFtYWdlKCk7XG4gIH1cbiAgcHVibGljIGF0dGFjaygpIHtcbiAgICBzdXBlci5hdHRhY2soKTtcbiAgfVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgUGxheWVyU3RhdGUgZnJvbSAnLi9QbGF5ZXJTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXlpbmdBZnRlckRhbWFnZVN0YXRlIGV4dGVuZHMgUGxheWVyU3RhdGUge1xuICBwcml2YXRlIHN0YXRpYyBNQVhfRlJBTUVTX0JFRk9SRV9UT0dHTEVfSVNfSU5WSVNJQkxFX1BMQVlFUiA9IDU7XG4gIHByaXZhdGUgZnJhbWVzQ291bnQ6IG51bWJlcjtcbiAgcHJpdmF0ZSBpc0ludmlzaWJsZVBsYXllcjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZy1hZnRlci1kYW1hZ2UnO1xuICAgIHRoaXMuZnJhbWVzQ291bnQgPSAwO1xuICAgIHRoaXMuaXNJbnZpc2libGVQbGF5ZXIgPSB0cnVlO1xuICB9XG5cbiAgcHVibGljIHByb2Nlc3NNb3ZlbWVudCgpIHtcbiAgICBzdXBlci5wcm9jZXNzTW92ZW1lbnQoKTtcbiAgfVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge1xuICAgIGlmICghdGhpcy5pc0ludmlzaWJsZVBsYXllcikge1xuICAgICAgc3VwZXIuYWRkVG9OZXh0UmVuZGVyKCk7XG4gICAgfVxuXG4gICAgdGhpcy5mcmFtZXNDb3VudCsrO1xuXG4gICAgaWYgKFxuICAgICAgdGhpcy5mcmFtZXNDb3VudCA+PVxuICAgICAgUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUuTUFYX0ZSQU1FU19CRUZPUkVfVE9HR0xFX0lTX0lOVklTSUJMRV9QTEFZRVJcbiAgICApIHtcbiAgICAgIHRoaXMuaXNJbnZpc2libGVQbGF5ZXIgPSAhdGhpcy5pc0ludmlzaWJsZVBsYXllcjtcbiAgICAgIHRoaXMuZnJhbWVzQ291bnQgPSAwO1xuICAgIH1cbiAgfVxuICBwdWJsaWMgcmVnaXN0ZXJEYW1hZ2UoKSB7fVxuICBwdWJsaWMgYXR0YWNrKCkge31cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcblxuaW1wb3J0IFBsYXllclN0YXRlIGZyb20gJy4vUGxheWVyU3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCZWZvcmVEZWFkU3RhdGUgZXh0ZW5kcyBQbGF5ZXJTdGF0ZSB7XG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QsIGhlYWx0aDogbnVtYmVyKSB7XG4gICAgc3VwZXIoZ2FtZU9iamVjdCwgaGVhbHRoKTtcbiAgICB0aGlzLnN0YXRlTmFtZSA9ICdiZWZvcmUtZGVhZCc7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge31cbiAgcHVibGljIGFkZFRvTmV4dFJlbmRlcigpIHt9XG4gIHB1YmxpYyByZWdpc3RlckRhbWFnZSgpIHt9XG4gIHB1YmxpYyBhdHRhY2soKSB7fVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgUGxheWVyU3RhdGUgZnJvbSAnLi9QbGF5ZXJTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlYWRTdGF0ZSBleHRlbmRzIFBsYXllclN0YXRlIHtcbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcihnYW1lT2JqZWN0LCBoZWFsdGgpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2RlYWQnO1xuICB9XG5cbiAgcHVibGljIHByb2Nlc3NNb3ZlbWVudCgpIHt9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7fVxuICBwdWJsaWMgcmVnaXN0ZXJEYW1hZ2UoKSB7fVxuICBwdWJsaWMgYXR0YWNrKCkge31cbn1cbiIsImltcG9ydCB7IFBMQVlFUl9BRlRFUl9EQU1BR0VfRFVSQVRJT04sIFBMQVlFUl9NQVhfSEVBTFRIIH0gZnJvbSAnfi9jb25zdHMnO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgeyBQbGF5ZXJTdGF0ZU5hbWUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCAqIGFzIEhlbHBlciBmcm9tICcuL2hlbHBlcic7XG5pbXBvcnQgUGxheWVyU3RhdGUgZnJvbSAnLi9QbGF5ZXJTdGF0ZSc7XG5pbXBvcnQgQmVmb3JlUGxheWluZ1N0YXRlIGZyb20gJy4vQmVmb3JlUGxheWluZ1N0YXRlJztcbmltcG9ydCBQbGF5aW5nU3RhdGUgZnJvbSAnLi9QbGF5aW5nU3RhdGUnO1xuaW1wb3J0IFBsYXlpbmdBZnRlckRhbWFnZVN0YXRlIGZyb20gJy4vUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUnO1xuaW1wb3J0IEJlZm9yZURlYWRTdGF0ZSBmcm9tICcuL0JlZm9yZURlYWRTdGF0ZSc7XG5pbXBvcnQgRGVhZFN0YXRlIGZyb20gJy4vRGVhZFN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFBsYXllcjtcbiAgcHJpdmF0ZSB0aW1lcjogTm9kZUpTLlRpbWVvdXQ7XG4gIHByaXZhdGUgc3RhdGU6IFBsYXllclN0YXRlO1xuICBwcml2YXRlIGdhbWVPYmplY3Q6IEdhbWVPYmplY3Q7XG4gIHByaXZhdGUgc3RhdGVOYW1lQmVmb3JlOiBQbGF5ZXJTdGF0ZU5hbWU7XG4gIHByaXZhdGUgaW5uZXJIZWFsdGg6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIVBsYXllci5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSAnYmVmb3JlLXBsYXlpbmcnO1xuICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAnYmVmb3JlLXBsYXlpbmcnO1xuICAgICAgUGxheWVyLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gUGxheWVyLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGluaXQoKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgIHRoaXMudGltZXIgPSBudWxsO1xuICAgIHRoaXMuaW5uZXJIZWFsdGggPSBQTEFZRVJfTUFYX0hFQUxUSDtcbiAgICB0aGlzLmdhbWVPYmplY3QgPSBIZWxwZXIuY3JlYXRlSW5pdGlhbEdhbWVPYmplY3QoKTtcbiAgICB0aGlzLnN0YXRlTmFtZSA9ICdwbGF5aW5nJztcbiAgfVxuICBwdWJsaWMgZG9GcmFtZUJlaGF2aW9yKCkge1xuICAgIHRoaXMuc3RhdGUucHJvY2Vzc01vdmVtZW50KCk7XG4gICAgdGhpcy5zdGF0ZS5hZGRUb05leHRSZW5kZXIoKTtcbiAgICB0aGlzLnN0YXRlLnJlZ2lzdGVyRGFtYWdlKCk7XG4gICAgdGhpcy5zdGF0ZS5hdHRhY2soKTtcbiAgICB0aGlzLmFwcGx5TmV3SGVhbHRoKCk7XG4gICAgdGhpcy5hcHBseU5ld1N0YXRlKCk7XG4gIH1cblxuICBwcml2YXRlIGFwcGx5TmV3U3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGVOYW1lICE9PSB0aGlzLnN0YXRlTmFtZUJlZm9yZSkge1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcbiAgICAgIHRoaXMuc3RhdGVOYW1lID0gdGhpcy5zdGF0ZS5zdGF0ZU5hbWU7XG4gICAgfVxuICB9XG4gIHByaXZhdGUgYXBwbHlOZXdIZWFsdGgoKSB7XG4gICAgdGhpcy5pbm5lckhlYWx0aCA9IHRoaXMuc3RhdGUuaGVhbHRoO1xuICB9XG5cbiAgZ2V0IGhlYWx0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lckhlYWx0aDtcbiAgfVxuICBwcml2YXRlIGdldCBzdGF0ZU5hbWUoKTogUGxheWVyU3RhdGVOYW1lIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5zdGF0ZU5hbWUgPz8gJ2JlZm9yZS1wbGF5aW5nJztcbiAgfVxuICBwcml2YXRlIHNldCBzdGF0ZU5hbWUobmV3U3RhdGU6IFBsYXllclN0YXRlTmFtZSkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcblxuICAgIHN3aXRjaCAobmV3U3RhdGUpIHtcbiAgICAgIGNhc2UgJ2JlZm9yZS1wbGF5aW5nJzoge1xuICAgICAgICB0aGlzLnN0YXRlID0gbmV3IEJlZm9yZVBsYXlpbmdTdGF0ZSh0aGlzLmdhbWVPYmplY3QsIHRoaXMuaW5uZXJIZWFsdGgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ3BsYXlpbmcnOiB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgUGxheWluZ1N0YXRlKHRoaXMuZ2FtZU9iamVjdCwgdGhpcy5pbm5lckhlYWx0aCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAncGxheWluZy1hZnRlci1kYW1hZ2UnOiB7XG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLnN0YXRlTmFtZSA9ICdwbGF5aW5nJztcbiAgICAgICAgfSwgUExBWUVSX0FGVEVSX0RBTUFHRV9EVVJBVElPTik7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBQbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZSh0aGlzLmdhbWVPYmplY3QsIHRoaXMuaW5uZXJIZWFsdGgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2JlZm9yZS1kZWFkJzoge1xuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAnZGVhZCc7XG4gICAgICAgIH0sIDApO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgQmVmb3JlRGVhZFN0YXRlKHRoaXMuZ2FtZU9iamVjdCwgdGhpcy5pbm5lckhlYWx0aCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnZGVhZCc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBEZWFkU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgeyBFTkVNWV9BVFRBQ0tfREVMQVksIEVORU1ZX1JFQ0VJVklOR19EQU1BR0UgfSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5pbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IEJ1bGxldHNDb2xsaWRlciBmcm9tICd+L2NvbGxpZGVycy9CdWxsZXRzQ29sbGlkZXInO1xuaW1wb3J0IEJ1bGxldHNTdG9yZSBmcm9tICd+L3N0b3Jlcy9CdWxsZXRzU3RvcmUnO1xuXG5pbXBvcnQgKiBhcyBIZWxwZXIgZnJvbSAnLi9oZWxwZXInO1xuaW1wb3J0IHsgRW5lbXlTdGF0ZU5hbWUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgRW5lbXlTdGF0ZSB7XG4gIHByb3RlY3RlZCBnYW1lT2JqZWN0OiBHYW1lT2JqZWN0O1xuICBwcm90ZWN0ZWQgdmlydHVhbERPTTogVmlydHVhbERPTTtcbiAgcHJvdGVjdGVkIGJ1bGxldHNDb2xsaWRlcjogQnVsbGV0c0NvbGxpZGVyO1xuICBwcm90ZWN0ZWQgYnVsbGV0c1N0b3JlOiBCdWxsZXRzU3RvcmU7XG4gIHByb3RlY3RlZCBsYXN0QXR0YWNrVGltZTogbnVtYmVyO1xuXG4gIHB1YmxpYyBoZWFsdGg6IG51bWJlcjtcbiAgcHVibGljIHN0YXRlTmFtZTogRW5lbXlTdGF0ZU5hbWU7XG5cbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICB0aGlzLmdhbWVPYmplY3QgPSBnYW1lT2JqZWN0O1xuICAgIHRoaXMudmlydHVhbERPTSA9IG5ldyBWaXJ0dWFsRE9NKCk7XG4gICAgdGhpcy5idWxsZXRzQ29sbGlkZXIgPSBuZXcgQnVsbGV0c0NvbGxpZGVyKHRoaXMuZ2FtZU9iamVjdCwgJ3BsYXllcicpO1xuICAgIHRoaXMuYnVsbGV0c1N0b3JlID0gbmV3IEJ1bGxldHNTdG9yZSgpO1xuICAgIHRoaXMubGFzdEF0dGFja1RpbWUgPSBEYXRlLm5vdygpIC0gRU5FTVlfQVRUQUNLX0RFTEFZO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1wbGF5aW5nJztcbiAgICB0aGlzLmhlYWx0aCA9IGhlYWx0aDtcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7XG4gICAgdGhpcy5nYW1lT2JqZWN0LnNwZWVkID0gSGVscGVyLmdldFNwZWVkKHRoaXMuZ2FtZU9iamVjdCk7XG4gICAgdGhpcy5nYW1lT2JqZWN0Lm1vdmUoKTtcbiAgfVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMuZ2FtZU9iamVjdCk7XG4gIH1cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge1xuICAgIHRoaXMuYnVsbGV0c0NvbGxpZGVyLnRyeVRvQ29sbGlkZSgoKSA9PiB7XG4gICAgICB0aGlzLmhlYWx0aCAtPSBFTkVNWV9SRUNFSVZJTkdfREFNQUdFO1xuXG4gICAgICBpZiAodGhpcy5oZWFsdGgpIHtcbiAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZy1hZnRlci1kYW1hZ2UnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdGF0ZU5hbWUgPSAnYmVmb3JlLWRlYWQnO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHB1YmxpYyBhdHRhY2soKSB7XG4gICAgY29uc3QgY3VycmVudFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IHJlYWR5VG9BdHRhY2sgPVxuICAgICAgY3VycmVudFRpbWUgPiB0aGlzLmxhc3RBdHRhY2tUaW1lICsgRU5FTVlfQVRUQUNLX0RFTEFZO1xuXG4gICAgaWYgKHJlYWR5VG9BdHRhY2spIHtcbiAgICAgIHRoaXMubGFzdEF0dGFja1RpbWUgPSBjdXJyZW50VGltZTtcbiAgICAgIHRoaXMuYnVsbGV0c1N0b3JlLmFkZEVsZW1lbnQoXG4gICAgICAgIEhlbHBlci5jcmVhdGVCdWxsZXQodGhpcy5nYW1lT2JqZWN0LnBvaW50LCB0aGlzLmdhbWVPYmplY3Quc2l6ZSlcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgQnVsbGV0IGZyb20gJ34vY29tcG9uZW50cy9CdWxsZXQnO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IFNwZWVkIGZyb20gJ34vc3RydWN0cy9TcGVlZCc7XG5pbXBvcnQgUG9pbnQgZnJvbSAnfi9zdHJ1Y3RzL1BvaW50JztcbmltcG9ydCBTaXplIGZyb20gJ34vc3RydWN0cy9TaXplJztcbmltcG9ydCBlbmVteVBuZyBmcm9tICd+L2Fzc2V0cy9pbWcvc3BpZGVyLnBuZyc7XG5pbXBvcnQge1xuICBFTkVNWV9JTklUSUFMX1BPSU5ULFxuICBFTkVNWV9JTklUSUFMX1NJWkUsXG4gIEVORU1ZX0lOSVRJQUxfU1BFRUQsXG4gIEVORU1ZX0xFRlRfQk9SREVSLFxuICBFTkVNWV9SSUdIVF9CT1JERVIsXG4gIEdBTUVfV0lORE9XX1dJRFRILFxufSBmcm9tICd+L2NvbnN0cyc7XG5pbXBvcnQgekluZGV4IGZyb20gJ34vekluZGV4JztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUJ1bGxldCA9IChlbmVteVBvaW50OiBQb2ludCwgZW5lbXlTaXplOiBTaXplKSA9PiB7XG4gIGNvbnN0IHBvaW50ID0gbmV3IFBvaW50KGVuZW15UG9pbnQueCArIGVuZW15U2l6ZS53aWR0aCAvIDIsIGVuZW15UG9pbnQueSArIGVuZW15U2l6ZS5oZWlnaHQpO1xuXG4gIGNvbnN0IHNwZWVkID0gbmV3IFNwZWVkKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSAtIDUsIDMpO1xuXG4gIHJldHVybiBuZXcgQnVsbGV0KCdlbmVteScsIHBvaW50LCBzcGVlZCk7XG59O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlSW5pdGlhbEdhbWVPYmplY3QgPSAoKSA9PiB7XG4gIHJldHVybiBuZXcgR2FtZU9iamVjdCh7XG4gICAgcG9pbnQ6IEVORU1ZX0lOSVRJQUxfUE9JTlQuY2xvbmUoKSxcbiAgICBzaXplOiBFTkVNWV9JTklUSUFMX1NJWkUuY2xvbmUoKSxcbiAgICBzcGVlZDogRU5FTVlfSU5JVElBTF9TUEVFRC5jbG9uZSgpLFxuICAgIHpJbmRleDogekluZGV4LmVuZW15U3RhdGUsXG4gICAgYmFja2dyb3VuZDogYHVybCgke2VuZW15UG5nfSlgLFxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRTcGVlZCA9IChnYW1lT2JqZWN0OiBHYW1lT2JqZWN0KSA9PiB7XG4gIGNvbnN0IG5lZWRQcmV2ZW50TGVmdCA9IGdhbWVPYmplY3QucG9pbnQueCA8PSBFTkVNWV9MRUZUX0JPUkRFUjtcblxuICBsZXQgc3BlZWRYID0gZ2FtZU9iamVjdC5zcGVlZC54O1xuXG4gIGlmIChuZWVkUHJldmVudExlZnQpIHtcbiAgICBzcGVlZFggPSBNYXRoLmFicyhzcGVlZFgpO1xuICAgIHJldHVybiBuZXcgU3BlZWQoc3BlZWRYLCBnYW1lT2JqZWN0LnNwZWVkLnkpO1xuICB9XG5cbiAgY29uc3QgbmVlZFByZXZlbnRSaWdodCA9IGdhbWVPYmplY3QucG9pbnQueCA+PSBHQU1FX1dJTkRPV19XSURUSCAtIEVORU1ZX1JJR0hUX0JPUkRFUiAtIGdhbWVPYmplY3Quc2l6ZS53aWR0aDtcblxuICBpZiAobmVlZFByZXZlbnRSaWdodCkge1xuICAgIHNwZWVkWCA9IC1NYXRoLmFicyhzcGVlZFgpO1xuICAgIHJldHVybiBuZXcgU3BlZWQoc3BlZWRYLCBnYW1lT2JqZWN0LnNwZWVkLnkpO1xuICB9XG5cbiAgcmV0dXJuIGdhbWVPYmplY3Quc3BlZWQ7XG59O1xuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgRW5lbXlTdGF0ZSBmcm9tICcuL0VuZW15U3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCZWZvcmVQbGF5aW5nU3RhdGUgZXh0ZW5kcyBFbmVteVN0YXRlIHtcbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcihnYW1lT2JqZWN0LCBoZWFsdGgpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2JlZm9yZS1wbGF5aW5nJztcbiAgfVxuXG4gIHB1YmxpYyBwcm9jZXNzTW92ZW1lbnQoKSB7fVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge31cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge31cbiAgcHVibGljIGF0dGFjaygpIHt9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCBFbmVteVN0YXRlIGZyb20gJy4vRW5lbXlTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXlpbmdTdGF0ZSBleHRlbmRzIEVuZW15U3RhdGUge1xuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZyc7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge1xuICAgIHN1cGVyLnByb2Nlc3NNb3ZlbWVudCgpO1xuICB9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7XG4gICAgc3VwZXIuYWRkVG9OZXh0UmVuZGVyKCk7XG4gIH1cbiAgcHVibGljIHJlZ2lzdGVyRGFtYWdlKCkge1xuICAgIHN1cGVyLnJlZ2lzdGVyRGFtYWdlKCk7XG4gIH1cbiAgcHVibGljIGF0dGFjaygpIHtcbiAgICBzdXBlci5hdHRhY2soKTtcbiAgfVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgRW5lbXlTdGF0ZSBmcm9tICcuL0VuZW15U3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZSBleHRlbmRzIEVuZW15U3RhdGUge1xuICBjb25zdHJ1Y3RvcihnYW1lT2JqZWN0OiBHYW1lT2JqZWN0LCBoZWFsdGg6IG51bWJlcikge1xuICAgIHN1cGVyKGdhbWVPYmplY3QsIGhlYWx0aCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZy1hZnRlci1kYW1hZ2UnO1xuICB9XG5cbiAgcHVibGljIHByb2Nlc3NNb3ZlbWVudCgpIHtcbiAgICBzdXBlci5wcm9jZXNzTW92ZW1lbnQoKTtcbiAgfVxuICBwdWJsaWMgYWRkVG9OZXh0UmVuZGVyKCkge1xuICAgIHN1cGVyLmFkZFRvTmV4dFJlbmRlcigpO1xuICB9XG4gIHB1YmxpYyByZWdpc3RlckRhbWFnZSgpIHtcbiAgICBzdXBlci5yZWdpc3RlckRhbWFnZSgpO1xuICB9XG4gIHB1YmxpYyBhdHRhY2soKSB7XG4gICAgc3VwZXIuYXR0YWNrKCk7XG4gIH1cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcblxuaW1wb3J0IEVuZW15U3RhdGUgZnJvbSAnLi9FbmVteVN0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmVmb3JlRGVhZFN0YXRlIGV4dGVuZHMgRW5lbXlTdGF0ZSB7XG4gIGNvbnN0cnVjdG9yKGdhbWVPYmplY3Q6IEdhbWVPYmplY3QsIGhlYWx0aDogbnVtYmVyKSB7XG4gICAgc3VwZXIoZ2FtZU9iamVjdCwgaGVhbHRoKTtcbiAgICB0aGlzLnN0YXRlTmFtZSA9ICdiZWZvcmUtZGVhZCc7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc01vdmVtZW50KCkge31cbiAgcHVibGljIGFkZFRvTmV4dFJlbmRlcigpIHt9XG4gIHB1YmxpYyByZWdpc3RlckRhbWFnZSgpIHt9XG4gIHB1YmxpYyBhdHRhY2soKSB7fVxufVxuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuXG5pbXBvcnQgRW5lbXlTdGF0ZSBmcm9tICcuL0VuZW15U3RhdGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZWFkU3RhdGUgZXh0ZW5kcyBFbmVteVN0YXRlIHtcbiAgY29uc3RydWN0b3IoZ2FtZU9iamVjdDogR2FtZU9iamVjdCwgaGVhbHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcihnYW1lT2JqZWN0LCBoZWFsdGgpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ2RlYWQnO1xuICB9XG5cbiAgcHVibGljIHByb2Nlc3NNb3ZlbWVudCgpIHt9XG4gIHB1YmxpYyBhZGRUb05leHRSZW5kZXIoKSB7fVxuICBwdWJsaWMgcmVnaXN0ZXJEYW1hZ2UoKSB7fVxuICBwdWJsaWMgYXR0YWNrKCkge31cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcbmltcG9ydCB7IEVORU1ZX0FGVEVSX0RBTUFHRV9EVVJBVElPTiwgRU5FTVlfTUFYX0hFQUxUSCB9IGZyb20gJ34vY29uc3RzJztcblxuaW1wb3J0ICogYXMgSGVscGVyIGZyb20gJy4vaGVscGVyJztcbmltcG9ydCB7IEVuZW15U3RhdGVOYW1lIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgRW5lbXlTdGF0ZSBmcm9tICcuL0VuZW15U3RhdGUnO1xuaW1wb3J0IEJlZm9yZVBsYXlpbmdTdGF0ZSBmcm9tICcuL0JlZm9yZVBsYXlpbmdTdGF0ZSc7XG5pbXBvcnQgUGxheWluZ1N0YXRlIGZyb20gJy4vUGxheWluZ1N0YXRlJztcbmltcG9ydCBQbGF5aW5nQWZ0ZXJEYW1hZ2VTdGF0ZSBmcm9tICcuL1BsYXlpbmdBZnRlckRhbWFnZVN0YXRlJztcbmltcG9ydCBCZWZvcmVEZWFkU3RhdGUgZnJvbSAnLi9CZWZvcmVEZWFkU3RhdGUnO1xuaW1wb3J0IERlYWRTdGF0ZSBmcm9tICcuL0RlYWRTdGF0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZW15IHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEVuZW15O1xuICBwcml2YXRlIGdhbWVPYmplY3Q6IEdhbWVPYmplY3Q7XG4gIHByaXZhdGUgdGltZXI6IE5vZGVKUy5UaW1lb3V0O1xuICBwcml2YXRlIHN0YXRlOiBFbmVteVN0YXRlO1xuICBwcml2YXRlIHN0YXRlTmFtZUJlZm9yZTogRW5lbXlTdGF0ZU5hbWU7XG4gIHByaXZhdGUgaW5uZXJIZWFsdGg6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIUVuZW15Lmluc3RhbmNlKSB7XG4gICAgICB0aGlzLnN0YXRlTmFtZUJlZm9yZSA9ICdiZWZvcmUtcGxheWluZyc7XG4gICAgICB0aGlzLnN0YXRlTmFtZSA9ICdiZWZvcmUtcGxheWluZyc7XG5cbiAgICAgIEVuZW15Lmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gRW5lbXkuaW5zdGFuY2U7XG4gIH1cblxuICBwdWJsaWMgaW5pdCgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgdGhpcy50aW1lciA9IG51bGw7XG4gICAgdGhpcy5pbm5lckhlYWx0aCA9IEVORU1ZX01BWF9IRUFMVEg7XG4gICAgdGhpcy5nYW1lT2JqZWN0ID0gSGVscGVyLmNyZWF0ZUluaXRpYWxHYW1lT2JqZWN0KCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAncGxheWluZyc7XG4gIH1cbiAgcHVibGljIGRvRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLnN0YXRlLnByb2Nlc3NNb3ZlbWVudCgpO1xuICAgIHRoaXMuc3RhdGUuYWRkVG9OZXh0UmVuZGVyKCk7XG4gICAgdGhpcy5zdGF0ZS5yZWdpc3RlckRhbWFnZSgpO1xuICAgIHRoaXMuc3RhdGUuYXR0YWNrKCk7XG4gICAgdGhpcy5hcHBseU5ld0hlYWx0aCgpO1xuICAgIHRoaXMuYXBwbHlOZXdTdGF0ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhcHBseU5ld1N0YXRlKCkge1xuICAgIGlmICh0aGlzLnN0YXRlTmFtZSAhPT0gdGhpcy5zdGF0ZU5hbWVCZWZvcmUpIHtcbiAgICAgIHRoaXMuc3RhdGVOYW1lQmVmb3JlID0gdGhpcy5zdGF0ZS5zdGF0ZU5hbWU7XG4gICAgICB0aGlzLnN0YXRlTmFtZSA9IHRoaXMuc3RhdGUuc3RhdGVOYW1lO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYXBwbHlOZXdIZWFsdGgoKSB7XG4gICAgdGhpcy5pbm5lckhlYWx0aCA9IHRoaXMuc3RhdGUuaGVhbHRoO1xuICB9XG5cbiAgZ2V0IGhlYWx0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lckhlYWx0aDtcbiAgfVxuICBwcml2YXRlIGdldCBzdGF0ZU5hbWUoKTogRW5lbXlTdGF0ZU5hbWUge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcbiAgfVxuICBwcml2YXRlIHNldCBzdGF0ZU5hbWUobmV3U3RhdGU6IEVuZW15U3RhdGVOYW1lKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuXG4gICAgc3dpdGNoIChuZXdTdGF0ZSkge1xuICAgICAgY2FzZSAnYmVmb3JlLXBsYXlpbmcnOiB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgQmVmb3JlUGxheWluZ1N0YXRlKHRoaXMuZ2FtZU9iamVjdCwgdGhpcy5pbm5lckhlYWx0aCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAncGxheWluZyc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBQbGF5aW5nU3RhdGUodGhpcy5nYW1lT2JqZWN0LCB0aGlzLmlubmVySGVhbHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdwbGF5aW5nLWFmdGVyLWRhbWFnZSc6IHtcbiAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdzb21lIGFjdGlvbiBhZnRlciBkYW1hZ2UnKTtcbiAgICAgICAgICB0aGlzLnN0YXRlTmFtZSA9ICdwbGF5aW5nJztcbiAgICAgICAgfSwgRU5FTVlfQUZURVJfREFNQUdFX0RVUkFUSU9OKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0gbmV3IFBsYXlpbmdBZnRlckRhbWFnZVN0YXRlKHRoaXMuZ2FtZU9iamVjdCwgdGhpcy5pbm5lckhlYWx0aCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnYmVmb3JlLWRlYWQnOiB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgQmVmb3JlRGVhZFN0YXRlKHRoaXMuZ2FtZU9iamVjdCwgdGhpcy5pbm5lckhlYWx0aCk7XG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLnN0YXRlTmFtZSA9ICdkZWFkJztcbiAgICAgICAgfSwgRU5FTVlfQUZURVJfREFNQUdFX0RVUkFUSU9OKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdkZWFkJzoge1xuICAgICAgICB0aGlzLnN0YXRlID0gbmV3IERlYWRTdGF0ZSh0aGlzLmdhbWVPYmplY3QsIHRoaXMuaW5uZXJIZWFsdGgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ34vc3RydWN0cy9HYW1lT2JqZWN0JztcbmltcG9ydCBFbmVteSBmcm9tICd+L2NvbXBvbmVudHMvRW5lbXknO1xuaW1wb3J0IFBsYXllciBmcm9tICd+L2NvbXBvbmVudHMvUGxheWVyJztcbmltcG9ydCBQb2ludCBmcm9tICd+L3N0cnVjdHMvUG9pbnQnO1xuaW1wb3J0IFNpemUgZnJvbSAnfi9zdHJ1Y3RzL1NpemUnO1xuaW1wb3J0IFZpcnR1YWxET00gZnJvbSAnfi9WaXJ0dWFsRE9NJztcbmltcG9ydCB7XG4gIEdBTUVfV0lORE9XX1dJRFRILFxuICBQTEFZRVJfTUFYX0hFQUxUSCxcbiAgRU5FTVlfTUFYX0hFQUxUSCxcbiAgUExBWUVSX0hFQUxUSF9JQ09OX1NJWkUsXG4gIExJRkVCQVJfSEVJR0hULFxuICBMSUZFQkFSX0NPTE9SLFxuICBMSUZFQkFSX0VORU1ZX0VNUFRZX0hFQUxUSF9DT0xPUixcbiAgTElGRUJBUl9FTkVNWV9GVUxMX0hFQUxUSF9DT0xPUixcbn0gZnJvbSAnfi9jb25zdHMnO1xuaW1wb3J0IHpJbmRleCBmcm9tICd+L3pJbmRleCc7XG5pbXBvcnQgbGlmZUljb24gZnJvbSAnfi9hc3NldHMvaW1nL2xpZmUucG5nJztcbmltcG9ydCBub0xpZmVJY29uIGZyb20gJ34vYXNzZXRzL2ltZy9ub2xpZmUucG5nJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlmZWJhciB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBMaWZlYmFyO1xuICBwcml2YXRlIHJlYWRvbmx5IGVtcHR5QmFyOiBHYW1lT2JqZWN0O1xuICBwcml2YXRlIHJlYWRvbmx5IGVuZW15RW1wdHlIZWFsdGg6IEdhbWVPYmplY3Q7XG4gIHByaXZhdGUgcmVhZG9ubHkgZW5lbXlIZWFsdGg6IEdhbWVPYmplY3Q7XG4gIHByaXZhdGUgaGVhbHRoczogR2FtZU9iamVjdFtdO1xuICBwcml2YXRlIGVuZW15OiBFbmVteTtcbiAgcHJpdmF0ZSBwbGF5ZXI6IFBsYXllcjtcbiAgcHJpdmF0ZSB2aXJ0dWFsRE9NOiBWaXJ0dWFsRE9NO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghTGlmZWJhci5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5lbmVteSA9IG5ldyBFbmVteSgpO1xuICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKCk7XG4gICAgICB0aGlzLnZpcnR1YWxET00gPSBuZXcgVmlydHVhbERPTSgpO1xuICAgICAgdGhpcy5lbXB0eUJhciA9IG5ldyBHYW1lT2JqZWN0KHtcbiAgICAgICAgcG9pbnQ6IG5ldyBQb2ludCgwLCAwKSxcbiAgICAgICAgc2l6ZTogbmV3IFNpemUoR0FNRV9XSU5ET1dfV0lEVEgsIExJRkVCQVJfSEVJR0hUKSxcbiAgICAgICAgYmFja2dyb3VuZDogTElGRUJBUl9DT0xPUixcbiAgICAgICAgekluZGV4OiB6SW5kZXgubGlmZWJhci5lbXB0eUxpZmViYXIsXG4gICAgICB9KTtcbiAgICAgIHRoaXMuZW5lbXlFbXB0eUhlYWx0aCA9IG5ldyBHYW1lT2JqZWN0KHtcbiAgICAgICAgcG9pbnQ6IG5ldyBQb2ludCgwLCAwKSxcbiAgICAgICAgc2l6ZTogbmV3IFNpemUoRU5FTVlfTUFYX0hFQUxUSCwgTElGRUJBUl9IRUlHSFQpLFxuICAgICAgICBiYWNrZ3JvdW5kOiBMSUZFQkFSX0VORU1ZX0VNUFRZX0hFQUxUSF9DT0xPUixcbiAgICAgICAgekluZGV4OiB6SW5kZXgubGlmZWJhci5lbmVteUVtcHR5SGVhbHRoLFxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuZW5lbXlIZWFsdGggPSBuZXcgR2FtZU9iamVjdCh7XG4gICAgICAgIHBvaW50OiBuZXcgUG9pbnQoMCwgMCksXG4gICAgICAgIHNpemU6IG5ldyBTaXplKHRoaXMuZW5lbXkuaGVhbHRoLCBMSUZFQkFSX0hFSUdIVCksXG4gICAgICAgIGJhY2tncm91bmQ6IExJRkVCQVJfRU5FTVlfRlVMTF9IRUFMVEhfQ09MT1IsXG4gICAgICAgIHpJbmRleDogekluZGV4LmxpZmViYXIuZW5lbXlIZWFsdGgsXG4gICAgICB9KTtcblxuICAgICAgY29uc3QgT0ZGU0VUID0geyB4OiAxLCB5OiAxIH07XG4gICAgICB0aGlzLmhlYWx0aHMgPSBbXTtcblxuICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gUExBWUVSX01BWF9IRUFMVEg7IGkrKykge1xuICAgICAgICBjb25zdCBpc0xpZmUgPSB0aGlzLnBsYXllci5oZWFsdGggPj0gaTtcbiAgICAgICAgY29uc3QgcG9pbnQgPSBuZXcgUG9pbnQoR0FNRV9XSU5ET1dfV0lEVEggLSAoT0ZGU0VULnggKyBQTEFZRVJfSEVBTFRIX0lDT05fU0laRS53aWR0aCkgKiBpLCBPRkZTRVQueSk7XG5cbiAgICAgICAgdGhpcy5oZWFsdGhzLnB1c2goXG4gICAgICAgICAgbmV3IEdhbWVPYmplY3Qoe1xuICAgICAgICAgICAgcG9pbnQsXG4gICAgICAgICAgICBzaXplOiBQTEFZRVJfSEVBTFRIX0lDT05fU0laRS5jbG9uZSgpLFxuICAgICAgICAgICAgYmFja2dyb3VuZDogYHVybCgke2lzTGlmZSA/IGxpZmVJY29uIDogbm9MaWZlSWNvbn0pYCxcbiAgICAgICAgICAgIHpJbmRleDogekluZGV4LmxpZmViYXIucGxheWVySGVhbHRoLFxuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIExpZmViYXIuaW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBMaWZlYmFyLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGRvRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLmFkZFRvUmVuZGVyRW1wdHlCYXIoKTtcbiAgICB0aGlzLmFkZFRvUmVuZGVyRW5lbXlFbXB0eUhlYWx0aCgpO1xuICAgIHRoaXMuYWRkVG9SZW5kZXJFbmVteUhlYWx0aCgpO1xuICAgIHRoaXMuYWRkVG9SZW5kZXJQbGF5ZXJIZWFsdGgoKTtcbiAgfVxuXG4gIHByaXZhdGUgYWRkVG9SZW5kZXJFbXB0eUJhcigpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudCh0aGlzLmVtcHR5QmFyKTtcbiAgfVxuXG4gIHByaXZhdGUgYWRkVG9SZW5kZXJFbmVteUVtcHR5SGVhbHRoKCkge1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMuZW5lbXlFbXB0eUhlYWx0aCk7XG4gIH1cblxuICBwcml2YXRlIGFkZFRvUmVuZGVyRW5lbXlIZWFsdGgoKSB7XG4gICAgdGhpcy5lbmVteUhlYWx0aC5zaXplID0gbmV3IFNpemUodGhpcy5lbmVteS5oZWFsdGgsIExJRkVCQVJfSEVJR0hUKTtcblxuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMuZW5lbXlIZWFsdGgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhZGRUb1JlbmRlclBsYXllckhlYWx0aCgpIHtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBQTEFZRVJfTUFYX0hFQUxUSDsgaSsrKSB7XG4gICAgICBjb25zdCBpc0xpZmUgPSB0aGlzLnBsYXllci5oZWFsdGggPj0gaTtcblxuICAgICAgdGhpcy5oZWFsdGhzW2kgLSAxXS5iYWNrZ3JvdW5kID0gYHVybCgke2lzTGlmZSA/IGxpZmVJY29uIDogbm9MaWZlSWNvbn0pYDtcbiAgICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMuaGVhbHRoc1tpIC0gMV0pO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSSc7XG5pbXBvcnQgZ2V0UmVuZGVyQVBJIGZyb20gJ34vUmVuZGVyQVBJL2dldFJlbmRlckFQSSc7XG5pbXBvcnQgVmlydHVhbERPTSBmcm9tICd+L1ZpcnR1YWxET00nO1xuaW1wb3J0IEtleWJvYXJkIGZyb20gJ34vY29udHJvbGxlcnMvS2V5Ym9hcmQnO1xuXG5pbXBvcnQgeyBBcHBTdGF0ZU5hbWUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgQXBwU3RhdGUge1xuICBwcml2YXRlIHJlbmRlckFQSTogUmVuZGVyQVBJO1xuICBwcm90ZWN0ZWQgdmlydHVhbERPTTogVmlydHVhbERPTTtcbiAgcHJvdGVjdGVkIGtleWJvYXJkOiBLZXlib2FyZDtcblxuICBwdWJsaWMgc3RhdGVOYW1lOiBBcHBTdGF0ZU5hbWU7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5yZW5kZXJBUEkgPSBnZXRSZW5kZXJBUEkoKTtcbiAgICB0aGlzLnZpcnR1YWxET00gPSBuZXcgVmlydHVhbERPTSgpO1xuICAgIHRoaXMua2V5Ym9hcmQgPSBuZXcgS2V5Ym9hcmQoKTtcbiAgfVxuXG4gIHB1YmxpYyBhYnN0cmFjdCBkb0ZyYW1lQmVoYXZpb3IoKTogdm9pZDtcblxuICBwcm90ZWN0ZWQgcmVuZGVyKCkge1xuICAgIHRoaXMucmVuZGVyQVBJLnJlbmRlcih0aGlzLnZpcnR1YWxET00uZ2V0Q2hhbmdlcygpKTtcbiAgICB0aGlzLnZpcnR1YWxET00ucHJlcGFyZUZvck5ld0ZyYW1lKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQbGF5ZXIgZnJvbSAnfi9jb21wb25lbnRzL1BsYXllcic7XG5pbXBvcnQgRW5lbXkgZnJvbSAnfi9jb21wb25lbnRzL0VuZW15JztcbmltcG9ydCBMaWZlYmFyIGZyb20gJ34vY29tcG9uZW50cy9MaWZlYmFyJztcbmltcG9ydCBCdWxsZXRzU3RvcmUgZnJvbSAnfi9zdG9yZXMvQnVsbGV0c1N0b3JlJztcbmltcG9ydCB7IEtFWV9QQVVTRSwgUEFVU0VfREVMQVkgfSBmcm9tICd+L2NvbnN0cyc7XG5cbmltcG9ydCBBcHBTdGF0ZSBmcm9tICcuJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWluZ1N0YXRlIGV4dGVuZHMgQXBwU3RhdGUge1xuICBwcml2YXRlIHBsYXllcjogUGxheWVyO1xuICBwcml2YXRlIGVuZW15OiBFbmVteTtcbiAgcHJpdmF0ZSBidWxsZXRzU3RvcmU6IEJ1bGxldHNTdG9yZTtcbiAgcHJpdmF0ZSBsaWZlYmFyOiBMaWZlYmFyO1xuXG4gIHByaXZhdGUgaXNQYXVzZTogYm9vbGVhbjtcbiAgcHJpdmF0ZSBpc1JlYWR5VG9DaGFuZ2VJc1BhdXNlOiBib29sZWFuO1xuICBwcml2YXRlIHRpbWVyT2ZJc1BhdXNlOiBOb2RlSlMuVGltZW91dDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ3BsYXlpbmcnO1xuICAgIHRoaXMucGxheWVyID0gbmV3IFBsYXllcigpO1xuICAgIHRoaXMuZW5lbXkgPSBuZXcgRW5lbXkoKTtcbiAgICB0aGlzLmJ1bGxldHNTdG9yZSA9IG5ldyBCdWxsZXRzU3RvcmUoKTtcbiAgICB0aGlzLmxpZmViYXIgPSBuZXcgTGlmZWJhcigpO1xuXG4gICAgdGhpcy5pc1BhdXNlID0gZmFsc2U7XG4gICAgdGhpcy5pc1JlYWR5VG9DaGFuZ2VJc1BhdXNlID0gdHJ1ZTtcbiAgICB0aGlzLnRpbWVyT2ZJc1BhdXNlID0gbnVsbDtcblxuICAgIHRoaXMucGxheWVyLmluaXQoKTtcbiAgICB0aGlzLmVuZW15LmluaXQoKTtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5wcm9jZXNzUGF1c2VDb250cm9sbGVyKCk7XG5cbiAgICBpZiAodGhpcy5pc1BhdXNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5kb0J1bGxldHNGcmFtZUJlaGF2aW9yKCk7XG4gICAgdGhpcy5wbGF5ZXIuZG9GcmFtZUJlaGF2aW9yKCk7XG4gICAgdGhpcy5lbmVteS5kb0ZyYW1lQmVoYXZpb3IoKTtcbiAgICB0aGlzLmxpZmViYXIuZG9GcmFtZUJlaGF2aW9yKCk7XG5cbiAgICBzdXBlci5yZW5kZXIoKTtcbiAgfVxuXG4gIHByaXZhdGUgcHJvY2Vzc1BhdXNlQ29udHJvbGxlcigpIHtcbiAgICBpZiAodGhpcy5rZXlib2FyZC5pc0FjdGl2ZUtleShLRVlfUEFVU0UpKSB7XG4gICAgICBpZiAodGhpcy5pc1JlYWR5VG9DaGFuZ2VJc1BhdXNlKSB7XG4gICAgICAgIHRoaXMuaXNQYXVzZSA9ICF0aGlzLmlzUGF1c2U7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXNSZWFkeVRvQ2hhbmdlSXNQYXVzZSA9IGZhbHNlO1xuXG4gICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lck9mSXNQYXVzZSk7XG4gICAgICB0aGlzLnRpbWVyT2ZJc1BhdXNlID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuaXNSZWFkeVRvQ2hhbmdlSXNQYXVzZSA9IHRydWU7XG4gICAgICB9LCBQQVVTRV9ERUxBWSk7XG4gICAgfVxuICB9XG4gIHByaXZhdGUgZG9CdWxsZXRzRnJhbWVCZWhhdmlvcigpIHtcbiAgICB0aGlzLmJ1bGxldHNTdG9yZS5yZW1vdmVCdWxsZXRzT3V0c2lkZVNjcmVlbigpO1xuICAgIHRoaXMuYnVsbGV0c1N0b3JlLmJ1bGxldHMuZm9yRWFjaCgoYnVsbGV0KSA9PiB7XG4gICAgICBidWxsZXQuZG9GcmFtZUJlaGF2aW9yKCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IE1lbnVPcHRpb24gfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IE1FTlVfT1BUSU9OUzogUmVhZG9ubHk8TWVudU9wdGlvbltdPiA9IFsnbmV3LWdhbWUnLCAnc2V0dGluZ3MnXTtcblxuZXhwb3J0IGNvbnN0IENPTE9SX0NIT1NFTiA9ICcjZjAwJztcbmV4cG9ydCBjb25zdCBDT0xPUl9ERUZBVUxUID0gJyMwMDAnO1xuIiwiaW1wb3J0IFBvaW50IGZyb20gJ34vc3RydWN0cy9Qb2ludCc7XG5pbXBvcnQgU2l6ZSBmcm9tICd+L3N0cnVjdHMvU2l6ZSc7XG5cbmV4cG9ydCBjb25zdCBISU5UX1BPSU5UID0gbmV3IFBvaW50KDIwLCA1NjApO1xuZXhwb3J0IGNvbnN0IEhJTlRfU0laRSA9IG5ldyBTaXplKDQwMCwgMzApO1xuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IFBvaW50IGZyb20gJ34vc3RydWN0cy9Qb2ludCc7XG5pbXBvcnQgU2l6ZSBmcm9tICd+L3N0cnVjdHMvU2l6ZSc7XG5cbmltcG9ydCB7IEhJTlRfUE9JTlQsIEhJTlRfU0laRSB9IGZyb20gJy4uL2NvbnN0cyc7XG5cbmV4cG9ydCBjb25zdCBISU5UID0gbmV3IEdhbWVPYmplY3Qoe1xuICB0ZXh0OiAn0J3QsNC20LzQuNGC0LUgRW50ZXIsINGH0YLQvtCx0Ysg0L/RgNC+0LTQvtC70LbQuNGC0YwnLFxuICBwb2ludDogSElOVF9QT0lOVC5jbG9uZSgpLFxuICBzaXplOiBISU5UX1NJWkUuY2xvbmUoKSxcbn0pO1xuXG5leHBvcnQgY29uc3QgSEVBREVSID0gbmV3IEdhbWVPYmplY3Qoe1xuICB0ZXh0OiAn0JPQu9Cw0LLQvdC+0LUg0LzQtdC90Y4nLFxuICBwb2ludDogbmV3IFBvaW50KDMzMCwgMjYwKSxcbiAgc2l6ZTogbmV3IFNpemUoMTUwLCAzMCksXG59KTtcblxuZXhwb3J0IGNvbnN0IE5FV19HQU1FX0JVVFRPTiA9IG5ldyBHYW1lT2JqZWN0KHtcbiAgdGV4dDogJ9Cd0L7QstCw0Y8g0LjQs9GA0LAnLFxuICBwb2ludDogbmV3IFBvaW50KDM0MCwgMzAwKSxcbiAgc2l6ZTogbmV3IFNpemUoMTAwLCAzMCksXG59KTtcblxuZXhwb3J0IGNvbnN0IFNFVFRJTkdTX0JVVFRPTiA9IG5ldyBHYW1lT2JqZWN0KHtcbiAgdGV4dDogJ9Cd0LDRgdGC0YDQvtC50LrQuCcsXG4gIHBvaW50OiBuZXcgUG9pbnQoMzQwLCAzMzApLFxuICBzaXplOiBuZXcgU2l6ZSgxMDAsIDMwKSxcbn0pO1xuIiwiaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnfi9zdHJ1Y3RzL0dhbWVPYmplY3QnO1xuaW1wb3J0IHsgS0VZX0VOVEVSLCBLRVlfVE9QLCBLRVlfQk9UVE9NLCBLRVlfQVJST1dfVVAsIEtFWV9BUlJPV19ET1dOIH0gZnJvbSAnfi9jb25zdHMnO1xuXG5pbXBvcnQgQXBwU3RhdGUgZnJvbSAnLi4vLic7XG5pbXBvcnQgeyBDT0xPUl9DSE9TRU4sIENPTE9SX0RFRkFVTFQsIE1FTlVfT1BUSU9OUyB9IGZyb20gJy4vY29uc3RzJztcbmltcG9ydCB7IEhFQURFUiwgSElOVCwgTkVXX0dBTUVfQlVUVE9OLCBTRVRUSU5HU19CVVRUT04gfSBmcm9tICcuL2xheW91dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lbnVTdGF0ZSBleHRlbmRzIEFwcFN0YXRlIHtcbiAgcHJpdmF0ZSBuZXdHYW1lQnV0dG9uOiBHYW1lT2JqZWN0O1xuICBwcml2YXRlIHNldHRpbmdzQnV0dG9uOiBHYW1lT2JqZWN0O1xuICBwcml2YXRlIGNob3Nlbk9wdGlvbklkeDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zdGF0ZU5hbWUgPSAnbWVudSc7XG4gICAgdGhpcy5jaG9zZW5PcHRpb25JZHggPSAwO1xuICAgIHRoaXMubmV3R2FtZUJ1dHRvbiA9IE5FV19HQU1FX0JVVFRPTi5jbG9uZSgpO1xuICAgIHRoaXMuc2V0dGluZ3NCdXR0b24gPSBTRVRUSU5HU19CVVRUT04uY2xvbmUoKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IGNob3Nlbk9wdGlvbigpIHtcbiAgICByZXR1cm4gTUVOVV9PUFRJT05TW3RoaXMuY2hvc2VuT3B0aW9uSWR4XTtcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5wcm9jZXNzS2V5Ym9hcmQoKTtcbiAgICB0aGlzLmNoYW5nZUNvbG9yT2ZCdXR0b25zQnlDaG9zZW5PcHRpb24oKTtcbiAgICB0aGlzLmFkZFRvUmVuZGVyRWxlbWVudHMoKTtcbiAgICBzdXBlci5yZW5kZXIoKTtcbiAgfVxuXG4gIHByaXZhdGUgYWRkVG9SZW5kZXJFbGVtZW50cygpIHtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudChISU5UKTtcbiAgICB0aGlzLnZpcnR1YWxET00uYWRkRWxlbWVudChIRUFERVIpO1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KHRoaXMubmV3R2FtZUJ1dHRvbik7XG4gICAgdGhpcy52aXJ0dWFsRE9NLmFkZEVsZW1lbnQodGhpcy5zZXR0aW5nc0J1dHRvbik7XG4gIH1cbiAgcHJpdmF0ZSBwcm9jZXNzS2V5Ym9hcmQoKSB7XG4gICAgdGhpcy5wcm9jZXNzUHJlc3NpbmdFbnRlcigpO1xuICAgIHRoaXMucHJvY2Vzc0tleXNGb3JDaG9pY2VPZk9wdGlvbigpO1xuICB9XG4gIHByaXZhdGUgcHJvY2Vzc1ByZXNzaW5nRW50ZXIoKSB7XG4gICAgaWYgKHRoaXMua2V5Ym9hcmQuaXNBY3RpdmVLZXkoS0VZX0VOVEVSKSkge1xuICAgICAgaWYgKHRoaXMuY2hvc2VuT3B0aW9uID09PSAnbmV3LWdhbWUnKSB7XG4gICAgICAgIHRoaXMuc3RhdGVOYW1lID0gJ3BsYXlpbmcnO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuY2hvc2VuT3B0aW9uID09PSAnc2V0dGluZ3MnKSB7XG4gICAgICAgIHRoaXMuc3RhdGVOYW1lID0gJ3NldHRpbmdzJztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcHJpdmF0ZSBwcm9jZXNzS2V5c0ZvckNob2ljZU9mT3B0aW9uKCkge1xuICAgIHRoaXMucHJvY2Vzc0tleXNGb3JNb3ZlbWVudFRvVG9wKCk7XG4gICAgdGhpcy5wcm9jZXNzS2V5c0Zvck1vdmVtZW50VG9Cb3R0b20oKTtcbiAgfVxuICBwcml2YXRlIHByb2Nlc3NLZXlzRm9yTW92ZW1lbnRUb1RvcCgpIHtcbiAgICBpZiAodGhpcy5rZXlib2FyZC5pc0FjdGl2ZUtleShLRVlfQVJST1dfVVApIHx8IHRoaXMua2V5Ym9hcmQuaXNBY3RpdmVLZXkoS0VZX1RPUCkpIHtcbiAgICAgIHRoaXMuY2hvc2VuT3B0aW9uSWR4ID0gdGhpcy5jaG9zZW5PcHRpb25JZHggPD0gMCA/IDAgOiB0aGlzLmNob3Nlbk9wdGlvbklkeCAtIDE7XG4gICAgfVxuICB9XG4gIHByaXZhdGUgcHJvY2Vzc0tleXNGb3JNb3ZlbWVudFRvQm90dG9tKCkge1xuICAgIGlmICh0aGlzLmtleWJvYXJkLmlzQWN0aXZlS2V5KEtFWV9BUlJPV19ET1dOKSB8fCB0aGlzLmtleWJvYXJkLmlzQWN0aXZlS2V5KEtFWV9CT1RUT00pKSB7XG4gICAgICBjb25zdCBsYXN0SWR4ID0gTUVOVV9PUFRJT05TLmxlbmd0aCAtIDE7XG5cbiAgICAgIHRoaXMuY2hvc2VuT3B0aW9uSWR4ID0gdGhpcy5jaG9zZW5PcHRpb25JZHggPj0gbGFzdElkeCA/IGxhc3RJZHggOiB0aGlzLmNob3Nlbk9wdGlvbklkeCArIDE7XG4gICAgfVxuICB9XG4gIHByaXZhdGUgY2hhbmdlQ29sb3JPZkJ1dHRvbnNCeUNob3Nlbk9wdGlvbigpIHtcbiAgICB0aGlzLm5ld0dhbWVCdXR0b24udGV4dENvbG9yID0gdGhpcy5jaG9zZW5PcHRpb24gPT09ICduZXctZ2FtZScgPyBDT0xPUl9DSE9TRU4gOiBDT0xPUl9ERUZBVUxUO1xuICAgIHRoaXMuc2V0dGluZ3NCdXR0b24udGV4dENvbG9yID0gdGhpcy5jaG9zZW5PcHRpb24gPT09ICdzZXR0aW5ncycgPyBDT0xPUl9DSE9TRU4gOiBDT0xPUl9ERUZBVUxUO1xuICB9XG59XG4iLCJpbXBvcnQgR2FtZU9iamVjdCBmcm9tICd+L3N0cnVjdHMvR2FtZU9iamVjdCc7XG5cbmltcG9ydCB7IEhJTlRfUE9JTlQsIEhJTlRfU0laRSB9IGZyb20gJy4uL2NvbnN0cyc7XG5cbmV4cG9ydCBjb25zdCBISU5UID0gbmV3IEdhbWVPYmplY3Qoe1xuICB0ZXh0OiAn0J3QsNC20LzQuNGC0LUgRXNjYXBlLCDRh9GC0L7QsdGLINCy0YvQudGC0Lgg0L3QsNC30LDQtCDQsiDQvNC10L3RjicsXG4gIHBvaW50OiBISU5UX1BPSU5ULmNsb25lKCksXG4gIHNpemU6IEhJTlRfU0laRS5jbG9uZSgpLFxufSk7XG4iLCJpbXBvcnQgeyBLRVlfRVNDQVBFIH0gZnJvbSAnfi9jb25zdHMnO1xuXG5pbXBvcnQgQXBwU3RhdGUgZnJvbSAnLi4vLic7XG5pbXBvcnQgeyBISU5UIH0gZnJvbSAnLi9sYXlvdXQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXR0aW5nc1N0YXRlIGV4dGVuZHMgQXBwU3RhdGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuc3RhdGVOYW1lID0gJ3NldHRpbmdzJztcbiAgfVxuXG4gIHB1YmxpYyBkb0ZyYW1lQmVoYXZpb3IoKSB7XG4gICAgdGhpcy5wcm9jZXNzS2V5Ym9hcmQoKTtcbiAgICB0aGlzLmFkZFRvUmVuZGVyRWxlbWVudHMoKTtcblxuICAgIHN1cGVyLnJlbmRlcigpO1xuICB9XG5cbiAgcHJpdmF0ZSBhZGRUb1JlbmRlckVsZW1lbnRzKCkge1xuICAgIHRoaXMudmlydHVhbERPTS5hZGRFbGVtZW50KEhJTlQpO1xuICB9XG4gIHByaXZhdGUgcHJvY2Vzc0tleWJvYXJkKCkge1xuICAgIGlmICh0aGlzLmtleWJvYXJkLmlzQWN0aXZlS2V5KEtFWV9FU0NBUEUpKSB7XG4gICAgICB0aGlzLnN0YXRlTmFtZSA9ICdtZW51JztcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCAnfi9pbmRleC5jc3MnO1xuaW1wb3J0ICd+L2Fzc2V0cy9mb250cy9zdHlsZXNoZWV0LmNzcyc7XG5pbXBvcnQgQXBwIGZyb20gJ34vQXBwJztcblxuY29uc3QgYXBwID0gbmV3IEFwcCgpO1xuXG5hcHAuc3RhcnQoKTtcbiIsImltcG9ydCBSZW5kZXJBUEkgZnJvbSAnfi9SZW5kZXJBUEknO1xuaW1wb3J0IGdldFJlbmRlckFQSSBmcm9tICd+L1JlbmRlckFQSS9nZXRSZW5kZXJBUEknO1xuXG5pbXBvcnQgR2FtZUxvb3AgZnJvbSAnLi9HYW1lTG9vcCc7XG5pbXBvcnQgR2FtZVdpbmRvdyBmcm9tICcuL0dhbWVXaW5kb3cnO1xuaW1wb3J0IEFwcFN0YXRlIGZyb20gJy4vQXBwU3RhdGUnO1xuaW1wb3J0IHsgQXBwU3RhdGVOYW1lIH0gZnJvbSAnLi9BcHBTdGF0ZS90eXBlcyc7XG5pbXBvcnQgUGxheWluZ1N0YXRlIGZyb20gJy4vQXBwU3RhdGUvUGxheWluZ1N0YXRlJztcbmltcG9ydCBNZW51U3RhdGUgZnJvbSAnLi9BcHBTdGF0ZS9NZW51U3RhdGUnO1xuaW1wb3J0IFNldHRpbmdzU3RhdGUgZnJvbSAnLi9BcHBTdGF0ZS9TZXR0aW5nc1N0YXRlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEFwcDtcbiAgcHJpdmF0ZSByZW5kZXJBUEk6IFJlbmRlckFQSTtcbiAgcHJpdmF0ZSBnYW1lTG9vcDogR2FtZUxvb3A7XG5cbiAgcHJpdmF0ZSBzdGF0ZTogQXBwU3RhdGU7XG4gIHByaXZhdGUgc3RhdGVOYW1lQmVmb3JlOiBBcHBTdGF0ZU5hbWU7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFBcHAuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMucmVuZGVyQVBJID0gZ2V0UmVuZGVyQVBJKCk7XG4gICAgICB0aGlzLmdhbWVMb29wID0gbmV3IEdhbWVMb29wKCk7XG5cbiAgICAgIHRoaXMuc3RhdGVOYW1lID0gJ21lbnUnO1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcblxuICAgICAgQXBwLmluc3RhbmNlID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gQXBwLmluc3RhbmNlO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXQgc3RhdGVOYW1lKCk6IEFwcFN0YXRlTmFtZSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUuc3RhdGVOYW1lO1xuICB9XG4gIHByaXZhdGUgc2V0IHN0YXRlTmFtZShuZXdTdGF0ZTogQXBwU3RhdGVOYW1lKSB7XG4gICAgc3dpdGNoIChuZXdTdGF0ZSkge1xuICAgICAgY2FzZSAncGxheWluZyc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBQbGF5aW5nU3RhdGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdzZXR0aW5ncyc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBTZXR0aW5nc1N0YXRlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnbWVudSc6IHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBNZW51U3RhdGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXJ0KCkge1xuICAgIGNvbnN0IGdhbWVXaW5kb3cgPSBuZXcgR2FtZVdpbmRvdyh0aGlzLnJlbmRlckFQSSk7XG5cbiAgICBnYW1lV2luZG93LnJlbmRlcigpO1xuXG4gICAgdGhpcy5nYW1lTG9vcC5zdGFydCgoKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlLmRvRnJhbWVCZWhhdmlvcigpO1xuICAgICAgdGhpcy5hcHBseU5ld1N0YXRlKCk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGFwcGx5TmV3U3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGVOYW1lICE9PSB0aGlzLnN0YXRlTmFtZUJlZm9yZSkge1xuICAgICAgdGhpcy5zdGF0ZU5hbWVCZWZvcmUgPSB0aGlzLnN0YXRlLnN0YXRlTmFtZTtcbiAgICAgIHRoaXMuc3RhdGVOYW1lID0gdGhpcy5zdGF0ZS5zdGF0ZU5hbWU7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF81X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF84X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMThfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNDdfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiaGFzaCIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF82X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF85X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzE4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzIxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yM19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yNl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzI3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMjhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yOV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzMzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zNV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zOF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzM5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80MV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80NF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80N19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzQ4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNDlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81MF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzUxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81M19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNTVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81Nl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzU3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNThfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81OV9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0IiwidGFnTmFtZSIsInRvVXBwZXJDYXNlIiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJuYyIsImxvY2FscyIsIlJPT1RfSUQiLCJHQU1FX1dJTkRPV19JRCIsIngiLCJ5IiwiY2xvbmUiLCJQb2ludCIsInZhbHVlT2YiLCJ3aWR0aCIsImhlaWdodCIsIlNpemUiLCJTcGVlZCIsIkdBTUVfV0lORE9XX1dJRFRIIiwiUExBWUVSX0lOSVRJQUxfUE9JTlQiLCJQTEFZRVJfSU5JVElBTF9TSVpFIiwiUExBWUVSX0lOSVRJQUxfU1BFRUQiLCJFTkVNWV9JTklUSUFMX1BPSU5UIiwiRU5FTVlfSU5JVElBTF9TSVpFIiwiRU5FTVlfSU5JVElBTF9TUEVFRCIsIlBMQVlFUl9IRUFMVEhfSUNPTl9TSVpFIiwiQlVMTEVUX1NJWkUiLCJLRVlfVE9QIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIktFWV9MRUZUIiwiS0VZX0JPVFRPTSIsIktFWV9SSUdIVCIsIktFWV9BVFRBQ0siLCJLRVlfUEFVU0UiLCJjb25zb2xlIiwibG9nIiwicm9vdENTUyIsIndpbmRvd0NTUyIsImFkZElkIiwiSVNfVEVTVF9NT0RFIiwiZGF0YXNldCIsInRlc3RpZCIsImNyZWF0ZVdpbmRvdyIsInJvb3QiLCJnZXRFbGVtZW50QnlJZCIsIm5hbWUiLCJnYW1lT2JqZWN0IiwiaW5uZXJFbGVtZW50Iiwic2V0RWxlbWVudCIsImh0bWwiLCJhcHBseUFjdHVhbENoYW5nZSIsImlubmVySFRNTCIsInRleHQiLCJwb2ludCIsInNpemUiLCJiYWNrZ3JvdW5kIiwidGV4dENvbG9yIiwiekluZGV4IiwiZWxlbWVudHNNYXAiLCJCcm93c2VyQVBJIiwiaW5zdGFuY2UiLCJ3aW5kb3dOb2RlIiwicmVuZGVyR2FtZVdpbmRvdyIsImJvZHkiLCJjbGVhckFsbCIsInJlbmRlciIsImNoYW5nZXMiLCJmb3JFYWNoIiwiY2hhbmdlIiwiYWN0aW9uIiwibW91bnQiLCJ1bm1vdW50IiwidmlldyIsIm5ld1ZpZXciLCJvbGRWaWV3IiwiZ2V0UmVuZGVyQVBJIiwidHlwZSIsIlJFTkRFUl9BUEkiLCJmcmFtZUR1cmF0aW9uIiwiR2FtZUxvb3AiLCJsYXN0RnJhbWVUaW1lIiwiRGF0ZSIsIm5vdyIsInN0YXJ0IiwiZm4iLCJsb29wIiwiY3VycmVudFRpbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJyZW5kZXJBUEkiLCJHYW1lV2luZG93IiwiZGVzdHJveSIsImhhbmRsZUVycm9yc0ZvckRlc3Ryb3kiLCJsYXN0VW5pcXVlSWQiLCJhbW91bnRHaXZlblNhbWVJZCIsInN0cnVjdCIsInNwZWVkIiwibW92ZSIsIkdhbWVPYmplY3QiLCJWaXJ0dWFsRE9NIiwicHJldkVsZW1lbnRzIiwibmV4dEVsZW1lbnRzIiwiYWRkRWxlbWVudCIsInByZXBhcmVGb3JOZXdGcmFtZSIsImNsb25lTmV4dEVsZW1lbnRzSW50b1ByZXZFbGVtZW50cyIsImdldENoYW5nZXMiLCJhbGxJZHMiLCJnZXRBbGxJZHNGcm9tTWFwcyIsImdldENoYW5nZUZvckVsZW1lbnRCeUlkIiwiYWxsSWRzU2V0IiwiU2V0IiwiYWRkIiwicHJldkVsZW1lbnQiLCJuZXh0RWxlbWVudCIsImlzRWxlbWVudFVwZGF0ZWQiLCJwcm9wS2V5IiwidmlydHVhbERPTSIsIkJ1bGxldCIsImNyZWF0ZUluaXRpYWxTcHJpdGUiLCJkb0ZyYW1lQmVoYXZpb3IiLCJwcm9jZXNzTW92ZW1lbnQiLCJhZGRUb05leHRSZW5kZXIiLCJLZXlib2FyZCIsImtleXMiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiZGVsZXRlIiwiaXNBY3RpdmVLZXkiLCJoYXMiLCJCdWxsZXRzU3RvcmUiLCJpbm5lckJ1bGxldHMiLCJyZW1vdmVCdWxsZXRzT3V0c2lkZVNjcmVlbiIsImZpbHRlciIsImJ1bGxldCIsInJlbW92ZUVsZW1lbnQiLCJpbm5lckJ1bGxldCIsImJ1bGxldFR5cGUiLCJidWxsZXRzU3RvcmUiLCJ0cnlUb0NvbGxpZGUiLCJhY3Rpb25XaGVuQ29sbGlkZSIsImJ1bGxldHMiLCJvYmoxIiwib2JqMiIsImxlZnQxIiwicmlnaHQxIiwibGVmdDIiLCJyaWdodDIiLCJ0b3AxIiwiYm90dG9tMSIsInRvcDIiLCJib3R0b20yIiwiaGVhbHRoIiwia2V5Ym9hcmRDb250cm9sbGVyIiwiYnVsbGV0c0NvbGxpZGVyIiwibGFzdEF0dGFja1RpbWUiLCJzdGF0ZU5hbWUiLCJrZXlib2FyZCIsIm5lZWRQcmV2ZW50VG9wIiwibmVlZFByZXZlbnRMZWZ0IiwibmVlZFByZXZlbnRCb3R0b20iLCJuZWVkUHJldmVudFJpZ2h0Iiwic3BlZWRYIiwic3BlZWRZIiwicmVnaXN0ZXJEYW1hZ2UiLCJhdHRhY2siLCJmcmFtZXNDb3VudCIsImlzSW52aXNpYmxlUGxheWVyIiwiUGxheWluZ0FmdGVyRGFtYWdlU3RhdGUiLCJNQVhfRlJBTUVTX0JFRk9SRV9UT0dHTEVfSVNfSU5WSVNJQkxFX1BMQVlFUiIsIlBsYXllciIsInN0YXRlTmFtZUJlZm9yZSIsImluaXQiLCJjbGVhclRpbWVvdXQiLCJ0aW1lciIsImlubmVySGVhbHRoIiwic3RhdGUiLCJhcHBseU5ld0hlYWx0aCIsImFwcGx5TmV3U3RhdGUiLCJuZXdTdGF0ZSIsInNldFRpbWVvdXQiLCJNYXRoIiwiYWJzIiwiZW5lbXlQb2ludCIsImVuZW15U2l6ZSIsImZsb29yIiwicmFuZG9tIiwiRW5lbXkiLCJMaWZlYmFyIiwiZW5lbXkiLCJwbGF5ZXIiLCJlbXB0eUJhciIsImVuZW15RW1wdHlIZWFsdGgiLCJlbmVteUhlYWx0aCIsIk9GRlNFVCIsImhlYWx0aHMiLCJpc0xpZmUiLCJhZGRUb1JlbmRlckVtcHR5QmFyIiwiYWRkVG9SZW5kZXJFbmVteUVtcHR5SGVhbHRoIiwiYWRkVG9SZW5kZXJFbmVteUhlYWx0aCIsImFkZFRvUmVuZGVyUGxheWVySGVhbHRoIiwibGlmZWJhciIsImlzUGF1c2UiLCJpc1JlYWR5VG9DaGFuZ2VJc1BhdXNlIiwidGltZXJPZklzUGF1c2UiLCJwcm9jZXNzUGF1c2VDb250cm9sbGVyIiwiZG9CdWxsZXRzRnJhbWVCZWhhdmlvciIsIk1FTlVfT1BUSU9OUyIsIkNPTE9SX0NIT1NFTiIsIkNPTE9SX0RFRkFVTFQiLCJISU5UX1BPSU5UIiwiSElOVF9TSVpFIiwiSElOVCIsIkhFQURFUiIsIk5FV19HQU1FX0JVVFRPTiIsIlNFVFRJTkdTX0JVVFRPTiIsImNob3Nlbk9wdGlvbklkeCIsIm5ld0dhbWVCdXR0b24iLCJzZXR0aW5nc0J1dHRvbiIsInByb2Nlc3NLZXlib2FyZCIsImNoYW5nZUNvbG9yT2ZCdXR0b25zQnlDaG9zZW5PcHRpb24iLCJhZGRUb1JlbmRlckVsZW1lbnRzIiwicHJvY2Vzc1ByZXNzaW5nRW50ZXIiLCJwcm9jZXNzS2V5c0ZvckNob2ljZU9mT3B0aW9uIiwiY2hvc2VuT3B0aW9uIiwicHJvY2Vzc0tleXNGb3JNb3ZlbWVudFRvVG9wIiwicHJvY2Vzc0tleXNGb3JNb3ZlbWVudFRvQm90dG9tIiwibGFzdElkeCIsIkFwcCIsImdhbWVMb29wIl0sInNvdXJjZVJvb3QiOiIifQ==